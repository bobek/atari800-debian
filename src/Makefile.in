# Makefile.in generated by automake 1.15.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@




VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = $(am__EXEEXT_1)
noinst_PROGRAMS = $(am__EXEEXT_2)
@CONFIGURE_TARGET_LIBATARI800_TRUE@am__append_1 = libatari800_test guess_settings
@CONFIGURE_HOST_JAVANVM_FALSE@@CONFIGURE_TARGET_ANDROID_FALSE@@CONFIGURE_TARGET_LIBATARI800_FALSE@am__append_2 = atari800
@A8_USE_SDL_TRUE@am__append_3 = sdl/init.c sdl/init.h
@A8_USE_SDL_TRUE@@CONFIGURE_HOST_WIN_TRUE@am__append_4 = sdl/SDL_win32_main.c
@A8_USE_SDL_TRUE@@CONFIGURE_HOST_WIN_TRUE@am__append_5 = -Dmain=SDL_main
@WITH_SOUND_TRUE@am__append_6 = \
@WITH_SOUND_TRUE@	pokeysnd.c pokeysnd.h \
@WITH_SOUND_TRUE@	mzpokeysnd.c mzpokeysnd.h \
@WITH_SOUND_TRUE@	remez.c remez.h

@WITH_SOUND_SDL_TRUE@am__append_7 = sound.c sound.h sdl/sound.c
@WITH_SOUND_FALCON_TRUE@am__append_8 = sound.c falcon/sound.c
@WITH_SOUND_JAVANVM_TRUE@am__append_9 = sound.c javanvm/sound.c
@WITH_SOUND_DOSSB_TRUE@am__append_10 = sound.c dos/sound_dos.c dos/dos_sb.c dos/dos_sb.h
@WITH_SOUND_OSS_TRUE@am__append_11 = sound.c sound_oss.c
@WITH_SOUND_WIN_TRUE@am__append_12 = win32/sound.c
@WITH_SOUND_LIBATARI800_TRUE@am__append_13 = sound.c libatari800/sound.c libatari800/sound.h
@WANT_POKEYREC_TRUE@am__append_14 = pokeyrec.c pokeyrec.h
@WITH_FILE_EXPORT_TRUE@am__append_15 = file_export.c file_export.h
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@am__append_16 = codecs/container.c codecs/container.h
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_SOUND_TRUE@am__append_17 = codecs/container_wav.c codecs/container_wav.h \
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_SOUND_TRUE@	codecs/audio.c codecs/audio.h \
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_SOUND_TRUE@	codecs/audio_pcm.c codecs/audio_pcm.h \
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_SOUND_TRUE@	codecs/audio_adpcm.c codecs/audio_adpcm.h \
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_SOUND_TRUE@	codecs/audio_mulaw.c codecs/audio_mulaw.h

@WITH_AUDIO_CODEC_MP3_TRUE@@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_SOUND_TRUE@am__append_18 = codecs/audio_mp3.c codecs/audio_mp3.h \
@WITH_AUDIO_CODEC_MP3_TRUE@@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_SOUND_TRUE@	codecs/container_mp3.c codecs/container_mp3.h

@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_VIDEO_RECORDING_TRUE@am__append_19 = codecs/container_avi.c codecs/container_avi.h \
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_VIDEO_RECORDING_TRUE@	codecs/video.c codecs/video.h \
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_VIDEO_RECORDING_TRUE@	codecs/video_mrle.c codecs/video_mrle.h

@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_VIDEO_CODEC_PNG_TRUE@@WITH_VIDEO_RECORDING_TRUE@am__append_20 = codecs/video_mpng.c codecs/video_mpng.h
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_VIDEO_CODEC_ZMBV_TRUE@@WITH_VIDEO_RECORDING_TRUE@am__append_21 = codecs/video_zmbv.c codecs/video_zmbv.h
@CONFIGURE_TARGET_FALCON_TRUE@am__append_22 = \
@CONFIGURE_TARGET_FALCON_TRUE@	falcon/main.c falcon/c2p_uni.asm falcon/c2p_unid.asm falcon/videl.asm falcon/ikbd.asm \
@CONFIGURE_TARGET_FALCON_TRUE@	falcon/res.h falcon/xcb.h falcon/jclkcook.h

@CONFIGURE_TARGET_PS2_TRUE@am__append_23 = atari_ps2.c
@CONFIGURE_TARGET_PS2_TRUE@am__append_24 = ps2kbd.s usbd.s audsrv.s
@CONFIGURE_TARGET_RPI_TRUE@am__append_25 = atari_rpi.c gles2/video.c sdl/main.c sdl/input.c sdl/input.h
@CONFIGURE_TARGET_WINDX_TRUE@am__append_26 = libwin32.a win32/atari.ro
@CONFIGURE_TARGET_X11_TRUE@am__append_27 = atari_x11.c
@WITH_VIDEO_JAVANVM_TRUE@am__append_28 = javanvm/main.c javanvm/javanvm.h javanvm/video.c javanvm/video.h javanvm/input.c javanvm/input.h
@WITH_VIDEO_SDL_TRUE@am__append_29 = videomode.c videomode.h \
@WITH_VIDEO_SDL_TRUE@	sdl/main.c sdl/video.c sdl/video.h \
@WITH_VIDEO_SDL_TRUE@	sdl/video_sw.c sdl/video_sw.h sdl/input.c \
@WITH_VIDEO_SDL_TRUE@	sdl/input.h sdl/palette.c sdl/palette.h \
@WITH_VIDEO_SDL_TRUE@	pbi_proto80.c pbi_proto80.h af80.c af80.h \
@WITH_VIDEO_SDL_TRUE@	bit3.c bit3.h
@WITH_VIDEO_DOSVGA_TRUE@am__append_30 = dos/atari_vga.c dos/vga_gfx.c dos/vga_gfx.h dos/vga_asm.s dos/dos_ints.h
@WITH_VIDEO_CURSES_TRUE@am__append_31 = atari_curses.c
@WITH_VIDEO_NO_TRUE@am__append_32 = atari_basic.c
# These objects are not compiled when --with-video=no
@WITH_VIDEO_NO_FALSE@am__append_33 = input.c input.h statesav.c statesav.h
@WITH_VIDEO_LIBATARI800_FALSE@@WITH_VIDEO_NO_FALSE@am__append_34 = ui_basic.c ui_basic.h ui.c ui.h
# These objects are not compiled when --with-video=no or --enable-cursesbasic=no
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@am__append_35 = \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	artifact.c artifact.h \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	colours.c colours.h \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	colours_ntsc.c colours_ntsc.h \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	colours_pal.c colours_pal.h \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	colours_external.c colours_external.h \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	screen.c screen.h \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	codecs/image.c codecs/image.h \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	codecs/image_pcx.c codecs/image_pcx.h

@WANT_CURSES_BASIC_FALSE@@WITH_LIBPNG_TRUE@@WITH_VIDEO_NO_FALSE@am__append_36 = codecs/image_png.c codecs/image_png.h
@WANT_CURSES_BASIC_FALSE@@WANT_NEW_CYCLE_EXACT_TRUE@@WITH_VIDEO_NO_FALSE@am__append_37 = cycle_map.c cycle_map.h
@WANT_EMUOS_ALTIRRA_TRUE@am__append_38 = \
@WANT_EMUOS_ALTIRRA_TRUE@	roms/altirraos_800.c roms/altirraos_800.h \
@WANT_EMUOS_ALTIRRA_TRUE@	roms/altirraos_xl.c roms/altirraos_xl.h \
@WANT_EMUOS_ALTIRRA_TRUE@	roms/altirra_basic.c roms/altirra_basic.h

@WANT_PBI_MIO_TRUE@am__append_39 = pbi_mio.c pbi_mio.h
@WANT_PBI_BB_TRUE@am__append_40 = pbi_bb.c pbi_bb.h
@WANT_PBI_MIO_OR_BB_TRUE@am__append_41 = pbi_scsi.c pbi_scsi.h
@WANT_PBI_XLD_TRUE@@WITH_SOUND_TRUE@am__append_42 = pbi_xld.c pbi_xld.h
@WANT_VOICEBOX_TRUE@@WITH_SOUND_TRUE@am__append_43 = voicebox.c voicebox.h
@WANT_PBI_XLD_OR_VOICEBOX_TRUE@@WITH_SOUND_TRUE@am__append_44 = votrax.c votrax.h votraxsnd.c votraxsnd.h
@WANT_IDE_TRUE@am__append_45 = ide.c ide.h ide_internal.h
@WITH_OPENGL_TRUE@am__append_46 = sdl/video_gl.c sdl/video_gl.h
@WANT_FALCON_CPUASM_TRUE@am__append_47 = falcon/cpu_m68k.asm
@WANT_XEP80_EMULATION_TRUE@am__append_48 = xep80.c xep80.h xep80_fonts.c xep80_fonts.h
@WANT_NTSC_FILTER_TRUE@am__append_49 = \
@WANT_NTSC_FILTER_TRUE@	filter_ntsc.c filter_ntsc.h \
@WANT_NTSC_FILTER_TRUE@	atari_ntsc/atari_ntsc.c atari_ntsc/atari_ntsc.h \
@WANT_NTSC_FILTER_TRUE@	atari_ntsc/atari_ntsc_config.h atari_ntsc/atari_ntsc_impl.h

@WANT_PAL_BLENDING_TRUE@am__append_50 = pal_blending.c pal_blending.h
@WANT_R_IO_DEVICE_TRUE@am__append_51 = rdevice.c rdevice.h
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/sdl.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__include_HEADERS_DIST) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(docdir)" "$(DESTDIR)$(includedir)"
LIBRARIES = $(lib_LIBRARIES) $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libatari800_a_AR = $(AR) $(ARFLAGS)
libatari800_a_LIBADD =
am__libatari800_a_SOURCES_DIST = libatari800/libatari800.h \
	libatari800/api.c libatari800/cpu_crash.h libatari800/main.c \
	libatari800/main.h libatari800/init.c libatari800/init.h \
	libatari800/exit.c libatari800/input.c libatari800/input.h \
	libatari800/video.c libatari800/video.h libatari800/statesav.c \
	libatari800/statesav.h libatari800/sound.c libatari800/sound.h \
	platform.h pcjoy.h akey.h afile.c afile.h antic.c antic.h \
	atari.c atari.h binload.c binload.h cartridge.c cartridge.h \
	cartridge_info.c cartridge_info.h cassette.c cassette.h \
	compfile.c compfile.h cfg.c cfg.h cpu.c cpu.h crc32.c crc32.h \
	devices.c devices.h esc.c esc.h gtia.c gtia.h img_tape.c \
	img_tape.h log.c log.h memory.c memory.h monitor.c monitor.h \
	pbi.c pbi.h pia.c pia.h pokey.c pokey.h roms/altirra_5200_os.c \
	roms/altirra_5200_os.h rtime.c rtime.h sio.c sio.h sysrom.c \
	sysrom.h util.c util.h sdl/init.c sdl/init.h \
	sdl/SDL_win32_main.c pokeysnd.c pokeysnd.h mzpokeysnd.c \
	mzpokeysnd.h remez.c remez.h sound.c sound.h sdl/sound.c \
	falcon/sound.c javanvm/sound.c dos/sound_dos.c dos/dos_sb.c \
	dos/dos_sb.h sound_oss.c win32/sound.c pokeyrec.c pokeyrec.h \
	file_export.c file_export.h codecs/container.c \
	codecs/container.h codecs/container_wav.c \
	codecs/container_wav.h codecs/audio.c codecs/audio.h \
	codecs/audio_pcm.c codecs/audio_pcm.h codecs/audio_adpcm.c \
	codecs/audio_adpcm.h codecs/audio_mulaw.c codecs/audio_mulaw.h \
	codecs/audio_mp3.c codecs/audio_mp3.h codecs/container_mp3.c \
	codecs/container_mp3.h codecs/container_avi.c \
	codecs/container_avi.h codecs/video.c codecs/video.h \
	codecs/video_mrle.c codecs/video_mrle.h codecs/video_mpng.c \
	codecs/video_mpng.h codecs/video_zmbv.c codecs/video_zmbv.h \
	falcon/main.c falcon/c2p_uni.asm falcon/c2p_unid.asm \
	falcon/videl.asm falcon/ikbd.asm falcon/res.h falcon/xcb.h \
	falcon/jclkcook.h atari_ps2.c atari_rpi.c gles2/video.c \
	sdl/main.c sdl/input.c sdl/input.h atari_x11.c javanvm/main.c \
	javanvm/javanvm.h javanvm/video.c javanvm/video.h \
	javanvm/input.c javanvm/input.h videomode.c videomode.h \
	sdl/video.c sdl/video.h sdl/video_sw.c sdl/video_sw.h \
	sdl/palette.c sdl/palette.h pbi_proto80.c pbi_proto80.h af80.c \
	af80.h bit3.c bit3.h dos/atari_vga.c dos/vga_gfx.c \
	dos/vga_gfx.h dos/vga_asm.s dos/dos_ints.h atari_curses.c \
	atari_basic.c input.c input.h statesav.c statesav.h ui_basic.c \
	ui_basic.h ui.c ui.h artifact.c artifact.h colours.c colours.h \
	colours_ntsc.c colours_ntsc.h colours_pal.c colours_pal.h \
	colours_external.c colours_external.h screen.c screen.h \
	codecs/image.c codecs/image.h codecs/image_pcx.c \
	codecs/image_pcx.h codecs/image_png.c codecs/image_png.h \
	cycle_map.c cycle_map.h roms/altirraos_800.c \
	roms/altirraos_800.h roms/altirraos_xl.c roms/altirraos_xl.h \
	roms/altirra_basic.c roms/altirra_basic.h pbi_mio.c pbi_mio.h \
	pbi_bb.c pbi_bb.h pbi_scsi.c pbi_scsi.h pbi_xld.c pbi_xld.h \
	voicebox.c voicebox.h votrax.c votrax.h votraxsnd.c \
	votraxsnd.h ide.c ide.h ide_internal.h sdl/video_gl.c \
	sdl/video_gl.h falcon/cpu_m68k.asm xep80.c xep80.h \
	xep80_fonts.c xep80_fonts.h filter_ntsc.c filter_ntsc.h \
	atari_ntsc/atari_ntsc.c atari_ntsc/atari_ntsc.h \
	atari_ntsc/atari_ntsc_config.h atari_ntsc/atari_ntsc_impl.h \
	pal_blending.c pal_blending.h rdevice.c rdevice.h
am__dirstamp = $(am__leading_dot)dirstamp
@A8_USE_SDL_TRUE@am__objects_1 = sdl/init.$(OBJEXT)
@A8_USE_SDL_TRUE@@CONFIGURE_HOST_WIN_TRUE@am__objects_2 = sdl/SDL_win32_main.$(OBJEXT)
@WITH_SOUND_TRUE@am__objects_3 = pokeysnd.$(OBJEXT) \
@WITH_SOUND_TRUE@	mzpokeysnd.$(OBJEXT) remez.$(OBJEXT)
@WITH_SOUND_SDL_TRUE@am__objects_4 = sound.$(OBJEXT) \
@WITH_SOUND_SDL_TRUE@	sdl/sound.$(OBJEXT)
@WITH_SOUND_FALCON_TRUE@am__objects_5 = sound.$(OBJEXT) \
@WITH_SOUND_FALCON_TRUE@	falcon/sound.$(OBJEXT)
@WITH_SOUND_JAVANVM_TRUE@am__objects_6 = sound.$(OBJEXT) \
@WITH_SOUND_JAVANVM_TRUE@	javanvm/sound.$(OBJEXT)
@WITH_SOUND_DOSSB_TRUE@am__objects_7 = sound.$(OBJEXT) \
@WITH_SOUND_DOSSB_TRUE@	dos/sound_dos.$(OBJEXT) \
@WITH_SOUND_DOSSB_TRUE@	dos/dos_sb.$(OBJEXT)
@WITH_SOUND_OSS_TRUE@am__objects_8 = sound.$(OBJEXT) \
@WITH_SOUND_OSS_TRUE@	sound_oss.$(OBJEXT)
@WITH_SOUND_WIN_TRUE@am__objects_9 = win32/sound.$(OBJEXT)
@WITH_SOUND_LIBATARI800_TRUE@am__objects_10 = sound.$(OBJEXT) \
@WITH_SOUND_LIBATARI800_TRUE@	libatari800/sound.$(OBJEXT)
@WANT_POKEYREC_TRUE@am__objects_11 = pokeyrec.$(OBJEXT)
@WITH_FILE_EXPORT_TRUE@am__objects_12 = file_export.$(OBJEXT)
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@am__objects_13 = codecs/container.$(OBJEXT)
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_SOUND_TRUE@am__objects_14 = codecs/container_wav.$(OBJEXT) \
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_SOUND_TRUE@	codecs/audio.$(OBJEXT) \
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_SOUND_TRUE@	codecs/audio_pcm.$(OBJEXT) \
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_SOUND_TRUE@	codecs/audio_adpcm.$(OBJEXT) \
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_SOUND_TRUE@	codecs/audio_mulaw.$(OBJEXT)
@WITH_AUDIO_CODEC_MP3_TRUE@@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_SOUND_TRUE@am__objects_15 = codecs/audio_mp3.$(OBJEXT) \
@WITH_AUDIO_CODEC_MP3_TRUE@@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_SOUND_TRUE@	codecs/container_mp3.$(OBJEXT)
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_VIDEO_RECORDING_TRUE@am__objects_16 = codecs/container_avi.$(OBJEXT) \
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_VIDEO_RECORDING_TRUE@	codecs/video.$(OBJEXT) \
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_VIDEO_RECORDING_TRUE@	codecs/video_mrle.$(OBJEXT)
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_VIDEO_CODEC_PNG_TRUE@@WITH_VIDEO_RECORDING_TRUE@am__objects_17 = codecs/video_mpng.$(OBJEXT)
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_VIDEO_CODEC_ZMBV_TRUE@@WITH_VIDEO_RECORDING_TRUE@am__objects_18 = codecs/video_zmbv.$(OBJEXT)
@CONFIGURE_TARGET_FALCON_TRUE@am__objects_19 = falcon/main.$(OBJEXT) \
@CONFIGURE_TARGET_FALCON_TRUE@	falcon/c2p_uni.$(OBJEXT) \
@CONFIGURE_TARGET_FALCON_TRUE@	falcon/c2p_unid.$(OBJEXT) \
@CONFIGURE_TARGET_FALCON_TRUE@	falcon/videl.$(OBJEXT) \
@CONFIGURE_TARGET_FALCON_TRUE@	falcon/ikbd.$(OBJEXT)
@CONFIGURE_TARGET_PS2_TRUE@am__objects_20 = atari_ps2.$(OBJEXT)
@CONFIGURE_TARGET_RPI_TRUE@am__objects_21 = atari_rpi.$(OBJEXT) \
@CONFIGURE_TARGET_RPI_TRUE@	gles2/video.$(OBJEXT) \
@CONFIGURE_TARGET_RPI_TRUE@	sdl/main.$(OBJEXT) \
@CONFIGURE_TARGET_RPI_TRUE@	sdl/input.$(OBJEXT)
@CONFIGURE_TARGET_X11_TRUE@am__objects_22 = atari_x11.$(OBJEXT)
@WITH_VIDEO_JAVANVM_TRUE@am__objects_23 = javanvm/main.$(OBJEXT) \
@WITH_VIDEO_JAVANVM_TRUE@	javanvm/video.$(OBJEXT) \
@WITH_VIDEO_JAVANVM_TRUE@	javanvm/input.$(OBJEXT)
@WITH_VIDEO_SDL_TRUE@am__objects_24 = videomode.$(OBJEXT) \
@WITH_VIDEO_SDL_TRUE@	sdl/main.$(OBJEXT) sdl/video.$(OBJEXT) \
@WITH_VIDEO_SDL_TRUE@	sdl/video_sw.$(OBJEXT) \
@WITH_VIDEO_SDL_TRUE@	sdl/input.$(OBJEXT) sdl/palette.$(OBJEXT) \
@WITH_VIDEO_SDL_TRUE@	pbi_proto80.$(OBJEXT) af80.$(OBJEXT) \
@WITH_VIDEO_SDL_TRUE@	bit3.$(OBJEXT)
@WITH_VIDEO_DOSVGA_TRUE@am__objects_25 = dos/atari_vga.$(OBJEXT) \
@WITH_VIDEO_DOSVGA_TRUE@	dos/vga_gfx.$(OBJEXT) \
@WITH_VIDEO_DOSVGA_TRUE@	dos/vga_asm.$(OBJEXT)
@WITH_VIDEO_CURSES_TRUE@am__objects_26 = atari_curses.$(OBJEXT)
@WITH_VIDEO_NO_TRUE@am__objects_27 = atari_basic.$(OBJEXT)
@WITH_VIDEO_NO_FALSE@am__objects_28 = input.$(OBJEXT) \
@WITH_VIDEO_NO_FALSE@	statesav.$(OBJEXT)
@WITH_VIDEO_LIBATARI800_FALSE@@WITH_VIDEO_NO_FALSE@am__objects_29 = ui_basic.$(OBJEXT) \
@WITH_VIDEO_LIBATARI800_FALSE@@WITH_VIDEO_NO_FALSE@	ui.$(OBJEXT)
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@am__objects_30 = artifact.$(OBJEXT) \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	colours.$(OBJEXT) \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	colours_ntsc.$(OBJEXT) \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	colours_pal.$(OBJEXT) \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	colours_external.$(OBJEXT) \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	screen.$(OBJEXT) \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	codecs/image.$(OBJEXT) \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	codecs/image_pcx.$(OBJEXT)
@WANT_CURSES_BASIC_FALSE@@WITH_LIBPNG_TRUE@@WITH_VIDEO_NO_FALSE@am__objects_31 = codecs/image_png.$(OBJEXT)
@WANT_CURSES_BASIC_FALSE@@WANT_NEW_CYCLE_EXACT_TRUE@@WITH_VIDEO_NO_FALSE@am__objects_32 = cycle_map.$(OBJEXT)
@WANT_EMUOS_ALTIRRA_TRUE@am__objects_33 =  \
@WANT_EMUOS_ALTIRRA_TRUE@	roms/altirraos_800.$(OBJEXT) \
@WANT_EMUOS_ALTIRRA_TRUE@	roms/altirraos_xl.$(OBJEXT) \
@WANT_EMUOS_ALTIRRA_TRUE@	roms/altirra_basic.$(OBJEXT)
@WANT_PBI_MIO_TRUE@am__objects_34 = pbi_mio.$(OBJEXT)
@WANT_PBI_BB_TRUE@am__objects_35 = pbi_bb.$(OBJEXT)
@WANT_PBI_MIO_OR_BB_TRUE@am__objects_36 = pbi_scsi.$(OBJEXT)
@WANT_PBI_XLD_TRUE@@WITH_SOUND_TRUE@am__objects_37 =  \
@WANT_PBI_XLD_TRUE@@WITH_SOUND_TRUE@	pbi_xld.$(OBJEXT)
@WANT_VOICEBOX_TRUE@@WITH_SOUND_TRUE@am__objects_38 =  \
@WANT_VOICEBOX_TRUE@@WITH_SOUND_TRUE@	voicebox.$(OBJEXT)
@WANT_PBI_XLD_OR_VOICEBOX_TRUE@@WITH_SOUND_TRUE@am__objects_39 = votrax.$(OBJEXT) \
@WANT_PBI_XLD_OR_VOICEBOX_TRUE@@WITH_SOUND_TRUE@	votraxsnd.$(OBJEXT)
@WANT_IDE_TRUE@am__objects_40 = ide.$(OBJEXT)
@WITH_OPENGL_TRUE@am__objects_41 = sdl/video_gl.$(OBJEXT)
@WANT_FALCON_CPUASM_TRUE@am__objects_42 = falcon/cpu_m68k.$(OBJEXT)
@WANT_XEP80_EMULATION_TRUE@am__objects_43 = xep80.$(OBJEXT) \
@WANT_XEP80_EMULATION_TRUE@	xep80_fonts.$(OBJEXT)
@WANT_NTSC_FILTER_TRUE@am__objects_44 = filter_ntsc.$(OBJEXT) \
@WANT_NTSC_FILTER_TRUE@	atari_ntsc/atari_ntsc.$(OBJEXT)
@WANT_PAL_BLENDING_TRUE@am__objects_45 = pal_blending.$(OBJEXT)
@WANT_R_IO_DEVICE_TRUE@am__objects_46 = rdevice.$(OBJEXT)
am__objects_47 = afile.$(OBJEXT) antic.$(OBJEXT) atari.$(OBJEXT) \
	binload.$(OBJEXT) cartridge.$(OBJEXT) cartridge_info.$(OBJEXT) \
	cassette.$(OBJEXT) compfile.$(OBJEXT) cfg.$(OBJEXT) \
	cpu.$(OBJEXT) crc32.$(OBJEXT) devices.$(OBJEXT) esc.$(OBJEXT) \
	gtia.$(OBJEXT) img_tape.$(OBJEXT) log.$(OBJEXT) \
	memory.$(OBJEXT) monitor.$(OBJEXT) pbi.$(OBJEXT) pia.$(OBJEXT) \
	pokey.$(OBJEXT) roms/altirra_5200_os.$(OBJEXT) rtime.$(OBJEXT) \
	sio.$(OBJEXT) sysrom.$(OBJEXT) util.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2) $(am__objects_3) $(am__objects_4) \
	$(am__objects_5) $(am__objects_6) $(am__objects_7) \
	$(am__objects_8) $(am__objects_9) $(am__objects_10) \
	$(am__objects_11) $(am__objects_12) $(am__objects_13) \
	$(am__objects_14) $(am__objects_15) $(am__objects_16) \
	$(am__objects_17) $(am__objects_18) $(am__objects_19) \
	$(am__objects_20) $(am__objects_21) $(am__objects_22) \
	$(am__objects_23) $(am__objects_24) $(am__objects_25) \
	$(am__objects_26) $(am__objects_27) $(am__objects_28) \
	$(am__objects_29) $(am__objects_30) $(am__objects_31) \
	$(am__objects_32) $(am__objects_33) $(am__objects_34) \
	$(am__objects_35) $(am__objects_36) $(am__objects_37) \
	$(am__objects_38) $(am__objects_39) $(am__objects_40) \
	$(am__objects_41) $(am__objects_42) $(am__objects_43) \
	$(am__objects_44) $(am__objects_45) $(am__objects_46)
@CONFIGURE_TARGET_LIBATARI800_TRUE@am_libatari800_a_OBJECTS =  \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/api.$(OBJEXT) \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/main.$(OBJEXT) \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/init.$(OBJEXT) \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/exit.$(OBJEXT) \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/input.$(OBJEXT) \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/video.$(OBJEXT) \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/statesav.$(OBJEXT) \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/sound.$(OBJEXT) \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	$(am__objects_47)
libatari800_a_OBJECTS = $(am_libatari800_a_OBJECTS)
libwin32_a_AR = $(AR) $(ARFLAGS)
libwin32_a_LIBADD =
am__libwin32_a_SOURCES_DIST = win32/atari_win32.c win32/atari_win32.h \
	win32/screen_win32.c win32/screen_win32.h \
	win32/render_direct3d.c win32/render_direct3d.h \
	win32/render_directdraw.c win32/render_directdraw.h \
	win32/render_gdi.c win32/render_gdi.h win32/render_gdiplus.c \
	win32/render_gdiplus.h win32/main.c win32/main.h \
	win32/main_menu.h win32/keyboard.c win32/keyboard.h \
	win32/joystick.c win32/joystick.h
@CONFIGURE_TARGET_WINDX_TRUE@am_libwin32_a_OBJECTS = win32/libwin32_a-atari_win32.$(OBJEXT) \
@CONFIGURE_TARGET_WINDX_TRUE@	win32/libwin32_a-screen_win32.$(OBJEXT) \
@CONFIGURE_TARGET_WINDX_TRUE@	win32/libwin32_a-render_direct3d.$(OBJEXT) \
@CONFIGURE_TARGET_WINDX_TRUE@	win32/libwin32_a-render_directdraw.$(OBJEXT) \
@CONFIGURE_TARGET_WINDX_TRUE@	win32/libwin32_a-render_gdi.$(OBJEXT) \
@CONFIGURE_TARGET_WINDX_TRUE@	win32/libwin32_a-render_gdiplus.$(OBJEXT) \
@CONFIGURE_TARGET_WINDX_TRUE@	win32/libwin32_a-main.$(OBJEXT) \
@CONFIGURE_TARGET_WINDX_TRUE@	win32/libwin32_a-keyboard.$(OBJEXT) \
@CONFIGURE_TARGET_WINDX_TRUE@	win32/libwin32_a-joystick.$(OBJEXT)
libwin32_a_OBJECTS = $(am_libwin32_a_OBJECTS)
@CONFIGURE_HOST_JAVANVM_FALSE@@CONFIGURE_TARGET_ANDROID_FALSE@@CONFIGURE_TARGET_LIBATARI800_FALSE@am__EXEEXT_1 = atari800$(EXEEXT)
@CONFIGURE_TARGET_LIBATARI800_TRUE@am__EXEEXT_2 =  \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800_test$(EXEEXT) \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	guess_settings$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am__atari800_SOURCES_DIST = platform.h pcjoy.h akey.h afile.c afile.h \
	antic.c antic.h atari.c atari.h binload.c binload.h \
	cartridge.c cartridge.h cartridge_info.c cartridge_info.h \
	cassette.c cassette.h compfile.c compfile.h cfg.c cfg.h cpu.c \
	cpu.h crc32.c crc32.h devices.c devices.h esc.c esc.h gtia.c \
	gtia.h img_tape.c img_tape.h log.c log.h memory.c memory.h \
	monitor.c monitor.h pbi.c pbi.h pia.c pia.h pokey.c pokey.h \
	roms/altirra_5200_os.c roms/altirra_5200_os.h rtime.c rtime.h \
	sio.c sio.h sysrom.c sysrom.h util.c util.h sdl/init.c \
	sdl/init.h sdl/SDL_win32_main.c pokeysnd.c pokeysnd.h \
	mzpokeysnd.c mzpokeysnd.h remez.c remez.h sound.c sound.h \
	sdl/sound.c falcon/sound.c javanvm/sound.c dos/sound_dos.c \
	dos/dos_sb.c dos/dos_sb.h sound_oss.c win32/sound.c \
	libatari800/sound.c libatari800/sound.h pokeyrec.c pokeyrec.h \
	file_export.c file_export.h codecs/container.c \
	codecs/container.h codecs/container_wav.c \
	codecs/container_wav.h codecs/audio.c codecs/audio.h \
	codecs/audio_pcm.c codecs/audio_pcm.h codecs/audio_adpcm.c \
	codecs/audio_adpcm.h codecs/audio_mulaw.c codecs/audio_mulaw.h \
	codecs/audio_mp3.c codecs/audio_mp3.h codecs/container_mp3.c \
	codecs/container_mp3.h codecs/container_avi.c \
	codecs/container_avi.h codecs/video.c codecs/video.h \
	codecs/video_mrle.c codecs/video_mrle.h codecs/video_mpng.c \
	codecs/video_mpng.h codecs/video_zmbv.c codecs/video_zmbv.h \
	falcon/main.c falcon/c2p_uni.asm falcon/c2p_unid.asm \
	falcon/videl.asm falcon/ikbd.asm falcon/res.h falcon/xcb.h \
	falcon/jclkcook.h atari_ps2.c atari_rpi.c gles2/video.c \
	sdl/main.c sdl/input.c sdl/input.h atari_x11.c javanvm/main.c \
	javanvm/javanvm.h javanvm/video.c javanvm/video.h \
	javanvm/input.c javanvm/input.h videomode.c videomode.h \
	sdl/video.c sdl/video.h sdl/video_sw.c sdl/video_sw.h \
	sdl/palette.c sdl/palette.h pbi_proto80.c pbi_proto80.h af80.c \
	af80.h bit3.c bit3.h dos/atari_vga.c dos/vga_gfx.c \
	dos/vga_gfx.h dos/vga_asm.s dos/dos_ints.h atari_curses.c \
	atari_basic.c input.c input.h statesav.c statesav.h ui_basic.c \
	ui_basic.h ui.c ui.h artifact.c artifact.h colours.c colours.h \
	colours_ntsc.c colours_ntsc.h colours_pal.c colours_pal.h \
	colours_external.c colours_external.h screen.c screen.h \
	codecs/image.c codecs/image.h codecs/image_pcx.c \
	codecs/image_pcx.h codecs/image_png.c codecs/image_png.h \
	cycle_map.c cycle_map.h roms/altirraos_800.c \
	roms/altirraos_800.h roms/altirraos_xl.c roms/altirraos_xl.h \
	roms/altirra_basic.c roms/altirra_basic.h pbi_mio.c pbi_mio.h \
	pbi_bb.c pbi_bb.h pbi_scsi.c pbi_scsi.h pbi_xld.c pbi_xld.h \
	voicebox.c voicebox.h votrax.c votrax.h votraxsnd.c \
	votraxsnd.h ide.c ide.h ide_internal.h sdl/video_gl.c \
	sdl/video_gl.h falcon/cpu_m68k.asm xep80.c xep80.h \
	xep80_fonts.c xep80_fonts.h filter_ntsc.c filter_ntsc.h \
	atari_ntsc/atari_ntsc.c atari_ntsc/atari_ntsc.h \
	atari_ntsc/atari_ntsc_config.h atari_ntsc/atari_ntsc_impl.h \
	pal_blending.c pal_blending.h rdevice.c rdevice.h
@A8_USE_SDL_TRUE@am__objects_48 = sdl/atari800-init.$(OBJEXT)
@A8_USE_SDL_TRUE@@CONFIGURE_HOST_WIN_TRUE@am__objects_49 = sdl/atari800-SDL_win32_main.$(OBJEXT)
@WITH_SOUND_TRUE@am__objects_50 = atari800-pokeysnd.$(OBJEXT) \
@WITH_SOUND_TRUE@	atari800-mzpokeysnd.$(OBJEXT) \
@WITH_SOUND_TRUE@	atari800-remez.$(OBJEXT)
@WITH_SOUND_SDL_TRUE@am__objects_51 = atari800-sound.$(OBJEXT) \
@WITH_SOUND_SDL_TRUE@	sdl/atari800-sound.$(OBJEXT)
@WITH_SOUND_FALCON_TRUE@am__objects_52 = atari800-sound.$(OBJEXT) \
@WITH_SOUND_FALCON_TRUE@	falcon/atari800-sound.$(OBJEXT)
@WITH_SOUND_JAVANVM_TRUE@am__objects_53 = atari800-sound.$(OBJEXT) \
@WITH_SOUND_JAVANVM_TRUE@	javanvm/atari800-sound.$(OBJEXT)
@WITH_SOUND_DOSSB_TRUE@am__objects_54 = atari800-sound.$(OBJEXT) \
@WITH_SOUND_DOSSB_TRUE@	dos/atari800-sound_dos.$(OBJEXT) \
@WITH_SOUND_DOSSB_TRUE@	dos/atari800-dos_sb.$(OBJEXT)
@WITH_SOUND_OSS_TRUE@am__objects_55 = atari800-sound.$(OBJEXT) \
@WITH_SOUND_OSS_TRUE@	atari800-sound_oss.$(OBJEXT)
@WITH_SOUND_WIN_TRUE@am__objects_56 = win32/atari800-sound.$(OBJEXT)
@WITH_SOUND_LIBATARI800_TRUE@am__objects_57 =  \
@WITH_SOUND_LIBATARI800_TRUE@	atari800-sound.$(OBJEXT) \
@WITH_SOUND_LIBATARI800_TRUE@	libatari800/atari800-sound.$(OBJEXT)
@WANT_POKEYREC_TRUE@am__objects_58 = atari800-pokeyrec.$(OBJEXT)
@WITH_FILE_EXPORT_TRUE@am__objects_59 =  \
@WITH_FILE_EXPORT_TRUE@	atari800-file_export.$(OBJEXT)
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@am__objects_60 = codecs/atari800-container.$(OBJEXT)
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_SOUND_TRUE@am__objects_61 = codecs/atari800-container_wav.$(OBJEXT) \
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_SOUND_TRUE@	codecs/atari800-audio.$(OBJEXT) \
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_SOUND_TRUE@	codecs/atari800-audio_pcm.$(OBJEXT) \
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_SOUND_TRUE@	codecs/atari800-audio_adpcm.$(OBJEXT) \
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_SOUND_TRUE@	codecs/atari800-audio_mulaw.$(OBJEXT)
@WITH_AUDIO_CODEC_MP3_TRUE@@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_SOUND_TRUE@am__objects_62 = codecs/atari800-audio_mp3.$(OBJEXT) \
@WITH_AUDIO_CODEC_MP3_TRUE@@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_SOUND_TRUE@	codecs/atari800-container_mp3.$(OBJEXT)
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_VIDEO_RECORDING_TRUE@am__objects_63 = codecs/atari800-container_avi.$(OBJEXT) \
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_VIDEO_RECORDING_TRUE@	codecs/atari800-video.$(OBJEXT) \
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_VIDEO_RECORDING_TRUE@	codecs/atari800-video_mrle.$(OBJEXT)
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_VIDEO_CODEC_PNG_TRUE@@WITH_VIDEO_RECORDING_TRUE@am__objects_64 = codecs/atari800-video_mpng.$(OBJEXT)
@WITH_FILE_EXPORT_TRUE@@WITH_MULTIMEDIA_TRUE@@WITH_VIDEO_CODEC_ZMBV_TRUE@@WITH_VIDEO_RECORDING_TRUE@am__objects_65 = codecs/atari800-video_zmbv.$(OBJEXT)
@CONFIGURE_TARGET_FALCON_TRUE@am__objects_66 =  \
@CONFIGURE_TARGET_FALCON_TRUE@	falcon/atari800-main.$(OBJEXT) \
@CONFIGURE_TARGET_FALCON_TRUE@	falcon/c2p_uni.$(OBJEXT) \
@CONFIGURE_TARGET_FALCON_TRUE@	falcon/c2p_unid.$(OBJEXT) \
@CONFIGURE_TARGET_FALCON_TRUE@	falcon/videl.$(OBJEXT) \
@CONFIGURE_TARGET_FALCON_TRUE@	falcon/ikbd.$(OBJEXT)
@CONFIGURE_TARGET_PS2_TRUE@am__objects_67 =  \
@CONFIGURE_TARGET_PS2_TRUE@	atari800-atari_ps2.$(OBJEXT)
@CONFIGURE_TARGET_RPI_TRUE@am__objects_68 =  \
@CONFIGURE_TARGET_RPI_TRUE@	atari800-atari_rpi.$(OBJEXT) \
@CONFIGURE_TARGET_RPI_TRUE@	gles2/atari800-video.$(OBJEXT) \
@CONFIGURE_TARGET_RPI_TRUE@	sdl/atari800-main.$(OBJEXT) \
@CONFIGURE_TARGET_RPI_TRUE@	sdl/atari800-input.$(OBJEXT)
@CONFIGURE_TARGET_X11_TRUE@am__objects_69 =  \
@CONFIGURE_TARGET_X11_TRUE@	atari800-atari_x11.$(OBJEXT)
@WITH_VIDEO_JAVANVM_TRUE@am__objects_70 =  \
@WITH_VIDEO_JAVANVM_TRUE@	javanvm/atari800-main.$(OBJEXT) \
@WITH_VIDEO_JAVANVM_TRUE@	javanvm/atari800-video.$(OBJEXT) \
@WITH_VIDEO_JAVANVM_TRUE@	javanvm/atari800-input.$(OBJEXT)
@WITH_VIDEO_SDL_TRUE@am__objects_71 = atari800-videomode.$(OBJEXT) \
@WITH_VIDEO_SDL_TRUE@	sdl/atari800-main.$(OBJEXT) \
@WITH_VIDEO_SDL_TRUE@	sdl/atari800-video.$(OBJEXT) \
@WITH_VIDEO_SDL_TRUE@	sdl/atari800-video_sw.$(OBJEXT) \
@WITH_VIDEO_SDL_TRUE@	sdl/atari800-input.$(OBJEXT) \
@WITH_VIDEO_SDL_TRUE@	sdl/atari800-palette.$(OBJEXT) \
@WITH_VIDEO_SDL_TRUE@	atari800-pbi_proto80.$(OBJEXT) \
@WITH_VIDEO_SDL_TRUE@	atari800-af80.$(OBJEXT) \
@WITH_VIDEO_SDL_TRUE@	atari800-bit3.$(OBJEXT)
@WITH_VIDEO_DOSVGA_TRUE@am__objects_72 =  \
@WITH_VIDEO_DOSVGA_TRUE@	dos/atari800-atari_vga.$(OBJEXT) \
@WITH_VIDEO_DOSVGA_TRUE@	dos/atari800-vga_gfx.$(OBJEXT) \
@WITH_VIDEO_DOSVGA_TRUE@	dos/vga_asm.$(OBJEXT)
@WITH_VIDEO_CURSES_TRUE@am__objects_73 =  \
@WITH_VIDEO_CURSES_TRUE@	atari800-atari_curses.$(OBJEXT)
@WITH_VIDEO_NO_TRUE@am__objects_74 = atari800-atari_basic.$(OBJEXT)
@WITH_VIDEO_NO_FALSE@am__objects_75 = atari800-input.$(OBJEXT) \
@WITH_VIDEO_NO_FALSE@	atari800-statesav.$(OBJEXT)
@WITH_VIDEO_LIBATARI800_FALSE@@WITH_VIDEO_NO_FALSE@am__objects_76 = atari800-ui_basic.$(OBJEXT) \
@WITH_VIDEO_LIBATARI800_FALSE@@WITH_VIDEO_NO_FALSE@	atari800-ui.$(OBJEXT)
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@am__objects_77 = atari800-artifact.$(OBJEXT) \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	atari800-colours.$(OBJEXT) \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	atari800-colours_ntsc.$(OBJEXT) \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	atari800-colours_pal.$(OBJEXT) \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	atari800-colours_external.$(OBJEXT) \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	atari800-screen.$(OBJEXT) \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	codecs/atari800-image.$(OBJEXT) \
@WANT_CURSES_BASIC_FALSE@@WITH_VIDEO_NO_FALSE@	codecs/atari800-image_pcx.$(OBJEXT)
@WANT_CURSES_BASIC_FALSE@@WITH_LIBPNG_TRUE@@WITH_VIDEO_NO_FALSE@am__objects_78 = codecs/atari800-image_png.$(OBJEXT)
@WANT_CURSES_BASIC_FALSE@@WANT_NEW_CYCLE_EXACT_TRUE@@WITH_VIDEO_NO_FALSE@am__objects_79 = atari800-cycle_map.$(OBJEXT)
@WANT_EMUOS_ALTIRRA_TRUE@am__objects_80 = roms/atari800-altirraos_800.$(OBJEXT) \
@WANT_EMUOS_ALTIRRA_TRUE@	roms/atari800-altirraos_xl.$(OBJEXT) \
@WANT_EMUOS_ALTIRRA_TRUE@	roms/atari800-altirra_basic.$(OBJEXT)
@WANT_PBI_MIO_TRUE@am__objects_81 = atari800-pbi_mio.$(OBJEXT)
@WANT_PBI_BB_TRUE@am__objects_82 = atari800-pbi_bb.$(OBJEXT)
@WANT_PBI_MIO_OR_BB_TRUE@am__objects_83 = atari800-pbi_scsi.$(OBJEXT)
@WANT_PBI_XLD_TRUE@@WITH_SOUND_TRUE@am__objects_84 = atari800-pbi_xld.$(OBJEXT)
@WANT_VOICEBOX_TRUE@@WITH_SOUND_TRUE@am__objects_85 = atari800-voicebox.$(OBJEXT)
@WANT_PBI_XLD_OR_VOICEBOX_TRUE@@WITH_SOUND_TRUE@am__objects_86 = atari800-votrax.$(OBJEXT) \
@WANT_PBI_XLD_OR_VOICEBOX_TRUE@@WITH_SOUND_TRUE@	atari800-votraxsnd.$(OBJEXT)
@WANT_IDE_TRUE@am__objects_87 = atari800-ide.$(OBJEXT)
@WITH_OPENGL_TRUE@am__objects_88 = sdl/atari800-video_gl.$(OBJEXT)
@WANT_XEP80_EMULATION_TRUE@am__objects_89 = atari800-xep80.$(OBJEXT) \
@WANT_XEP80_EMULATION_TRUE@	atari800-xep80_fonts.$(OBJEXT)
@WANT_NTSC_FILTER_TRUE@am__objects_90 =  \
@WANT_NTSC_FILTER_TRUE@	atari800-filter_ntsc.$(OBJEXT) \
@WANT_NTSC_FILTER_TRUE@	atari_ntsc/atari800-atari_ntsc.$(OBJEXT)
@WANT_PAL_BLENDING_TRUE@am__objects_91 =  \
@WANT_PAL_BLENDING_TRUE@	atari800-pal_blending.$(OBJEXT)
@WANT_R_IO_DEVICE_TRUE@am__objects_92 = atari800-rdevice.$(OBJEXT)
am_atari800_OBJECTS = atari800-afile.$(OBJEXT) \
	atari800-antic.$(OBJEXT) atari800-atari.$(OBJEXT) \
	atari800-binload.$(OBJEXT) atari800-cartridge.$(OBJEXT) \
	atari800-cartridge_info.$(OBJEXT) atari800-cassette.$(OBJEXT) \
	atari800-compfile.$(OBJEXT) atari800-cfg.$(OBJEXT) \
	atari800-cpu.$(OBJEXT) atari800-crc32.$(OBJEXT) \
	atari800-devices.$(OBJEXT) atari800-esc.$(OBJEXT) \
	atari800-gtia.$(OBJEXT) atari800-img_tape.$(OBJEXT) \
	atari800-log.$(OBJEXT) atari800-memory.$(OBJEXT) \
	atari800-monitor.$(OBJEXT) atari800-pbi.$(OBJEXT) \
	atari800-pia.$(OBJEXT) atari800-pokey.$(OBJEXT) \
	roms/atari800-altirra_5200_os.$(OBJEXT) \
	atari800-rtime.$(OBJEXT) atari800-sio.$(OBJEXT) \
	atari800-sysrom.$(OBJEXT) atari800-util.$(OBJEXT) \
	$(am__objects_48) $(am__objects_49) $(am__objects_50) \
	$(am__objects_51) $(am__objects_52) $(am__objects_53) \
	$(am__objects_54) $(am__objects_55) $(am__objects_56) \
	$(am__objects_57) $(am__objects_58) $(am__objects_59) \
	$(am__objects_60) $(am__objects_61) $(am__objects_62) \
	$(am__objects_63) $(am__objects_64) $(am__objects_65) \
	$(am__objects_66) $(am__objects_67) $(am__objects_68) \
	$(am__objects_69) $(am__objects_70) $(am__objects_71) \
	$(am__objects_72) $(am__objects_73) $(am__objects_74) \
	$(am__objects_75) $(am__objects_76) $(am__objects_77) \
	$(am__objects_78) $(am__objects_79) $(am__objects_80) \
	$(am__objects_81) $(am__objects_82) $(am__objects_83) \
	$(am__objects_84) $(am__objects_85) $(am__objects_86) \
	$(am__objects_87) $(am__objects_88) $(am__objects_42) \
	$(am__objects_89) $(am__objects_90) $(am__objects_91) \
	$(am__objects_92)
atari800_OBJECTS = $(am_atari800_OBJECTS)
atari800_DEPENDENCIES = $(am__append_24) $(am__append_26)
am__guess_settings_SOURCES_DIST = libatari800/guess_settings.c
@CONFIGURE_TARGET_LIBATARI800_TRUE@am_guess_settings_OBJECTS = libatari800/guess_settings-guess_settings.$(OBJEXT)
guess_settings_OBJECTS = $(am_guess_settings_OBJECTS)
@CONFIGURE_TARGET_LIBATARI800_TRUE@guess_settings_DEPENDENCIES =  \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800.a
guess_settings_LINK = $(CCLD) $(guess_settings_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am__libatari800_test_SOURCES_DIST = libatari800/libatari800_test.c
@CONFIGURE_TARGET_LIBATARI800_TRUE@am_libatari800_test_OBJECTS = libatari800/libatari800_test-libatari800_test.$(OBJEXT)
libatari800_test_OBJECTS = $(am_libatari800_test_OBJECTS)
@CONFIGURE_TARGET_LIBATARI800_TRUE@libatari800_test_DEPENDENCIES =  \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800.a
libatari800_test_LINK = $(CCLD) $(libatari800_test_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CCASCOMPILE = $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)
AM_V_CCAS = $(am__v_CCAS_@AM_V@)
am__v_CCAS_ = $(am__v_CCAS_@AM_DEFAULT_V@)
am__v_CCAS_0 = @echo "  CCAS    " $@;
am__v_CCAS_1 = 
SOURCES = $(libatari800_a_SOURCES) $(libwin32_a_SOURCES) \
	$(atari800_SOURCES) $(guess_settings_SOURCES) \
	$(libatari800_test_SOURCES)
DIST_SOURCES = $(am__libatari800_a_SOURCES_DIST) \
	$(am__libwin32_a_SOURCES_DIST) $(am__atari800_SOURCES_DIST) \
	$(am__guess_settings_SOURCES_DIST) \
	$(am__libatari800_test_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(doc_DATA)
am__include_HEADERS_DIST = libatari800/libatari800.h
HEADERS = $(include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/depcomp install-sh
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CFLAGS_NOANSI = @CFLAGS_NOANSI@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JAVACFLAGS = @JAVACFLAGS@
JAVAFLAGS = @JAVAFLAGS@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NDK_BUILD = @NDK_BUILD@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SDL_CFLAGS = @SDL_CFLAGS@
SDL_CONFIG = @SDL_CONFIG@
SDL_LIBS = @SDL_LIBS@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
WINDRES = @WINDRES@
XMKMF = @XMKMF@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_WINDRES = @ac_ct_WINDRES@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = subdir-objects
@CONFIGURE_TARGET_LIBATARI800_FALSE@TARGET_BASE_NAME = atari800
@CONFIGURE_TARGET_LIBATARI800_TRUE@TARGET_BASE_NAME = libatari800.a
TARGET = $(TARGET_BASE_NAME)
man1dir = $(mandir)/man1
SUFFIXES = .c .cpp .s .o .h .asm
doc_DATA = 
atari800_CPPFLAGS = $(am__append_5)
@CONFIGURE_TARGET_LIBATARI800_TRUE@lib_LIBRARIES = libatari800.a
@CONFIGURE_TARGET_LIBATARI800_TRUE@include_HEADERS = libatari800/libatari800.h
@CONFIGURE_TARGET_LIBATARI800_TRUE@libatari800_a_SOURCES =  \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/libatari800.h \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/api.c \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/cpu_crash.h \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/main.c \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/main.h \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/init.c \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/init.h \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/exit.c \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/input.c \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/input.h \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/video.c \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/video.h \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/statesav.c \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/statesav.h \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/sound.c \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	libatari800/sound.h \
@CONFIGURE_TARGET_LIBATARI800_TRUE@	$(atari800_SOURCES)
@CONFIGURE_TARGET_LIBATARI800_TRUE@libatari800_test_SOURCES = libatari800/libatari800_test.c
@CONFIGURE_TARGET_LIBATARI800_TRUE@libatari800_test_CFLAGS = -Ilibatari800
@CONFIGURE_TARGET_LIBATARI800_TRUE@libatari800_test_LDADD = libatari800.a
@CONFIGURE_TARGET_LIBATARI800_TRUE@guess_settings_SOURCES = libatari800/guess_settings.c
@CONFIGURE_TARGET_LIBATARI800_TRUE@guess_settings_CFLAGS = -Ilibatari800
@CONFIGURE_TARGET_LIBATARI800_TRUE@guess_settings_LDADD = libatari800.a
@CONFIGURE_HOST_JAVANVM_TRUE@@CONFIGURE_TARGET_LIBATARI800_FALSE@JAVA = java
@CONFIGURE_HOST_JAVANVM_TRUE@@CONFIGURE_TARGET_LIBATARI800_FALSE@JAVAC = javac
atari800_SOURCES = platform.h pcjoy.h akey.h afile.c afile.h antic.c \
	antic.h atari.c atari.h binload.c binload.h cartridge.c \
	cartridge.h cartridge_info.c cartridge_info.h cassette.c \
	cassette.h compfile.c compfile.h cfg.c cfg.h cpu.c cpu.h \
	crc32.c crc32.h devices.c devices.h esc.c esc.h gtia.c gtia.h \
	img_tape.c img_tape.h log.c log.h memory.c memory.h monitor.c \
	monitor.h pbi.c pbi.h pia.c pia.h pokey.c pokey.h \
	roms/altirra_5200_os.c roms/altirra_5200_os.h rtime.c rtime.h \
	sio.c sio.h sysrom.c sysrom.h util.c util.h $(am__append_3) \
	$(am__append_4) $(am__append_6) $(am__append_7) \
	$(am__append_8) $(am__append_9) $(am__append_10) \
	$(am__append_11) $(am__append_12) $(am__append_13) \
	$(am__append_14) $(am__append_15) $(am__append_16) \
	$(am__append_17) $(am__append_18) $(am__append_19) \
	$(am__append_20) $(am__append_21) $(am__append_22) \
	$(am__append_23) $(am__append_25) $(am__append_27) \
	$(am__append_28) $(am__append_29) $(am__append_30) \
	$(am__append_31) $(am__append_32) $(am__append_33) \
	$(am__append_34) $(am__append_35) $(am__append_36) \
	$(am__append_37) $(am__append_38) $(am__append_39) \
	$(am__append_40) $(am__append_41) $(am__append_42) \
	$(am__append_43) $(am__append_44) $(am__append_45) \
	$(am__append_46) $(am__append_47) $(am__append_48) \
	$(am__append_49) $(am__append_50) $(am__append_51)
atari800_LDADD = $(am__append_24) $(am__append_26)
@CONFIGURE_TARGET_WINDX_TRUE@noinst_LIBRARIES = libwin32.a
@CONFIGURE_TARGET_WINDX_TRUE@libwin32_a_SOURCES = \
@CONFIGURE_TARGET_WINDX_TRUE@	win32/atari_win32.c win32/atari_win32.h \
@CONFIGURE_TARGET_WINDX_TRUE@	win32/screen_win32.c win32/screen_win32.h \
@CONFIGURE_TARGET_WINDX_TRUE@	win32/render_direct3d.c win32/render_direct3d.h \
@CONFIGURE_TARGET_WINDX_TRUE@	win32/render_directdraw.c win32/render_directdraw.h \
@CONFIGURE_TARGET_WINDX_TRUE@	win32/render_gdi.c win32/render_gdi.h \
@CONFIGURE_TARGET_WINDX_TRUE@	win32/render_gdiplus.c win32/render_gdiplus.h \
@CONFIGURE_TARGET_WINDX_TRUE@	win32/main.c win32/main.h win32/main_menu.h \
@CONFIGURE_TARGET_WINDX_TRUE@	win32/keyboard.c win32/keyboard.h \
@CONFIGURE_TARGET_WINDX_TRUE@	win32/joystick.c win32/joystick.h

# A special rule for win32 to not compile with -ansi -pedantic
@CONFIGURE_TARGET_WINDX_TRUE@libwin32_a_CFLAGS = $(CFLAGS_NOANSI)
@CONFIGURE_HOST_JAVANVM_FALSE@RUNTIME = 
@CONFIGURE_HOST_JAVANVM_TRUE@RUNTIME = _runtime
CLEANFILES = *.o *.a *.class .manifest $(TARGET) \
	$(TARGET_BASE_NAME).jar $(TARGET_BASE_NAME)_runtime.java core \
	*.bak *~ roms/*.o roms/*.bak roms/*~ dos/*.o dos/*.bak dos/*~ \
	falcon/*.o falcon/*.bak falcon/*~ sdl/*.o sdl/*.bak sdl/*~ \
	win32/*.o win32/*.ro win32/*.bak win32/*~ javanvm/*.o \
	javanvm/*.bak javanvm/*~ atari_ntsc/*.o atari_ntsc/*.bak \
	atari_ntsc/*~ android/libs android/obj android/bin android/gen \
	libatari800/*.o libatari800/*.bak libatari800/*~
DISTCLEANFILES = Makefile configure config.log config.status config.h \
	android/jni/Android.mk autom4te.cache
EXTRA_DIST = $(doc_DATA) atari800.man joycfg.c mkimg.c win32/atari.rc \
	win32/atari1.ico vtxsmpls.inc javanvm/UnixRuntime.patch \
	javanvm/atari800.java macosx wince win32/msc amiga \
	android/AndroidManifest.xml android/build.xml \
	android/project.properties android/jni/Android.mk.in \
	android/jni/Application.mk android/jni/keys.inc \
	android/jni/androidinput.c android/jni/androidinput.h \
	android/jni/graphics.c android/jni/graphics.h \
	android/jni/jni.c android/jni/platform.c android/jni/sound.c \
	android/res/ android/src/A800Renderer.java \
	android/src/A800view.java android/src/AudioThread.java \
	android/src/FileSelector.java \
	android/src/KeymapPreference.java \
	android/src/MainActivity.java android/src/Preferences.java \
	android/src/SliderPreference.java $(empty)
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .s .o .h .asm .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libatari800/$(am__dirstamp):
	@$(MKDIR_P) libatari800
	@: > libatari800/$(am__dirstamp)
libatari800/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libatari800/$(DEPDIR)
	@: > libatari800/$(DEPDIR)/$(am__dirstamp)
libatari800/api.$(OBJEXT): libatari800/$(am__dirstamp) \
	libatari800/$(DEPDIR)/$(am__dirstamp)
libatari800/main.$(OBJEXT): libatari800/$(am__dirstamp) \
	libatari800/$(DEPDIR)/$(am__dirstamp)
libatari800/init.$(OBJEXT): libatari800/$(am__dirstamp) \
	libatari800/$(DEPDIR)/$(am__dirstamp)
libatari800/exit.$(OBJEXT): libatari800/$(am__dirstamp) \
	libatari800/$(DEPDIR)/$(am__dirstamp)
libatari800/input.$(OBJEXT): libatari800/$(am__dirstamp) \
	libatari800/$(DEPDIR)/$(am__dirstamp)
libatari800/video.$(OBJEXT): libatari800/$(am__dirstamp) \
	libatari800/$(DEPDIR)/$(am__dirstamp)
libatari800/statesav.$(OBJEXT): libatari800/$(am__dirstamp) \
	libatari800/$(DEPDIR)/$(am__dirstamp)
libatari800/sound.$(OBJEXT): libatari800/$(am__dirstamp) \
	libatari800/$(DEPDIR)/$(am__dirstamp)
roms/$(am__dirstamp):
	@$(MKDIR_P) roms
	@: > roms/$(am__dirstamp)
roms/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) roms/$(DEPDIR)
	@: > roms/$(DEPDIR)/$(am__dirstamp)
roms/altirra_5200_os.$(OBJEXT): roms/$(am__dirstamp) \
	roms/$(DEPDIR)/$(am__dirstamp)
sdl/$(am__dirstamp):
	@$(MKDIR_P) sdl
	@: > sdl/$(am__dirstamp)
sdl/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) sdl/$(DEPDIR)
	@: > sdl/$(DEPDIR)/$(am__dirstamp)
sdl/init.$(OBJEXT): sdl/$(am__dirstamp) sdl/$(DEPDIR)/$(am__dirstamp)
sdl/SDL_win32_main.$(OBJEXT): sdl/$(am__dirstamp) \
	sdl/$(DEPDIR)/$(am__dirstamp)
sdl/sound.$(OBJEXT): sdl/$(am__dirstamp) sdl/$(DEPDIR)/$(am__dirstamp)
falcon/$(am__dirstamp):
	@$(MKDIR_P) falcon
	@: > falcon/$(am__dirstamp)
falcon/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) falcon/$(DEPDIR)
	@: > falcon/$(DEPDIR)/$(am__dirstamp)
falcon/sound.$(OBJEXT): falcon/$(am__dirstamp) \
	falcon/$(DEPDIR)/$(am__dirstamp)
javanvm/$(am__dirstamp):
	@$(MKDIR_P) javanvm
	@: > javanvm/$(am__dirstamp)
javanvm/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) javanvm/$(DEPDIR)
	@: > javanvm/$(DEPDIR)/$(am__dirstamp)
javanvm/sound.$(OBJEXT): javanvm/$(am__dirstamp) \
	javanvm/$(DEPDIR)/$(am__dirstamp)
dos/$(am__dirstamp):
	@$(MKDIR_P) dos
	@: > dos/$(am__dirstamp)
dos/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) dos/$(DEPDIR)
	@: > dos/$(DEPDIR)/$(am__dirstamp)
dos/sound_dos.$(OBJEXT): dos/$(am__dirstamp) \
	dos/$(DEPDIR)/$(am__dirstamp)
dos/dos_sb.$(OBJEXT): dos/$(am__dirstamp) \
	dos/$(DEPDIR)/$(am__dirstamp)
win32/$(am__dirstamp):
	@$(MKDIR_P) win32
	@: > win32/$(am__dirstamp)
win32/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) win32/$(DEPDIR)
	@: > win32/$(DEPDIR)/$(am__dirstamp)
win32/sound.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)
codecs/$(am__dirstamp):
	@$(MKDIR_P) codecs
	@: > codecs/$(am__dirstamp)
codecs/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) codecs/$(DEPDIR)
	@: > codecs/$(DEPDIR)/$(am__dirstamp)
codecs/container.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/container_wav.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/audio.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/audio_pcm.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/audio_adpcm.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/audio_mulaw.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/audio_mp3.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/container_mp3.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/container_avi.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/video.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/video_mrle.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/video_mpng.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/video_zmbv.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
falcon/main.$(OBJEXT): falcon/$(am__dirstamp) \
	falcon/$(DEPDIR)/$(am__dirstamp)
falcon/c2p_uni.$(OBJEXT): falcon/$(am__dirstamp) \
	falcon/$(DEPDIR)/$(am__dirstamp)
falcon/c2p_unid.$(OBJEXT): falcon/$(am__dirstamp) \
	falcon/$(DEPDIR)/$(am__dirstamp)
falcon/videl.$(OBJEXT): falcon/$(am__dirstamp) \
	falcon/$(DEPDIR)/$(am__dirstamp)
falcon/ikbd.$(OBJEXT): falcon/$(am__dirstamp) \
	falcon/$(DEPDIR)/$(am__dirstamp)
gles2/$(am__dirstamp):
	@$(MKDIR_P) gles2
	@: > gles2/$(am__dirstamp)
gles2/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gles2/$(DEPDIR)
	@: > gles2/$(DEPDIR)/$(am__dirstamp)
gles2/video.$(OBJEXT): gles2/$(am__dirstamp) \
	gles2/$(DEPDIR)/$(am__dirstamp)
sdl/main.$(OBJEXT): sdl/$(am__dirstamp) sdl/$(DEPDIR)/$(am__dirstamp)
sdl/input.$(OBJEXT): sdl/$(am__dirstamp) sdl/$(DEPDIR)/$(am__dirstamp)
javanvm/main.$(OBJEXT): javanvm/$(am__dirstamp) \
	javanvm/$(DEPDIR)/$(am__dirstamp)
javanvm/video.$(OBJEXT): javanvm/$(am__dirstamp) \
	javanvm/$(DEPDIR)/$(am__dirstamp)
javanvm/input.$(OBJEXT): javanvm/$(am__dirstamp) \
	javanvm/$(DEPDIR)/$(am__dirstamp)
sdl/video.$(OBJEXT): sdl/$(am__dirstamp) sdl/$(DEPDIR)/$(am__dirstamp)
sdl/video_sw.$(OBJEXT): sdl/$(am__dirstamp) \
	sdl/$(DEPDIR)/$(am__dirstamp)
sdl/palette.$(OBJEXT): sdl/$(am__dirstamp) \
	sdl/$(DEPDIR)/$(am__dirstamp)
dos/atari_vga.$(OBJEXT): dos/$(am__dirstamp) \
	dos/$(DEPDIR)/$(am__dirstamp)
dos/vga_gfx.$(OBJEXT): dos/$(am__dirstamp) \
	dos/$(DEPDIR)/$(am__dirstamp)
dos/vga_asm.$(OBJEXT): dos/$(am__dirstamp) \
	dos/$(DEPDIR)/$(am__dirstamp)
codecs/image.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/image_pcx.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/image_png.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
roms/altirraos_800.$(OBJEXT): roms/$(am__dirstamp) \
	roms/$(DEPDIR)/$(am__dirstamp)
roms/altirraos_xl.$(OBJEXT): roms/$(am__dirstamp) \
	roms/$(DEPDIR)/$(am__dirstamp)
roms/altirra_basic.$(OBJEXT): roms/$(am__dirstamp) \
	roms/$(DEPDIR)/$(am__dirstamp)
sdl/video_gl.$(OBJEXT): sdl/$(am__dirstamp) \
	sdl/$(DEPDIR)/$(am__dirstamp)
falcon/cpu_m68k.$(OBJEXT): falcon/$(am__dirstamp) \
	falcon/$(DEPDIR)/$(am__dirstamp)
atari_ntsc/$(am__dirstamp):
	@$(MKDIR_P) atari_ntsc
	@: > atari_ntsc/$(am__dirstamp)
atari_ntsc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) atari_ntsc/$(DEPDIR)
	@: > atari_ntsc/$(DEPDIR)/$(am__dirstamp)
atari_ntsc/atari_ntsc.$(OBJEXT): atari_ntsc/$(am__dirstamp) \
	atari_ntsc/$(DEPDIR)/$(am__dirstamp)

libatari800.a: $(libatari800_a_OBJECTS) $(libatari800_a_DEPENDENCIES) $(EXTRA_libatari800_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libatari800.a
	$(AM_V_AR)$(libatari800_a_AR) libatari800.a $(libatari800_a_OBJECTS) $(libatari800_a_LIBADD)
	$(AM_V_at)$(RANLIB) libatari800.a
win32/libwin32_a-atari_win32.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)
win32/libwin32_a-screen_win32.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)
win32/libwin32_a-render_direct3d.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)
win32/libwin32_a-render_directdraw.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)
win32/libwin32_a-render_gdi.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)
win32/libwin32_a-render_gdiplus.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)
win32/libwin32_a-main.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)
win32/libwin32_a-keyboard.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)
win32/libwin32_a-joystick.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)

libwin32.a: $(libwin32_a_OBJECTS) $(libwin32_a_DEPENDENCIES) $(EXTRA_libwin32_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libwin32.a
	$(AM_V_AR)$(libwin32_a_AR) libwin32.a $(libwin32_a_OBJECTS) $(libwin32_a_LIBADD)
	$(AM_V_at)$(RANLIB) libwin32.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
roms/atari800-altirra_5200_os.$(OBJEXT): roms/$(am__dirstamp) \
	roms/$(DEPDIR)/$(am__dirstamp)
sdl/atari800-init.$(OBJEXT): sdl/$(am__dirstamp) \
	sdl/$(DEPDIR)/$(am__dirstamp)
sdl/atari800-SDL_win32_main.$(OBJEXT): sdl/$(am__dirstamp) \
	sdl/$(DEPDIR)/$(am__dirstamp)
sdl/atari800-sound.$(OBJEXT): sdl/$(am__dirstamp) \
	sdl/$(DEPDIR)/$(am__dirstamp)
falcon/atari800-sound.$(OBJEXT): falcon/$(am__dirstamp) \
	falcon/$(DEPDIR)/$(am__dirstamp)
javanvm/atari800-sound.$(OBJEXT): javanvm/$(am__dirstamp) \
	javanvm/$(DEPDIR)/$(am__dirstamp)
dos/atari800-sound_dos.$(OBJEXT): dos/$(am__dirstamp) \
	dos/$(DEPDIR)/$(am__dirstamp)
dos/atari800-dos_sb.$(OBJEXT): dos/$(am__dirstamp) \
	dos/$(DEPDIR)/$(am__dirstamp)
win32/atari800-sound.$(OBJEXT): win32/$(am__dirstamp) \
	win32/$(DEPDIR)/$(am__dirstamp)
libatari800/atari800-sound.$(OBJEXT): libatari800/$(am__dirstamp) \
	libatari800/$(DEPDIR)/$(am__dirstamp)
codecs/atari800-container.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/atari800-container_wav.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/atari800-audio.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/atari800-audio_pcm.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/atari800-audio_adpcm.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/atari800-audio_mulaw.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/atari800-audio_mp3.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/atari800-container_mp3.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/atari800-container_avi.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/atari800-video.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/atari800-video_mrle.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/atari800-video_mpng.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/atari800-video_zmbv.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
falcon/atari800-main.$(OBJEXT): falcon/$(am__dirstamp) \
	falcon/$(DEPDIR)/$(am__dirstamp)
gles2/atari800-video.$(OBJEXT): gles2/$(am__dirstamp) \
	gles2/$(DEPDIR)/$(am__dirstamp)
sdl/atari800-main.$(OBJEXT): sdl/$(am__dirstamp) \
	sdl/$(DEPDIR)/$(am__dirstamp)
sdl/atari800-input.$(OBJEXT): sdl/$(am__dirstamp) \
	sdl/$(DEPDIR)/$(am__dirstamp)
javanvm/atari800-main.$(OBJEXT): javanvm/$(am__dirstamp) \
	javanvm/$(DEPDIR)/$(am__dirstamp)
javanvm/atari800-video.$(OBJEXT): javanvm/$(am__dirstamp) \
	javanvm/$(DEPDIR)/$(am__dirstamp)
javanvm/atari800-input.$(OBJEXT): javanvm/$(am__dirstamp) \
	javanvm/$(DEPDIR)/$(am__dirstamp)
sdl/atari800-video.$(OBJEXT): sdl/$(am__dirstamp) \
	sdl/$(DEPDIR)/$(am__dirstamp)
sdl/atari800-video_sw.$(OBJEXT): sdl/$(am__dirstamp) \
	sdl/$(DEPDIR)/$(am__dirstamp)
sdl/atari800-palette.$(OBJEXT): sdl/$(am__dirstamp) \
	sdl/$(DEPDIR)/$(am__dirstamp)
dos/atari800-atari_vga.$(OBJEXT): dos/$(am__dirstamp) \
	dos/$(DEPDIR)/$(am__dirstamp)
dos/atari800-vga_gfx.$(OBJEXT): dos/$(am__dirstamp) \
	dos/$(DEPDIR)/$(am__dirstamp)
codecs/atari800-image.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/atari800-image_pcx.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
codecs/atari800-image_png.$(OBJEXT): codecs/$(am__dirstamp) \
	codecs/$(DEPDIR)/$(am__dirstamp)
roms/atari800-altirraos_800.$(OBJEXT): roms/$(am__dirstamp) \
	roms/$(DEPDIR)/$(am__dirstamp)
roms/atari800-altirraos_xl.$(OBJEXT): roms/$(am__dirstamp) \
	roms/$(DEPDIR)/$(am__dirstamp)
roms/atari800-altirra_basic.$(OBJEXT): roms/$(am__dirstamp) \
	roms/$(DEPDIR)/$(am__dirstamp)
sdl/atari800-video_gl.$(OBJEXT): sdl/$(am__dirstamp) \
	sdl/$(DEPDIR)/$(am__dirstamp)
atari_ntsc/atari800-atari_ntsc.$(OBJEXT): atari_ntsc/$(am__dirstamp) \
	atari_ntsc/$(DEPDIR)/$(am__dirstamp)

atari800$(EXEEXT): $(atari800_OBJECTS) $(atari800_DEPENDENCIES) $(EXTRA_atari800_DEPENDENCIES) 
	@rm -f atari800$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(atari800_OBJECTS) $(atari800_LDADD) $(LIBS)
libatari800/guess_settings-guess_settings.$(OBJEXT):  \
	libatari800/$(am__dirstamp) \
	libatari800/$(DEPDIR)/$(am__dirstamp)

guess_settings$(EXEEXT): $(guess_settings_OBJECTS) $(guess_settings_DEPENDENCIES) $(EXTRA_guess_settings_DEPENDENCIES) 
	@rm -f guess_settings$(EXEEXT)
	$(AM_V_CCLD)$(guess_settings_LINK) $(guess_settings_OBJECTS) $(guess_settings_LDADD) $(LIBS)
libatari800/libatari800_test-libatari800_test.$(OBJEXT):  \
	libatari800/$(am__dirstamp) \
	libatari800/$(DEPDIR)/$(am__dirstamp)

libatari800_test$(EXEEXT): $(libatari800_test_OBJECTS) $(libatari800_test_DEPENDENCIES) $(EXTRA_libatari800_test_DEPENDENCIES) 
	@rm -f libatari800_test$(EXEEXT)
	$(AM_V_CCLD)$(libatari800_test_LINK) $(libatari800_test_OBJECTS) $(libatari800_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f atari_ntsc/*.$(OBJEXT)
	-rm -f codecs/*.$(OBJEXT)
	-rm -f dos/*.$(OBJEXT)
	-rm -f falcon/*.$(OBJEXT)
	-rm -f gles2/*.$(OBJEXT)
	-rm -f javanvm/*.$(OBJEXT)
	-rm -f libatari800/*.$(OBJEXT)
	-rm -f roms/*.$(OBJEXT)
	-rm -f sdl/*.$(OBJEXT)
	-rm -f win32/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/af80.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/afile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/antic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/artifact.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-af80.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-afile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-antic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-artifact.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-atari.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-atari_basic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-atari_curses.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-atari_ps2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-atari_rpi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-atari_x11.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-binload.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-bit3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-cartridge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-cartridge_info.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-cassette.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-cfg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-colours.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-colours_external.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-colours_ntsc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-colours_pal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-compfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-cpu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-crc32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-cycle_map.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-devices.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-esc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-file_export.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-filter_ntsc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-gtia.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-ide.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-img_tape.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-memory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-monitor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-mzpokeysnd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-pal_blending.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-pbi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-pbi_bb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-pbi_mio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-pbi_proto80.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-pbi_scsi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-pbi_xld.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-pia.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-pokey.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-pokeyrec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-pokeysnd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-rdevice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-remez.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-rtime.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-screen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-sio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-sound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-sound_oss.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-statesav.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-sysrom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-ui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-ui_basic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-util.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-videomode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-voicebox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-votrax.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-votraxsnd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-xep80.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari800-xep80_fonts.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari_basic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari_curses.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari_ps2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari_rpi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atari_x11.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/binload.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bit3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cartridge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cartridge_info.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cassette.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cfg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/colours.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/colours_external.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/colours_ntsc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/colours_pal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/compfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crc32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cycle_map.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/devices.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/esc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_export.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filter_ntsc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gtia.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ide.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/img_tape.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/monitor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mzpokeysnd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pal_blending.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pbi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pbi_bb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pbi_mio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pbi_proto80.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pbi_scsi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pbi_xld.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pia.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pokey.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pokeyrec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pokeysnd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdevice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/remez.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rtime.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/screen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sound_oss.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/statesav.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sysrom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ui_basic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/util.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/videomode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/voicebox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/votrax.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/votraxsnd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xep80.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xep80_fonts.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@atari_ntsc/$(DEPDIR)/atari800-atari_ntsc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@atari_ntsc/$(DEPDIR)/atari_ntsc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/atari800-audio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/atari800-audio_adpcm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/atari800-audio_mp3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/atari800-audio_mulaw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/atari800-audio_pcm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/atari800-container.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/atari800-container_avi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/atari800-container_mp3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/atari800-container_wav.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/atari800-image.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/atari800-image_pcx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/atari800-image_png.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/atari800-video.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/atari800-video_mpng.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/atari800-video_mrle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/atari800-video_zmbv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/audio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/audio_adpcm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/audio_mp3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/audio_mulaw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/audio_pcm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/container.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/container_avi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/container_mp3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/container_wav.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/image.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/image_pcx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/image_png.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/video.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/video_mpng.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/video_mrle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@codecs/$(DEPDIR)/video_zmbv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@dos/$(DEPDIR)/atari800-atari_vga.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@dos/$(DEPDIR)/atari800-dos_sb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@dos/$(DEPDIR)/atari800-sound_dos.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@dos/$(DEPDIR)/atari800-vga_gfx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@dos/$(DEPDIR)/atari_vga.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@dos/$(DEPDIR)/dos_sb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@dos/$(DEPDIR)/sound_dos.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@dos/$(DEPDIR)/vga_gfx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@falcon/$(DEPDIR)/atari800-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@falcon/$(DEPDIR)/atari800-sound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@falcon/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@falcon/$(DEPDIR)/sound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@gles2/$(DEPDIR)/atari800-video.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@gles2/$(DEPDIR)/video.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@javanvm/$(DEPDIR)/atari800-input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@javanvm/$(DEPDIR)/atari800-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@javanvm/$(DEPDIR)/atari800-sound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@javanvm/$(DEPDIR)/atari800-video.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@javanvm/$(DEPDIR)/input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@javanvm/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@javanvm/$(DEPDIR)/sound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@javanvm/$(DEPDIR)/video.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libatari800/$(DEPDIR)/api.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libatari800/$(DEPDIR)/atari800-sound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libatari800/$(DEPDIR)/exit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libatari800/$(DEPDIR)/guess_settings-guess_settings.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libatari800/$(DEPDIR)/init.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libatari800/$(DEPDIR)/input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libatari800/$(DEPDIR)/libatari800_test-libatari800_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libatari800/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libatari800/$(DEPDIR)/sound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libatari800/$(DEPDIR)/statesav.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libatari800/$(DEPDIR)/video.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@roms/$(DEPDIR)/altirra_5200_os.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@roms/$(DEPDIR)/altirra_basic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@roms/$(DEPDIR)/altirraos_800.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@roms/$(DEPDIR)/altirraos_xl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@roms/$(DEPDIR)/atari800-altirra_5200_os.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@roms/$(DEPDIR)/atari800-altirra_basic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@roms/$(DEPDIR)/atari800-altirraos_800.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@roms/$(DEPDIR)/atari800-altirraos_xl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@sdl/$(DEPDIR)/SDL_win32_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@sdl/$(DEPDIR)/atari800-SDL_win32_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@sdl/$(DEPDIR)/atari800-init.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@sdl/$(DEPDIR)/atari800-input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@sdl/$(DEPDIR)/atari800-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@sdl/$(DEPDIR)/atari800-palette.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@sdl/$(DEPDIR)/atari800-sound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@sdl/$(DEPDIR)/atari800-video.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@sdl/$(DEPDIR)/atari800-video_gl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@sdl/$(DEPDIR)/atari800-video_sw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@sdl/$(DEPDIR)/init.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@sdl/$(DEPDIR)/input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@sdl/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@sdl/$(DEPDIR)/palette.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@sdl/$(DEPDIR)/sound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@sdl/$(DEPDIR)/video.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@sdl/$(DEPDIR)/video_gl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@sdl/$(DEPDIR)/video_sw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@win32/$(DEPDIR)/atari800-sound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@win32/$(DEPDIR)/libwin32_a-atari_win32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@win32/$(DEPDIR)/libwin32_a-joystick.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@win32/$(DEPDIR)/libwin32_a-keyboard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@win32/$(DEPDIR)/libwin32_a-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@win32/$(DEPDIR)/libwin32_a-render_direct3d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@win32/$(DEPDIR)/libwin32_a-render_directdraw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@win32/$(DEPDIR)/libwin32_a-render_gdi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@win32/$(DEPDIR)/libwin32_a-render_gdiplus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@win32/$(DEPDIR)/libwin32_a-screen_win32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@win32/$(DEPDIR)/sound.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

win32/libwin32_a-atari_win32.o: win32/atari_win32.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-atari_win32.o -MD -MP -MF win32/$(DEPDIR)/libwin32_a-atari_win32.Tpo -c -o win32/libwin32_a-atari_win32.o `test -f 'win32/atari_win32.c' || echo '$(srcdir)/'`win32/atari_win32.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-atari_win32.Tpo win32/$(DEPDIR)/libwin32_a-atari_win32.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='win32/atari_win32.c' object='win32/libwin32_a-atari_win32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-atari_win32.o `test -f 'win32/atari_win32.c' || echo '$(srcdir)/'`win32/atari_win32.c

win32/libwin32_a-atari_win32.obj: win32/atari_win32.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-atari_win32.obj -MD -MP -MF win32/$(DEPDIR)/libwin32_a-atari_win32.Tpo -c -o win32/libwin32_a-atari_win32.obj `if test -f 'win32/atari_win32.c'; then $(CYGPATH_W) 'win32/atari_win32.c'; else $(CYGPATH_W) '$(srcdir)/win32/atari_win32.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-atari_win32.Tpo win32/$(DEPDIR)/libwin32_a-atari_win32.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='win32/atari_win32.c' object='win32/libwin32_a-atari_win32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-atari_win32.obj `if test -f 'win32/atari_win32.c'; then $(CYGPATH_W) 'win32/atari_win32.c'; else $(CYGPATH_W) '$(srcdir)/win32/atari_win32.c'; fi`

win32/libwin32_a-screen_win32.o: win32/screen_win32.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-screen_win32.o -MD -MP -MF win32/$(DEPDIR)/libwin32_a-screen_win32.Tpo -c -o win32/libwin32_a-screen_win32.o `test -f 'win32/screen_win32.c' || echo '$(srcdir)/'`win32/screen_win32.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-screen_win32.Tpo win32/$(DEPDIR)/libwin32_a-screen_win32.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='win32/screen_win32.c' object='win32/libwin32_a-screen_win32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-screen_win32.o `test -f 'win32/screen_win32.c' || echo '$(srcdir)/'`win32/screen_win32.c

win32/libwin32_a-screen_win32.obj: win32/screen_win32.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-screen_win32.obj -MD -MP -MF win32/$(DEPDIR)/libwin32_a-screen_win32.Tpo -c -o win32/libwin32_a-screen_win32.obj `if test -f 'win32/screen_win32.c'; then $(CYGPATH_W) 'win32/screen_win32.c'; else $(CYGPATH_W) '$(srcdir)/win32/screen_win32.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-screen_win32.Tpo win32/$(DEPDIR)/libwin32_a-screen_win32.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='win32/screen_win32.c' object='win32/libwin32_a-screen_win32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-screen_win32.obj `if test -f 'win32/screen_win32.c'; then $(CYGPATH_W) 'win32/screen_win32.c'; else $(CYGPATH_W) '$(srcdir)/win32/screen_win32.c'; fi`

win32/libwin32_a-render_direct3d.o: win32/render_direct3d.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-render_direct3d.o -MD -MP -MF win32/$(DEPDIR)/libwin32_a-render_direct3d.Tpo -c -o win32/libwin32_a-render_direct3d.o `test -f 'win32/render_direct3d.c' || echo '$(srcdir)/'`win32/render_direct3d.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-render_direct3d.Tpo win32/$(DEPDIR)/libwin32_a-render_direct3d.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='win32/render_direct3d.c' object='win32/libwin32_a-render_direct3d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-render_direct3d.o `test -f 'win32/render_direct3d.c' || echo '$(srcdir)/'`win32/render_direct3d.c

win32/libwin32_a-render_direct3d.obj: win32/render_direct3d.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-render_direct3d.obj -MD -MP -MF win32/$(DEPDIR)/libwin32_a-render_direct3d.Tpo -c -o win32/libwin32_a-render_direct3d.obj `if test -f 'win32/render_direct3d.c'; then $(CYGPATH_W) 'win32/render_direct3d.c'; else $(CYGPATH_W) '$(srcdir)/win32/render_direct3d.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-render_direct3d.Tpo win32/$(DEPDIR)/libwin32_a-render_direct3d.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='win32/render_direct3d.c' object='win32/libwin32_a-render_direct3d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-render_direct3d.obj `if test -f 'win32/render_direct3d.c'; then $(CYGPATH_W) 'win32/render_direct3d.c'; else $(CYGPATH_W) '$(srcdir)/win32/render_direct3d.c'; fi`

win32/libwin32_a-render_directdraw.o: win32/render_directdraw.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-render_directdraw.o -MD -MP -MF win32/$(DEPDIR)/libwin32_a-render_directdraw.Tpo -c -o win32/libwin32_a-render_directdraw.o `test -f 'win32/render_directdraw.c' || echo '$(srcdir)/'`win32/render_directdraw.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-render_directdraw.Tpo win32/$(DEPDIR)/libwin32_a-render_directdraw.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='win32/render_directdraw.c' object='win32/libwin32_a-render_directdraw.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-render_directdraw.o `test -f 'win32/render_directdraw.c' || echo '$(srcdir)/'`win32/render_directdraw.c

win32/libwin32_a-render_directdraw.obj: win32/render_directdraw.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-render_directdraw.obj -MD -MP -MF win32/$(DEPDIR)/libwin32_a-render_directdraw.Tpo -c -o win32/libwin32_a-render_directdraw.obj `if test -f 'win32/render_directdraw.c'; then $(CYGPATH_W) 'win32/render_directdraw.c'; else $(CYGPATH_W) '$(srcdir)/win32/render_directdraw.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-render_directdraw.Tpo win32/$(DEPDIR)/libwin32_a-render_directdraw.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='win32/render_directdraw.c' object='win32/libwin32_a-render_directdraw.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-render_directdraw.obj `if test -f 'win32/render_directdraw.c'; then $(CYGPATH_W) 'win32/render_directdraw.c'; else $(CYGPATH_W) '$(srcdir)/win32/render_directdraw.c'; fi`

win32/libwin32_a-render_gdi.o: win32/render_gdi.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-render_gdi.o -MD -MP -MF win32/$(DEPDIR)/libwin32_a-render_gdi.Tpo -c -o win32/libwin32_a-render_gdi.o `test -f 'win32/render_gdi.c' || echo '$(srcdir)/'`win32/render_gdi.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-render_gdi.Tpo win32/$(DEPDIR)/libwin32_a-render_gdi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='win32/render_gdi.c' object='win32/libwin32_a-render_gdi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-render_gdi.o `test -f 'win32/render_gdi.c' || echo '$(srcdir)/'`win32/render_gdi.c

win32/libwin32_a-render_gdi.obj: win32/render_gdi.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-render_gdi.obj -MD -MP -MF win32/$(DEPDIR)/libwin32_a-render_gdi.Tpo -c -o win32/libwin32_a-render_gdi.obj `if test -f 'win32/render_gdi.c'; then $(CYGPATH_W) 'win32/render_gdi.c'; else $(CYGPATH_W) '$(srcdir)/win32/render_gdi.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-render_gdi.Tpo win32/$(DEPDIR)/libwin32_a-render_gdi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='win32/render_gdi.c' object='win32/libwin32_a-render_gdi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-render_gdi.obj `if test -f 'win32/render_gdi.c'; then $(CYGPATH_W) 'win32/render_gdi.c'; else $(CYGPATH_W) '$(srcdir)/win32/render_gdi.c'; fi`

win32/libwin32_a-render_gdiplus.o: win32/render_gdiplus.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-render_gdiplus.o -MD -MP -MF win32/$(DEPDIR)/libwin32_a-render_gdiplus.Tpo -c -o win32/libwin32_a-render_gdiplus.o `test -f 'win32/render_gdiplus.c' || echo '$(srcdir)/'`win32/render_gdiplus.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-render_gdiplus.Tpo win32/$(DEPDIR)/libwin32_a-render_gdiplus.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='win32/render_gdiplus.c' object='win32/libwin32_a-render_gdiplus.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-render_gdiplus.o `test -f 'win32/render_gdiplus.c' || echo '$(srcdir)/'`win32/render_gdiplus.c

win32/libwin32_a-render_gdiplus.obj: win32/render_gdiplus.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-render_gdiplus.obj -MD -MP -MF win32/$(DEPDIR)/libwin32_a-render_gdiplus.Tpo -c -o win32/libwin32_a-render_gdiplus.obj `if test -f 'win32/render_gdiplus.c'; then $(CYGPATH_W) 'win32/render_gdiplus.c'; else $(CYGPATH_W) '$(srcdir)/win32/render_gdiplus.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-render_gdiplus.Tpo win32/$(DEPDIR)/libwin32_a-render_gdiplus.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='win32/render_gdiplus.c' object='win32/libwin32_a-render_gdiplus.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-render_gdiplus.obj `if test -f 'win32/render_gdiplus.c'; then $(CYGPATH_W) 'win32/render_gdiplus.c'; else $(CYGPATH_W) '$(srcdir)/win32/render_gdiplus.c'; fi`

win32/libwin32_a-main.o: win32/main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-main.o -MD -MP -MF win32/$(DEPDIR)/libwin32_a-main.Tpo -c -o win32/libwin32_a-main.o `test -f 'win32/main.c' || echo '$(srcdir)/'`win32/main.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-main.Tpo win32/$(DEPDIR)/libwin32_a-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='win32/main.c' object='win32/libwin32_a-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-main.o `test -f 'win32/main.c' || echo '$(srcdir)/'`win32/main.c

win32/libwin32_a-main.obj: win32/main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-main.obj -MD -MP -MF win32/$(DEPDIR)/libwin32_a-main.Tpo -c -o win32/libwin32_a-main.obj `if test -f 'win32/main.c'; then $(CYGPATH_W) 'win32/main.c'; else $(CYGPATH_W) '$(srcdir)/win32/main.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-main.Tpo win32/$(DEPDIR)/libwin32_a-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='win32/main.c' object='win32/libwin32_a-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-main.obj `if test -f 'win32/main.c'; then $(CYGPATH_W) 'win32/main.c'; else $(CYGPATH_W) '$(srcdir)/win32/main.c'; fi`

win32/libwin32_a-keyboard.o: win32/keyboard.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-keyboard.o -MD -MP -MF win32/$(DEPDIR)/libwin32_a-keyboard.Tpo -c -o win32/libwin32_a-keyboard.o `test -f 'win32/keyboard.c' || echo '$(srcdir)/'`win32/keyboard.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-keyboard.Tpo win32/$(DEPDIR)/libwin32_a-keyboard.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='win32/keyboard.c' object='win32/libwin32_a-keyboard.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-keyboard.o `test -f 'win32/keyboard.c' || echo '$(srcdir)/'`win32/keyboard.c

win32/libwin32_a-keyboard.obj: win32/keyboard.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-keyboard.obj -MD -MP -MF win32/$(DEPDIR)/libwin32_a-keyboard.Tpo -c -o win32/libwin32_a-keyboard.obj `if test -f 'win32/keyboard.c'; then $(CYGPATH_W) 'win32/keyboard.c'; else $(CYGPATH_W) '$(srcdir)/win32/keyboard.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-keyboard.Tpo win32/$(DEPDIR)/libwin32_a-keyboard.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='win32/keyboard.c' object='win32/libwin32_a-keyboard.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-keyboard.obj `if test -f 'win32/keyboard.c'; then $(CYGPATH_W) 'win32/keyboard.c'; else $(CYGPATH_W) '$(srcdir)/win32/keyboard.c'; fi`

win32/libwin32_a-joystick.o: win32/joystick.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-joystick.o -MD -MP -MF win32/$(DEPDIR)/libwin32_a-joystick.Tpo -c -o win32/libwin32_a-joystick.o `test -f 'win32/joystick.c' || echo '$(srcdir)/'`win32/joystick.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-joystick.Tpo win32/$(DEPDIR)/libwin32_a-joystick.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='win32/joystick.c' object='win32/libwin32_a-joystick.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-joystick.o `test -f 'win32/joystick.c' || echo '$(srcdir)/'`win32/joystick.c

win32/libwin32_a-joystick.obj: win32/joystick.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -MT win32/libwin32_a-joystick.obj -MD -MP -MF win32/$(DEPDIR)/libwin32_a-joystick.Tpo -c -o win32/libwin32_a-joystick.obj `if test -f 'win32/joystick.c'; then $(CYGPATH_W) 'win32/joystick.c'; else $(CYGPATH_W) '$(srcdir)/win32/joystick.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/libwin32_a-joystick.Tpo win32/$(DEPDIR)/libwin32_a-joystick.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='win32/joystick.c' object='win32/libwin32_a-joystick.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libwin32_a_CFLAGS) $(CFLAGS) -c -o win32/libwin32_a-joystick.obj `if test -f 'win32/joystick.c'; then $(CYGPATH_W) 'win32/joystick.c'; else $(CYGPATH_W) '$(srcdir)/win32/joystick.c'; fi`

atari800-afile.o: afile.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-afile.o -MD -MP -MF $(DEPDIR)/atari800-afile.Tpo -c -o atari800-afile.o `test -f 'afile.c' || echo '$(srcdir)/'`afile.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-afile.Tpo $(DEPDIR)/atari800-afile.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='afile.c' object='atari800-afile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-afile.o `test -f 'afile.c' || echo '$(srcdir)/'`afile.c

atari800-afile.obj: afile.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-afile.obj -MD -MP -MF $(DEPDIR)/atari800-afile.Tpo -c -o atari800-afile.obj `if test -f 'afile.c'; then $(CYGPATH_W) 'afile.c'; else $(CYGPATH_W) '$(srcdir)/afile.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-afile.Tpo $(DEPDIR)/atari800-afile.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='afile.c' object='atari800-afile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-afile.obj `if test -f 'afile.c'; then $(CYGPATH_W) 'afile.c'; else $(CYGPATH_W) '$(srcdir)/afile.c'; fi`

atari800-antic.o: antic.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-antic.o -MD -MP -MF $(DEPDIR)/atari800-antic.Tpo -c -o atari800-antic.o `test -f 'antic.c' || echo '$(srcdir)/'`antic.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-antic.Tpo $(DEPDIR)/atari800-antic.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='antic.c' object='atari800-antic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-antic.o `test -f 'antic.c' || echo '$(srcdir)/'`antic.c

atari800-antic.obj: antic.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-antic.obj -MD -MP -MF $(DEPDIR)/atari800-antic.Tpo -c -o atari800-antic.obj `if test -f 'antic.c'; then $(CYGPATH_W) 'antic.c'; else $(CYGPATH_W) '$(srcdir)/antic.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-antic.Tpo $(DEPDIR)/atari800-antic.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='antic.c' object='atari800-antic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-antic.obj `if test -f 'antic.c'; then $(CYGPATH_W) 'antic.c'; else $(CYGPATH_W) '$(srcdir)/antic.c'; fi`

atari800-atari.o: atari.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-atari.o -MD -MP -MF $(DEPDIR)/atari800-atari.Tpo -c -o atari800-atari.o `test -f 'atari.c' || echo '$(srcdir)/'`atari.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-atari.Tpo $(DEPDIR)/atari800-atari.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='atari.c' object='atari800-atari.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-atari.o `test -f 'atari.c' || echo '$(srcdir)/'`atari.c

atari800-atari.obj: atari.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-atari.obj -MD -MP -MF $(DEPDIR)/atari800-atari.Tpo -c -o atari800-atari.obj `if test -f 'atari.c'; then $(CYGPATH_W) 'atari.c'; else $(CYGPATH_W) '$(srcdir)/atari.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-atari.Tpo $(DEPDIR)/atari800-atari.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='atari.c' object='atari800-atari.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-atari.obj `if test -f 'atari.c'; then $(CYGPATH_W) 'atari.c'; else $(CYGPATH_W) '$(srcdir)/atari.c'; fi`

atari800-binload.o: binload.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-binload.o -MD -MP -MF $(DEPDIR)/atari800-binload.Tpo -c -o atari800-binload.o `test -f 'binload.c' || echo '$(srcdir)/'`binload.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-binload.Tpo $(DEPDIR)/atari800-binload.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='binload.c' object='atari800-binload.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-binload.o `test -f 'binload.c' || echo '$(srcdir)/'`binload.c

atari800-binload.obj: binload.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-binload.obj -MD -MP -MF $(DEPDIR)/atari800-binload.Tpo -c -o atari800-binload.obj `if test -f 'binload.c'; then $(CYGPATH_W) 'binload.c'; else $(CYGPATH_W) '$(srcdir)/binload.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-binload.Tpo $(DEPDIR)/atari800-binload.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='binload.c' object='atari800-binload.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-binload.obj `if test -f 'binload.c'; then $(CYGPATH_W) 'binload.c'; else $(CYGPATH_W) '$(srcdir)/binload.c'; fi`

atari800-cartridge.o: cartridge.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-cartridge.o -MD -MP -MF $(DEPDIR)/atari800-cartridge.Tpo -c -o atari800-cartridge.o `test -f 'cartridge.c' || echo '$(srcdir)/'`cartridge.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-cartridge.Tpo $(DEPDIR)/atari800-cartridge.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='cartridge.c' object='atari800-cartridge.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-cartridge.o `test -f 'cartridge.c' || echo '$(srcdir)/'`cartridge.c

atari800-cartridge.obj: cartridge.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-cartridge.obj -MD -MP -MF $(DEPDIR)/atari800-cartridge.Tpo -c -o atari800-cartridge.obj `if test -f 'cartridge.c'; then $(CYGPATH_W) 'cartridge.c'; else $(CYGPATH_W) '$(srcdir)/cartridge.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-cartridge.Tpo $(DEPDIR)/atari800-cartridge.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='cartridge.c' object='atari800-cartridge.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-cartridge.obj `if test -f 'cartridge.c'; then $(CYGPATH_W) 'cartridge.c'; else $(CYGPATH_W) '$(srcdir)/cartridge.c'; fi`

atari800-cartridge_info.o: cartridge_info.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-cartridge_info.o -MD -MP -MF $(DEPDIR)/atari800-cartridge_info.Tpo -c -o atari800-cartridge_info.o `test -f 'cartridge_info.c' || echo '$(srcdir)/'`cartridge_info.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-cartridge_info.Tpo $(DEPDIR)/atari800-cartridge_info.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='cartridge_info.c' object='atari800-cartridge_info.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-cartridge_info.o `test -f 'cartridge_info.c' || echo '$(srcdir)/'`cartridge_info.c

atari800-cartridge_info.obj: cartridge_info.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-cartridge_info.obj -MD -MP -MF $(DEPDIR)/atari800-cartridge_info.Tpo -c -o atari800-cartridge_info.obj `if test -f 'cartridge_info.c'; then $(CYGPATH_W) 'cartridge_info.c'; else $(CYGPATH_W) '$(srcdir)/cartridge_info.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-cartridge_info.Tpo $(DEPDIR)/atari800-cartridge_info.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='cartridge_info.c' object='atari800-cartridge_info.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-cartridge_info.obj `if test -f 'cartridge_info.c'; then $(CYGPATH_W) 'cartridge_info.c'; else $(CYGPATH_W) '$(srcdir)/cartridge_info.c'; fi`

atari800-cassette.o: cassette.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-cassette.o -MD -MP -MF $(DEPDIR)/atari800-cassette.Tpo -c -o atari800-cassette.o `test -f 'cassette.c' || echo '$(srcdir)/'`cassette.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-cassette.Tpo $(DEPDIR)/atari800-cassette.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='cassette.c' object='atari800-cassette.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-cassette.o `test -f 'cassette.c' || echo '$(srcdir)/'`cassette.c

atari800-cassette.obj: cassette.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-cassette.obj -MD -MP -MF $(DEPDIR)/atari800-cassette.Tpo -c -o atari800-cassette.obj `if test -f 'cassette.c'; then $(CYGPATH_W) 'cassette.c'; else $(CYGPATH_W) '$(srcdir)/cassette.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-cassette.Tpo $(DEPDIR)/atari800-cassette.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='cassette.c' object='atari800-cassette.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-cassette.obj `if test -f 'cassette.c'; then $(CYGPATH_W) 'cassette.c'; else $(CYGPATH_W) '$(srcdir)/cassette.c'; fi`

atari800-compfile.o: compfile.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-compfile.o -MD -MP -MF $(DEPDIR)/atari800-compfile.Tpo -c -o atari800-compfile.o `test -f 'compfile.c' || echo '$(srcdir)/'`compfile.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-compfile.Tpo $(DEPDIR)/atari800-compfile.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='compfile.c' object='atari800-compfile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-compfile.o `test -f 'compfile.c' || echo '$(srcdir)/'`compfile.c

atari800-compfile.obj: compfile.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-compfile.obj -MD -MP -MF $(DEPDIR)/atari800-compfile.Tpo -c -o atari800-compfile.obj `if test -f 'compfile.c'; then $(CYGPATH_W) 'compfile.c'; else $(CYGPATH_W) '$(srcdir)/compfile.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-compfile.Tpo $(DEPDIR)/atari800-compfile.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='compfile.c' object='atari800-compfile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-compfile.obj `if test -f 'compfile.c'; then $(CYGPATH_W) 'compfile.c'; else $(CYGPATH_W) '$(srcdir)/compfile.c'; fi`

atari800-cfg.o: cfg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-cfg.o -MD -MP -MF $(DEPDIR)/atari800-cfg.Tpo -c -o atari800-cfg.o `test -f 'cfg.c' || echo '$(srcdir)/'`cfg.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-cfg.Tpo $(DEPDIR)/atari800-cfg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='cfg.c' object='atari800-cfg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-cfg.o `test -f 'cfg.c' || echo '$(srcdir)/'`cfg.c

atari800-cfg.obj: cfg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-cfg.obj -MD -MP -MF $(DEPDIR)/atari800-cfg.Tpo -c -o atari800-cfg.obj `if test -f 'cfg.c'; then $(CYGPATH_W) 'cfg.c'; else $(CYGPATH_W) '$(srcdir)/cfg.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-cfg.Tpo $(DEPDIR)/atari800-cfg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='cfg.c' object='atari800-cfg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-cfg.obj `if test -f 'cfg.c'; then $(CYGPATH_W) 'cfg.c'; else $(CYGPATH_W) '$(srcdir)/cfg.c'; fi`

atari800-cpu.o: cpu.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-cpu.o -MD -MP -MF $(DEPDIR)/atari800-cpu.Tpo -c -o atari800-cpu.o `test -f 'cpu.c' || echo '$(srcdir)/'`cpu.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-cpu.Tpo $(DEPDIR)/atari800-cpu.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='cpu.c' object='atari800-cpu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-cpu.o `test -f 'cpu.c' || echo '$(srcdir)/'`cpu.c

atari800-cpu.obj: cpu.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-cpu.obj -MD -MP -MF $(DEPDIR)/atari800-cpu.Tpo -c -o atari800-cpu.obj `if test -f 'cpu.c'; then $(CYGPATH_W) 'cpu.c'; else $(CYGPATH_W) '$(srcdir)/cpu.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-cpu.Tpo $(DEPDIR)/atari800-cpu.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='cpu.c' object='atari800-cpu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-cpu.obj `if test -f 'cpu.c'; then $(CYGPATH_W) 'cpu.c'; else $(CYGPATH_W) '$(srcdir)/cpu.c'; fi`

atari800-crc32.o: crc32.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-crc32.o -MD -MP -MF $(DEPDIR)/atari800-crc32.Tpo -c -o atari800-crc32.o `test -f 'crc32.c' || echo '$(srcdir)/'`crc32.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-crc32.Tpo $(DEPDIR)/atari800-crc32.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crc32.c' object='atari800-crc32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-crc32.o `test -f 'crc32.c' || echo '$(srcdir)/'`crc32.c

atari800-crc32.obj: crc32.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-crc32.obj -MD -MP -MF $(DEPDIR)/atari800-crc32.Tpo -c -o atari800-crc32.obj `if test -f 'crc32.c'; then $(CYGPATH_W) 'crc32.c'; else $(CYGPATH_W) '$(srcdir)/crc32.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-crc32.Tpo $(DEPDIR)/atari800-crc32.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crc32.c' object='atari800-crc32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-crc32.obj `if test -f 'crc32.c'; then $(CYGPATH_W) 'crc32.c'; else $(CYGPATH_W) '$(srcdir)/crc32.c'; fi`

atari800-devices.o: devices.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-devices.o -MD -MP -MF $(DEPDIR)/atari800-devices.Tpo -c -o atari800-devices.o `test -f 'devices.c' || echo '$(srcdir)/'`devices.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-devices.Tpo $(DEPDIR)/atari800-devices.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='devices.c' object='atari800-devices.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-devices.o `test -f 'devices.c' || echo '$(srcdir)/'`devices.c

atari800-devices.obj: devices.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-devices.obj -MD -MP -MF $(DEPDIR)/atari800-devices.Tpo -c -o atari800-devices.obj `if test -f 'devices.c'; then $(CYGPATH_W) 'devices.c'; else $(CYGPATH_W) '$(srcdir)/devices.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-devices.Tpo $(DEPDIR)/atari800-devices.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='devices.c' object='atari800-devices.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-devices.obj `if test -f 'devices.c'; then $(CYGPATH_W) 'devices.c'; else $(CYGPATH_W) '$(srcdir)/devices.c'; fi`

atari800-esc.o: esc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-esc.o -MD -MP -MF $(DEPDIR)/atari800-esc.Tpo -c -o atari800-esc.o `test -f 'esc.c' || echo '$(srcdir)/'`esc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-esc.Tpo $(DEPDIR)/atari800-esc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='esc.c' object='atari800-esc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-esc.o `test -f 'esc.c' || echo '$(srcdir)/'`esc.c

atari800-esc.obj: esc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-esc.obj -MD -MP -MF $(DEPDIR)/atari800-esc.Tpo -c -o atari800-esc.obj `if test -f 'esc.c'; then $(CYGPATH_W) 'esc.c'; else $(CYGPATH_W) '$(srcdir)/esc.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-esc.Tpo $(DEPDIR)/atari800-esc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='esc.c' object='atari800-esc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-esc.obj `if test -f 'esc.c'; then $(CYGPATH_W) 'esc.c'; else $(CYGPATH_W) '$(srcdir)/esc.c'; fi`

atari800-gtia.o: gtia.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-gtia.o -MD -MP -MF $(DEPDIR)/atari800-gtia.Tpo -c -o atari800-gtia.o `test -f 'gtia.c' || echo '$(srcdir)/'`gtia.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-gtia.Tpo $(DEPDIR)/atari800-gtia.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='gtia.c' object='atari800-gtia.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-gtia.o `test -f 'gtia.c' || echo '$(srcdir)/'`gtia.c

atari800-gtia.obj: gtia.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-gtia.obj -MD -MP -MF $(DEPDIR)/atari800-gtia.Tpo -c -o atari800-gtia.obj `if test -f 'gtia.c'; then $(CYGPATH_W) 'gtia.c'; else $(CYGPATH_W) '$(srcdir)/gtia.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-gtia.Tpo $(DEPDIR)/atari800-gtia.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='gtia.c' object='atari800-gtia.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-gtia.obj `if test -f 'gtia.c'; then $(CYGPATH_W) 'gtia.c'; else $(CYGPATH_W) '$(srcdir)/gtia.c'; fi`

atari800-img_tape.o: img_tape.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-img_tape.o -MD -MP -MF $(DEPDIR)/atari800-img_tape.Tpo -c -o atari800-img_tape.o `test -f 'img_tape.c' || echo '$(srcdir)/'`img_tape.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-img_tape.Tpo $(DEPDIR)/atari800-img_tape.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='img_tape.c' object='atari800-img_tape.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-img_tape.o `test -f 'img_tape.c' || echo '$(srcdir)/'`img_tape.c

atari800-img_tape.obj: img_tape.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-img_tape.obj -MD -MP -MF $(DEPDIR)/atari800-img_tape.Tpo -c -o atari800-img_tape.obj `if test -f 'img_tape.c'; then $(CYGPATH_W) 'img_tape.c'; else $(CYGPATH_W) '$(srcdir)/img_tape.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-img_tape.Tpo $(DEPDIR)/atari800-img_tape.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='img_tape.c' object='atari800-img_tape.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-img_tape.obj `if test -f 'img_tape.c'; then $(CYGPATH_W) 'img_tape.c'; else $(CYGPATH_W) '$(srcdir)/img_tape.c'; fi`

atari800-log.o: log.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-log.o -MD -MP -MF $(DEPDIR)/atari800-log.Tpo -c -o atari800-log.o `test -f 'log.c' || echo '$(srcdir)/'`log.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-log.Tpo $(DEPDIR)/atari800-log.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='log.c' object='atari800-log.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-log.o `test -f 'log.c' || echo '$(srcdir)/'`log.c

atari800-log.obj: log.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-log.obj -MD -MP -MF $(DEPDIR)/atari800-log.Tpo -c -o atari800-log.obj `if test -f 'log.c'; then $(CYGPATH_W) 'log.c'; else $(CYGPATH_W) '$(srcdir)/log.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-log.Tpo $(DEPDIR)/atari800-log.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='log.c' object='atari800-log.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-log.obj `if test -f 'log.c'; then $(CYGPATH_W) 'log.c'; else $(CYGPATH_W) '$(srcdir)/log.c'; fi`

atari800-memory.o: memory.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-memory.o -MD -MP -MF $(DEPDIR)/atari800-memory.Tpo -c -o atari800-memory.o `test -f 'memory.c' || echo '$(srcdir)/'`memory.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-memory.Tpo $(DEPDIR)/atari800-memory.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='memory.c' object='atari800-memory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-memory.o `test -f 'memory.c' || echo '$(srcdir)/'`memory.c

atari800-memory.obj: memory.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-memory.obj -MD -MP -MF $(DEPDIR)/atari800-memory.Tpo -c -o atari800-memory.obj `if test -f 'memory.c'; then $(CYGPATH_W) 'memory.c'; else $(CYGPATH_W) '$(srcdir)/memory.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-memory.Tpo $(DEPDIR)/atari800-memory.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='memory.c' object='atari800-memory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-memory.obj `if test -f 'memory.c'; then $(CYGPATH_W) 'memory.c'; else $(CYGPATH_W) '$(srcdir)/memory.c'; fi`

atari800-monitor.o: monitor.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-monitor.o -MD -MP -MF $(DEPDIR)/atari800-monitor.Tpo -c -o atari800-monitor.o `test -f 'monitor.c' || echo '$(srcdir)/'`monitor.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-monitor.Tpo $(DEPDIR)/atari800-monitor.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='monitor.c' object='atari800-monitor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-monitor.o `test -f 'monitor.c' || echo '$(srcdir)/'`monitor.c

atari800-monitor.obj: monitor.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-monitor.obj -MD -MP -MF $(DEPDIR)/atari800-monitor.Tpo -c -o atari800-monitor.obj `if test -f 'monitor.c'; then $(CYGPATH_W) 'monitor.c'; else $(CYGPATH_W) '$(srcdir)/monitor.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-monitor.Tpo $(DEPDIR)/atari800-monitor.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='monitor.c' object='atari800-monitor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-monitor.obj `if test -f 'monitor.c'; then $(CYGPATH_W) 'monitor.c'; else $(CYGPATH_W) '$(srcdir)/monitor.c'; fi`

atari800-pbi.o: pbi.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pbi.o -MD -MP -MF $(DEPDIR)/atari800-pbi.Tpo -c -o atari800-pbi.o `test -f 'pbi.c' || echo '$(srcdir)/'`pbi.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pbi.Tpo $(DEPDIR)/atari800-pbi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pbi.c' object='atari800-pbi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pbi.o `test -f 'pbi.c' || echo '$(srcdir)/'`pbi.c

atari800-pbi.obj: pbi.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pbi.obj -MD -MP -MF $(DEPDIR)/atari800-pbi.Tpo -c -o atari800-pbi.obj `if test -f 'pbi.c'; then $(CYGPATH_W) 'pbi.c'; else $(CYGPATH_W) '$(srcdir)/pbi.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pbi.Tpo $(DEPDIR)/atari800-pbi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pbi.c' object='atari800-pbi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pbi.obj `if test -f 'pbi.c'; then $(CYGPATH_W) 'pbi.c'; else $(CYGPATH_W) '$(srcdir)/pbi.c'; fi`

atari800-pia.o: pia.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pia.o -MD -MP -MF $(DEPDIR)/atari800-pia.Tpo -c -o atari800-pia.o `test -f 'pia.c' || echo '$(srcdir)/'`pia.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pia.Tpo $(DEPDIR)/atari800-pia.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pia.c' object='atari800-pia.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pia.o `test -f 'pia.c' || echo '$(srcdir)/'`pia.c

atari800-pia.obj: pia.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pia.obj -MD -MP -MF $(DEPDIR)/atari800-pia.Tpo -c -o atari800-pia.obj `if test -f 'pia.c'; then $(CYGPATH_W) 'pia.c'; else $(CYGPATH_W) '$(srcdir)/pia.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pia.Tpo $(DEPDIR)/atari800-pia.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pia.c' object='atari800-pia.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pia.obj `if test -f 'pia.c'; then $(CYGPATH_W) 'pia.c'; else $(CYGPATH_W) '$(srcdir)/pia.c'; fi`

atari800-pokey.o: pokey.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pokey.o -MD -MP -MF $(DEPDIR)/atari800-pokey.Tpo -c -o atari800-pokey.o `test -f 'pokey.c' || echo '$(srcdir)/'`pokey.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pokey.Tpo $(DEPDIR)/atari800-pokey.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pokey.c' object='atari800-pokey.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pokey.o `test -f 'pokey.c' || echo '$(srcdir)/'`pokey.c

atari800-pokey.obj: pokey.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pokey.obj -MD -MP -MF $(DEPDIR)/atari800-pokey.Tpo -c -o atari800-pokey.obj `if test -f 'pokey.c'; then $(CYGPATH_W) 'pokey.c'; else $(CYGPATH_W) '$(srcdir)/pokey.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pokey.Tpo $(DEPDIR)/atari800-pokey.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pokey.c' object='atari800-pokey.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pokey.obj `if test -f 'pokey.c'; then $(CYGPATH_W) 'pokey.c'; else $(CYGPATH_W) '$(srcdir)/pokey.c'; fi`

roms/atari800-altirra_5200_os.o: roms/altirra_5200_os.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT roms/atari800-altirra_5200_os.o -MD -MP -MF roms/$(DEPDIR)/atari800-altirra_5200_os.Tpo -c -o roms/atari800-altirra_5200_os.o `test -f 'roms/altirra_5200_os.c' || echo '$(srcdir)/'`roms/altirra_5200_os.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) roms/$(DEPDIR)/atari800-altirra_5200_os.Tpo roms/$(DEPDIR)/atari800-altirra_5200_os.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='roms/altirra_5200_os.c' object='roms/atari800-altirra_5200_os.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o roms/atari800-altirra_5200_os.o `test -f 'roms/altirra_5200_os.c' || echo '$(srcdir)/'`roms/altirra_5200_os.c

roms/atari800-altirra_5200_os.obj: roms/altirra_5200_os.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT roms/atari800-altirra_5200_os.obj -MD -MP -MF roms/$(DEPDIR)/atari800-altirra_5200_os.Tpo -c -o roms/atari800-altirra_5200_os.obj `if test -f 'roms/altirra_5200_os.c'; then $(CYGPATH_W) 'roms/altirra_5200_os.c'; else $(CYGPATH_W) '$(srcdir)/roms/altirra_5200_os.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) roms/$(DEPDIR)/atari800-altirra_5200_os.Tpo roms/$(DEPDIR)/atari800-altirra_5200_os.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='roms/altirra_5200_os.c' object='roms/atari800-altirra_5200_os.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o roms/atari800-altirra_5200_os.obj `if test -f 'roms/altirra_5200_os.c'; then $(CYGPATH_W) 'roms/altirra_5200_os.c'; else $(CYGPATH_W) '$(srcdir)/roms/altirra_5200_os.c'; fi`

atari800-rtime.o: rtime.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-rtime.o -MD -MP -MF $(DEPDIR)/atari800-rtime.Tpo -c -o atari800-rtime.o `test -f 'rtime.c' || echo '$(srcdir)/'`rtime.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-rtime.Tpo $(DEPDIR)/atari800-rtime.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='rtime.c' object='atari800-rtime.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-rtime.o `test -f 'rtime.c' || echo '$(srcdir)/'`rtime.c

atari800-rtime.obj: rtime.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-rtime.obj -MD -MP -MF $(DEPDIR)/atari800-rtime.Tpo -c -o atari800-rtime.obj `if test -f 'rtime.c'; then $(CYGPATH_W) 'rtime.c'; else $(CYGPATH_W) '$(srcdir)/rtime.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-rtime.Tpo $(DEPDIR)/atari800-rtime.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='rtime.c' object='atari800-rtime.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-rtime.obj `if test -f 'rtime.c'; then $(CYGPATH_W) 'rtime.c'; else $(CYGPATH_W) '$(srcdir)/rtime.c'; fi`

atari800-sio.o: sio.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-sio.o -MD -MP -MF $(DEPDIR)/atari800-sio.Tpo -c -o atari800-sio.o `test -f 'sio.c' || echo '$(srcdir)/'`sio.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-sio.Tpo $(DEPDIR)/atari800-sio.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sio.c' object='atari800-sio.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-sio.o `test -f 'sio.c' || echo '$(srcdir)/'`sio.c

atari800-sio.obj: sio.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-sio.obj -MD -MP -MF $(DEPDIR)/atari800-sio.Tpo -c -o atari800-sio.obj `if test -f 'sio.c'; then $(CYGPATH_W) 'sio.c'; else $(CYGPATH_W) '$(srcdir)/sio.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-sio.Tpo $(DEPDIR)/atari800-sio.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sio.c' object='atari800-sio.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-sio.obj `if test -f 'sio.c'; then $(CYGPATH_W) 'sio.c'; else $(CYGPATH_W) '$(srcdir)/sio.c'; fi`

atari800-sysrom.o: sysrom.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-sysrom.o -MD -MP -MF $(DEPDIR)/atari800-sysrom.Tpo -c -o atari800-sysrom.o `test -f 'sysrom.c' || echo '$(srcdir)/'`sysrom.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-sysrom.Tpo $(DEPDIR)/atari800-sysrom.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sysrom.c' object='atari800-sysrom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-sysrom.o `test -f 'sysrom.c' || echo '$(srcdir)/'`sysrom.c

atari800-sysrom.obj: sysrom.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-sysrom.obj -MD -MP -MF $(DEPDIR)/atari800-sysrom.Tpo -c -o atari800-sysrom.obj `if test -f 'sysrom.c'; then $(CYGPATH_W) 'sysrom.c'; else $(CYGPATH_W) '$(srcdir)/sysrom.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-sysrom.Tpo $(DEPDIR)/atari800-sysrom.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sysrom.c' object='atari800-sysrom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-sysrom.obj `if test -f 'sysrom.c'; then $(CYGPATH_W) 'sysrom.c'; else $(CYGPATH_W) '$(srcdir)/sysrom.c'; fi`

atari800-util.o: util.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-util.o -MD -MP -MF $(DEPDIR)/atari800-util.Tpo -c -o atari800-util.o `test -f 'util.c' || echo '$(srcdir)/'`util.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-util.Tpo $(DEPDIR)/atari800-util.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util.c' object='atari800-util.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-util.o `test -f 'util.c' || echo '$(srcdir)/'`util.c

atari800-util.obj: util.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-util.obj -MD -MP -MF $(DEPDIR)/atari800-util.Tpo -c -o atari800-util.obj `if test -f 'util.c'; then $(CYGPATH_W) 'util.c'; else $(CYGPATH_W) '$(srcdir)/util.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-util.Tpo $(DEPDIR)/atari800-util.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util.c' object='atari800-util.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-util.obj `if test -f 'util.c'; then $(CYGPATH_W) 'util.c'; else $(CYGPATH_W) '$(srcdir)/util.c'; fi`

sdl/atari800-init.o: sdl/init.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdl/atari800-init.o -MD -MP -MF sdl/$(DEPDIR)/atari800-init.Tpo -c -o sdl/atari800-init.o `test -f 'sdl/init.c' || echo '$(srcdir)/'`sdl/init.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) sdl/$(DEPDIR)/atari800-init.Tpo sdl/$(DEPDIR)/atari800-init.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sdl/init.c' object='sdl/atari800-init.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdl/atari800-init.o `test -f 'sdl/init.c' || echo '$(srcdir)/'`sdl/init.c

sdl/atari800-init.obj: sdl/init.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdl/atari800-init.obj -MD -MP -MF sdl/$(DEPDIR)/atari800-init.Tpo -c -o sdl/atari800-init.obj `if test -f 'sdl/init.c'; then $(CYGPATH_W) 'sdl/init.c'; else $(CYGPATH_W) '$(srcdir)/sdl/init.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) sdl/$(DEPDIR)/atari800-init.Tpo sdl/$(DEPDIR)/atari800-init.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sdl/init.c' object='sdl/atari800-init.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdl/atari800-init.obj `if test -f 'sdl/init.c'; then $(CYGPATH_W) 'sdl/init.c'; else $(CYGPATH_W) '$(srcdir)/sdl/init.c'; fi`

sdl/atari800-SDL_win32_main.o: sdl/SDL_win32_main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdl/atari800-SDL_win32_main.o -MD -MP -MF sdl/$(DEPDIR)/atari800-SDL_win32_main.Tpo -c -o sdl/atari800-SDL_win32_main.o `test -f 'sdl/SDL_win32_main.c' || echo '$(srcdir)/'`sdl/SDL_win32_main.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) sdl/$(DEPDIR)/atari800-SDL_win32_main.Tpo sdl/$(DEPDIR)/atari800-SDL_win32_main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sdl/SDL_win32_main.c' object='sdl/atari800-SDL_win32_main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdl/atari800-SDL_win32_main.o `test -f 'sdl/SDL_win32_main.c' || echo '$(srcdir)/'`sdl/SDL_win32_main.c

sdl/atari800-SDL_win32_main.obj: sdl/SDL_win32_main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdl/atari800-SDL_win32_main.obj -MD -MP -MF sdl/$(DEPDIR)/atari800-SDL_win32_main.Tpo -c -o sdl/atari800-SDL_win32_main.obj `if test -f 'sdl/SDL_win32_main.c'; then $(CYGPATH_W) 'sdl/SDL_win32_main.c'; else $(CYGPATH_W) '$(srcdir)/sdl/SDL_win32_main.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) sdl/$(DEPDIR)/atari800-SDL_win32_main.Tpo sdl/$(DEPDIR)/atari800-SDL_win32_main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sdl/SDL_win32_main.c' object='sdl/atari800-SDL_win32_main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdl/atari800-SDL_win32_main.obj `if test -f 'sdl/SDL_win32_main.c'; then $(CYGPATH_W) 'sdl/SDL_win32_main.c'; else $(CYGPATH_W) '$(srcdir)/sdl/SDL_win32_main.c'; fi`

atari800-pokeysnd.o: pokeysnd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pokeysnd.o -MD -MP -MF $(DEPDIR)/atari800-pokeysnd.Tpo -c -o atari800-pokeysnd.o `test -f 'pokeysnd.c' || echo '$(srcdir)/'`pokeysnd.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pokeysnd.Tpo $(DEPDIR)/atari800-pokeysnd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pokeysnd.c' object='atari800-pokeysnd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pokeysnd.o `test -f 'pokeysnd.c' || echo '$(srcdir)/'`pokeysnd.c

atari800-pokeysnd.obj: pokeysnd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pokeysnd.obj -MD -MP -MF $(DEPDIR)/atari800-pokeysnd.Tpo -c -o atari800-pokeysnd.obj `if test -f 'pokeysnd.c'; then $(CYGPATH_W) 'pokeysnd.c'; else $(CYGPATH_W) '$(srcdir)/pokeysnd.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pokeysnd.Tpo $(DEPDIR)/atari800-pokeysnd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pokeysnd.c' object='atari800-pokeysnd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pokeysnd.obj `if test -f 'pokeysnd.c'; then $(CYGPATH_W) 'pokeysnd.c'; else $(CYGPATH_W) '$(srcdir)/pokeysnd.c'; fi`

atari800-mzpokeysnd.o: mzpokeysnd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-mzpokeysnd.o -MD -MP -MF $(DEPDIR)/atari800-mzpokeysnd.Tpo -c -o atari800-mzpokeysnd.o `test -f 'mzpokeysnd.c' || echo '$(srcdir)/'`mzpokeysnd.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-mzpokeysnd.Tpo $(DEPDIR)/atari800-mzpokeysnd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='mzpokeysnd.c' object='atari800-mzpokeysnd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-mzpokeysnd.o `test -f 'mzpokeysnd.c' || echo '$(srcdir)/'`mzpokeysnd.c

atari800-mzpokeysnd.obj: mzpokeysnd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-mzpokeysnd.obj -MD -MP -MF $(DEPDIR)/atari800-mzpokeysnd.Tpo -c -o atari800-mzpokeysnd.obj `if test -f 'mzpokeysnd.c'; then $(CYGPATH_W) 'mzpokeysnd.c'; else $(CYGPATH_W) '$(srcdir)/mzpokeysnd.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-mzpokeysnd.Tpo $(DEPDIR)/atari800-mzpokeysnd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='mzpokeysnd.c' object='atari800-mzpokeysnd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-mzpokeysnd.obj `if test -f 'mzpokeysnd.c'; then $(CYGPATH_W) 'mzpokeysnd.c'; else $(CYGPATH_W) '$(srcdir)/mzpokeysnd.c'; fi`

atari800-remez.o: remez.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-remez.o -MD -MP -MF $(DEPDIR)/atari800-remez.Tpo -c -o atari800-remez.o `test -f 'remez.c' || echo '$(srcdir)/'`remez.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-remez.Tpo $(DEPDIR)/atari800-remez.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='remez.c' object='atari800-remez.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-remez.o `test -f 'remez.c' || echo '$(srcdir)/'`remez.c

atari800-remez.obj: remez.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-remez.obj -MD -MP -MF $(DEPDIR)/atari800-remez.Tpo -c -o atari800-remez.obj `if test -f 'remez.c'; then $(CYGPATH_W) 'remez.c'; else $(CYGPATH_W) '$(srcdir)/remez.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-remez.Tpo $(DEPDIR)/atari800-remez.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='remez.c' object='atari800-remez.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-remez.obj `if test -f 'remez.c'; then $(CYGPATH_W) 'remez.c'; else $(CYGPATH_W) '$(srcdir)/remez.c'; fi`

atari800-sound.o: sound.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-sound.o -MD -MP -MF $(DEPDIR)/atari800-sound.Tpo -c -o atari800-sound.o `test -f 'sound.c' || echo '$(srcdir)/'`sound.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-sound.Tpo $(DEPDIR)/atari800-sound.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sound.c' object='atari800-sound.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-sound.o `test -f 'sound.c' || echo '$(srcdir)/'`sound.c

atari800-sound.obj: sound.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-sound.obj -MD -MP -MF $(DEPDIR)/atari800-sound.Tpo -c -o atari800-sound.obj `if test -f 'sound.c'; then $(CYGPATH_W) 'sound.c'; else $(CYGPATH_W) '$(srcdir)/sound.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-sound.Tpo $(DEPDIR)/atari800-sound.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sound.c' object='atari800-sound.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-sound.obj `if test -f 'sound.c'; then $(CYGPATH_W) 'sound.c'; else $(CYGPATH_W) '$(srcdir)/sound.c'; fi`

sdl/atari800-sound.o: sdl/sound.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdl/atari800-sound.o -MD -MP -MF sdl/$(DEPDIR)/atari800-sound.Tpo -c -o sdl/atari800-sound.o `test -f 'sdl/sound.c' || echo '$(srcdir)/'`sdl/sound.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) sdl/$(DEPDIR)/atari800-sound.Tpo sdl/$(DEPDIR)/atari800-sound.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sdl/sound.c' object='sdl/atari800-sound.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdl/atari800-sound.o `test -f 'sdl/sound.c' || echo '$(srcdir)/'`sdl/sound.c

sdl/atari800-sound.obj: sdl/sound.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdl/atari800-sound.obj -MD -MP -MF sdl/$(DEPDIR)/atari800-sound.Tpo -c -o sdl/atari800-sound.obj `if test -f 'sdl/sound.c'; then $(CYGPATH_W) 'sdl/sound.c'; else $(CYGPATH_W) '$(srcdir)/sdl/sound.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) sdl/$(DEPDIR)/atari800-sound.Tpo sdl/$(DEPDIR)/atari800-sound.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sdl/sound.c' object='sdl/atari800-sound.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdl/atari800-sound.obj `if test -f 'sdl/sound.c'; then $(CYGPATH_W) 'sdl/sound.c'; else $(CYGPATH_W) '$(srcdir)/sdl/sound.c'; fi`

falcon/atari800-sound.o: falcon/sound.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT falcon/atari800-sound.o -MD -MP -MF falcon/$(DEPDIR)/atari800-sound.Tpo -c -o falcon/atari800-sound.o `test -f 'falcon/sound.c' || echo '$(srcdir)/'`falcon/sound.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) falcon/$(DEPDIR)/atari800-sound.Tpo falcon/$(DEPDIR)/atari800-sound.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='falcon/sound.c' object='falcon/atari800-sound.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o falcon/atari800-sound.o `test -f 'falcon/sound.c' || echo '$(srcdir)/'`falcon/sound.c

falcon/atari800-sound.obj: falcon/sound.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT falcon/atari800-sound.obj -MD -MP -MF falcon/$(DEPDIR)/atari800-sound.Tpo -c -o falcon/atari800-sound.obj `if test -f 'falcon/sound.c'; then $(CYGPATH_W) 'falcon/sound.c'; else $(CYGPATH_W) '$(srcdir)/falcon/sound.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) falcon/$(DEPDIR)/atari800-sound.Tpo falcon/$(DEPDIR)/atari800-sound.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='falcon/sound.c' object='falcon/atari800-sound.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o falcon/atari800-sound.obj `if test -f 'falcon/sound.c'; then $(CYGPATH_W) 'falcon/sound.c'; else $(CYGPATH_W) '$(srcdir)/falcon/sound.c'; fi`

javanvm/atari800-sound.o: javanvm/sound.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT javanvm/atari800-sound.o -MD -MP -MF javanvm/$(DEPDIR)/atari800-sound.Tpo -c -o javanvm/atari800-sound.o `test -f 'javanvm/sound.c' || echo '$(srcdir)/'`javanvm/sound.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) javanvm/$(DEPDIR)/atari800-sound.Tpo javanvm/$(DEPDIR)/atari800-sound.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='javanvm/sound.c' object='javanvm/atari800-sound.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o javanvm/atari800-sound.o `test -f 'javanvm/sound.c' || echo '$(srcdir)/'`javanvm/sound.c

javanvm/atari800-sound.obj: javanvm/sound.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT javanvm/atari800-sound.obj -MD -MP -MF javanvm/$(DEPDIR)/atari800-sound.Tpo -c -o javanvm/atari800-sound.obj `if test -f 'javanvm/sound.c'; then $(CYGPATH_W) 'javanvm/sound.c'; else $(CYGPATH_W) '$(srcdir)/javanvm/sound.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) javanvm/$(DEPDIR)/atari800-sound.Tpo javanvm/$(DEPDIR)/atari800-sound.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='javanvm/sound.c' object='javanvm/atari800-sound.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o javanvm/atari800-sound.obj `if test -f 'javanvm/sound.c'; then $(CYGPATH_W) 'javanvm/sound.c'; else $(CYGPATH_W) '$(srcdir)/javanvm/sound.c'; fi`

dos/atari800-sound_dos.o: dos/sound_dos.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dos/atari800-sound_dos.o -MD -MP -MF dos/$(DEPDIR)/atari800-sound_dos.Tpo -c -o dos/atari800-sound_dos.o `test -f 'dos/sound_dos.c' || echo '$(srcdir)/'`dos/sound_dos.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) dos/$(DEPDIR)/atari800-sound_dos.Tpo dos/$(DEPDIR)/atari800-sound_dos.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dos/sound_dos.c' object='dos/atari800-sound_dos.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dos/atari800-sound_dos.o `test -f 'dos/sound_dos.c' || echo '$(srcdir)/'`dos/sound_dos.c

dos/atari800-sound_dos.obj: dos/sound_dos.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dos/atari800-sound_dos.obj -MD -MP -MF dos/$(DEPDIR)/atari800-sound_dos.Tpo -c -o dos/atari800-sound_dos.obj `if test -f 'dos/sound_dos.c'; then $(CYGPATH_W) 'dos/sound_dos.c'; else $(CYGPATH_W) '$(srcdir)/dos/sound_dos.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) dos/$(DEPDIR)/atari800-sound_dos.Tpo dos/$(DEPDIR)/atari800-sound_dos.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dos/sound_dos.c' object='dos/atari800-sound_dos.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dos/atari800-sound_dos.obj `if test -f 'dos/sound_dos.c'; then $(CYGPATH_W) 'dos/sound_dos.c'; else $(CYGPATH_W) '$(srcdir)/dos/sound_dos.c'; fi`

dos/atari800-dos_sb.o: dos/dos_sb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dos/atari800-dos_sb.o -MD -MP -MF dos/$(DEPDIR)/atari800-dos_sb.Tpo -c -o dos/atari800-dos_sb.o `test -f 'dos/dos_sb.c' || echo '$(srcdir)/'`dos/dos_sb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) dos/$(DEPDIR)/atari800-dos_sb.Tpo dos/$(DEPDIR)/atari800-dos_sb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dos/dos_sb.c' object='dos/atari800-dos_sb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dos/atari800-dos_sb.o `test -f 'dos/dos_sb.c' || echo '$(srcdir)/'`dos/dos_sb.c

dos/atari800-dos_sb.obj: dos/dos_sb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dos/atari800-dos_sb.obj -MD -MP -MF dos/$(DEPDIR)/atari800-dos_sb.Tpo -c -o dos/atari800-dos_sb.obj `if test -f 'dos/dos_sb.c'; then $(CYGPATH_W) 'dos/dos_sb.c'; else $(CYGPATH_W) '$(srcdir)/dos/dos_sb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) dos/$(DEPDIR)/atari800-dos_sb.Tpo dos/$(DEPDIR)/atari800-dos_sb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dos/dos_sb.c' object='dos/atari800-dos_sb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dos/atari800-dos_sb.obj `if test -f 'dos/dos_sb.c'; then $(CYGPATH_W) 'dos/dos_sb.c'; else $(CYGPATH_W) '$(srcdir)/dos/dos_sb.c'; fi`

atari800-sound_oss.o: sound_oss.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-sound_oss.o -MD -MP -MF $(DEPDIR)/atari800-sound_oss.Tpo -c -o atari800-sound_oss.o `test -f 'sound_oss.c' || echo '$(srcdir)/'`sound_oss.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-sound_oss.Tpo $(DEPDIR)/atari800-sound_oss.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sound_oss.c' object='atari800-sound_oss.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-sound_oss.o `test -f 'sound_oss.c' || echo '$(srcdir)/'`sound_oss.c

atari800-sound_oss.obj: sound_oss.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-sound_oss.obj -MD -MP -MF $(DEPDIR)/atari800-sound_oss.Tpo -c -o atari800-sound_oss.obj `if test -f 'sound_oss.c'; then $(CYGPATH_W) 'sound_oss.c'; else $(CYGPATH_W) '$(srcdir)/sound_oss.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-sound_oss.Tpo $(DEPDIR)/atari800-sound_oss.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sound_oss.c' object='atari800-sound_oss.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-sound_oss.obj `if test -f 'sound_oss.c'; then $(CYGPATH_W) 'sound_oss.c'; else $(CYGPATH_W) '$(srcdir)/sound_oss.c'; fi`

win32/atari800-sound.o: win32/sound.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT win32/atari800-sound.o -MD -MP -MF win32/$(DEPDIR)/atari800-sound.Tpo -c -o win32/atari800-sound.o `test -f 'win32/sound.c' || echo '$(srcdir)/'`win32/sound.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/atari800-sound.Tpo win32/$(DEPDIR)/atari800-sound.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='win32/sound.c' object='win32/atari800-sound.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o win32/atari800-sound.o `test -f 'win32/sound.c' || echo '$(srcdir)/'`win32/sound.c

win32/atari800-sound.obj: win32/sound.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT win32/atari800-sound.obj -MD -MP -MF win32/$(DEPDIR)/atari800-sound.Tpo -c -o win32/atari800-sound.obj `if test -f 'win32/sound.c'; then $(CYGPATH_W) 'win32/sound.c'; else $(CYGPATH_W) '$(srcdir)/win32/sound.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) win32/$(DEPDIR)/atari800-sound.Tpo win32/$(DEPDIR)/atari800-sound.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='win32/sound.c' object='win32/atari800-sound.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o win32/atari800-sound.obj `if test -f 'win32/sound.c'; then $(CYGPATH_W) 'win32/sound.c'; else $(CYGPATH_W) '$(srcdir)/win32/sound.c'; fi`

libatari800/atari800-sound.o: libatari800/sound.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libatari800/atari800-sound.o -MD -MP -MF libatari800/$(DEPDIR)/atari800-sound.Tpo -c -o libatari800/atari800-sound.o `test -f 'libatari800/sound.c' || echo '$(srcdir)/'`libatari800/sound.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) libatari800/$(DEPDIR)/atari800-sound.Tpo libatari800/$(DEPDIR)/atari800-sound.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='libatari800/sound.c' object='libatari800/atari800-sound.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libatari800/atari800-sound.o `test -f 'libatari800/sound.c' || echo '$(srcdir)/'`libatari800/sound.c

libatari800/atari800-sound.obj: libatari800/sound.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libatari800/atari800-sound.obj -MD -MP -MF libatari800/$(DEPDIR)/atari800-sound.Tpo -c -o libatari800/atari800-sound.obj `if test -f 'libatari800/sound.c'; then $(CYGPATH_W) 'libatari800/sound.c'; else $(CYGPATH_W) '$(srcdir)/libatari800/sound.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) libatari800/$(DEPDIR)/atari800-sound.Tpo libatari800/$(DEPDIR)/atari800-sound.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='libatari800/sound.c' object='libatari800/atari800-sound.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libatari800/atari800-sound.obj `if test -f 'libatari800/sound.c'; then $(CYGPATH_W) 'libatari800/sound.c'; else $(CYGPATH_W) '$(srcdir)/libatari800/sound.c'; fi`

atari800-pokeyrec.o: pokeyrec.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pokeyrec.o -MD -MP -MF $(DEPDIR)/atari800-pokeyrec.Tpo -c -o atari800-pokeyrec.o `test -f 'pokeyrec.c' || echo '$(srcdir)/'`pokeyrec.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pokeyrec.Tpo $(DEPDIR)/atari800-pokeyrec.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pokeyrec.c' object='atari800-pokeyrec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pokeyrec.o `test -f 'pokeyrec.c' || echo '$(srcdir)/'`pokeyrec.c

atari800-pokeyrec.obj: pokeyrec.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pokeyrec.obj -MD -MP -MF $(DEPDIR)/atari800-pokeyrec.Tpo -c -o atari800-pokeyrec.obj `if test -f 'pokeyrec.c'; then $(CYGPATH_W) 'pokeyrec.c'; else $(CYGPATH_W) '$(srcdir)/pokeyrec.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pokeyrec.Tpo $(DEPDIR)/atari800-pokeyrec.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pokeyrec.c' object='atari800-pokeyrec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pokeyrec.obj `if test -f 'pokeyrec.c'; then $(CYGPATH_W) 'pokeyrec.c'; else $(CYGPATH_W) '$(srcdir)/pokeyrec.c'; fi`

atari800-file_export.o: file_export.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-file_export.o -MD -MP -MF $(DEPDIR)/atari800-file_export.Tpo -c -o atari800-file_export.o `test -f 'file_export.c' || echo '$(srcdir)/'`file_export.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-file_export.Tpo $(DEPDIR)/atari800-file_export.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='file_export.c' object='atari800-file_export.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-file_export.o `test -f 'file_export.c' || echo '$(srcdir)/'`file_export.c

atari800-file_export.obj: file_export.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-file_export.obj -MD -MP -MF $(DEPDIR)/atari800-file_export.Tpo -c -o atari800-file_export.obj `if test -f 'file_export.c'; then $(CYGPATH_W) 'file_export.c'; else $(CYGPATH_W) '$(srcdir)/file_export.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-file_export.Tpo $(DEPDIR)/atari800-file_export.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='file_export.c' object='atari800-file_export.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-file_export.obj `if test -f 'file_export.c'; then $(CYGPATH_W) 'file_export.c'; else $(CYGPATH_W) '$(srcdir)/file_export.c'; fi`

codecs/atari800-container.o: codecs/container.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-container.o -MD -MP -MF codecs/$(DEPDIR)/atari800-container.Tpo -c -o codecs/atari800-container.o `test -f 'codecs/container.c' || echo '$(srcdir)/'`codecs/container.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-container.Tpo codecs/$(DEPDIR)/atari800-container.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/container.c' object='codecs/atari800-container.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-container.o `test -f 'codecs/container.c' || echo '$(srcdir)/'`codecs/container.c

codecs/atari800-container.obj: codecs/container.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-container.obj -MD -MP -MF codecs/$(DEPDIR)/atari800-container.Tpo -c -o codecs/atari800-container.obj `if test -f 'codecs/container.c'; then $(CYGPATH_W) 'codecs/container.c'; else $(CYGPATH_W) '$(srcdir)/codecs/container.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-container.Tpo codecs/$(DEPDIR)/atari800-container.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/container.c' object='codecs/atari800-container.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-container.obj `if test -f 'codecs/container.c'; then $(CYGPATH_W) 'codecs/container.c'; else $(CYGPATH_W) '$(srcdir)/codecs/container.c'; fi`

codecs/atari800-container_wav.o: codecs/container_wav.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-container_wav.o -MD -MP -MF codecs/$(DEPDIR)/atari800-container_wav.Tpo -c -o codecs/atari800-container_wav.o `test -f 'codecs/container_wav.c' || echo '$(srcdir)/'`codecs/container_wav.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-container_wav.Tpo codecs/$(DEPDIR)/atari800-container_wav.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/container_wav.c' object='codecs/atari800-container_wav.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-container_wav.o `test -f 'codecs/container_wav.c' || echo '$(srcdir)/'`codecs/container_wav.c

codecs/atari800-container_wav.obj: codecs/container_wav.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-container_wav.obj -MD -MP -MF codecs/$(DEPDIR)/atari800-container_wav.Tpo -c -o codecs/atari800-container_wav.obj `if test -f 'codecs/container_wav.c'; then $(CYGPATH_W) 'codecs/container_wav.c'; else $(CYGPATH_W) '$(srcdir)/codecs/container_wav.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-container_wav.Tpo codecs/$(DEPDIR)/atari800-container_wav.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/container_wav.c' object='codecs/atari800-container_wav.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-container_wav.obj `if test -f 'codecs/container_wav.c'; then $(CYGPATH_W) 'codecs/container_wav.c'; else $(CYGPATH_W) '$(srcdir)/codecs/container_wav.c'; fi`

codecs/atari800-audio.o: codecs/audio.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-audio.o -MD -MP -MF codecs/$(DEPDIR)/atari800-audio.Tpo -c -o codecs/atari800-audio.o `test -f 'codecs/audio.c' || echo '$(srcdir)/'`codecs/audio.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-audio.Tpo codecs/$(DEPDIR)/atari800-audio.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/audio.c' object='codecs/atari800-audio.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-audio.o `test -f 'codecs/audio.c' || echo '$(srcdir)/'`codecs/audio.c

codecs/atari800-audio.obj: codecs/audio.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-audio.obj -MD -MP -MF codecs/$(DEPDIR)/atari800-audio.Tpo -c -o codecs/atari800-audio.obj `if test -f 'codecs/audio.c'; then $(CYGPATH_W) 'codecs/audio.c'; else $(CYGPATH_W) '$(srcdir)/codecs/audio.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-audio.Tpo codecs/$(DEPDIR)/atari800-audio.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/audio.c' object='codecs/atari800-audio.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-audio.obj `if test -f 'codecs/audio.c'; then $(CYGPATH_W) 'codecs/audio.c'; else $(CYGPATH_W) '$(srcdir)/codecs/audio.c'; fi`

codecs/atari800-audio_pcm.o: codecs/audio_pcm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-audio_pcm.o -MD -MP -MF codecs/$(DEPDIR)/atari800-audio_pcm.Tpo -c -o codecs/atari800-audio_pcm.o `test -f 'codecs/audio_pcm.c' || echo '$(srcdir)/'`codecs/audio_pcm.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-audio_pcm.Tpo codecs/$(DEPDIR)/atari800-audio_pcm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/audio_pcm.c' object='codecs/atari800-audio_pcm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-audio_pcm.o `test -f 'codecs/audio_pcm.c' || echo '$(srcdir)/'`codecs/audio_pcm.c

codecs/atari800-audio_pcm.obj: codecs/audio_pcm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-audio_pcm.obj -MD -MP -MF codecs/$(DEPDIR)/atari800-audio_pcm.Tpo -c -o codecs/atari800-audio_pcm.obj `if test -f 'codecs/audio_pcm.c'; then $(CYGPATH_W) 'codecs/audio_pcm.c'; else $(CYGPATH_W) '$(srcdir)/codecs/audio_pcm.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-audio_pcm.Tpo codecs/$(DEPDIR)/atari800-audio_pcm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/audio_pcm.c' object='codecs/atari800-audio_pcm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-audio_pcm.obj `if test -f 'codecs/audio_pcm.c'; then $(CYGPATH_W) 'codecs/audio_pcm.c'; else $(CYGPATH_W) '$(srcdir)/codecs/audio_pcm.c'; fi`

codecs/atari800-audio_adpcm.o: codecs/audio_adpcm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-audio_adpcm.o -MD -MP -MF codecs/$(DEPDIR)/atari800-audio_adpcm.Tpo -c -o codecs/atari800-audio_adpcm.o `test -f 'codecs/audio_adpcm.c' || echo '$(srcdir)/'`codecs/audio_adpcm.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-audio_adpcm.Tpo codecs/$(DEPDIR)/atari800-audio_adpcm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/audio_adpcm.c' object='codecs/atari800-audio_adpcm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-audio_adpcm.o `test -f 'codecs/audio_adpcm.c' || echo '$(srcdir)/'`codecs/audio_adpcm.c

codecs/atari800-audio_adpcm.obj: codecs/audio_adpcm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-audio_adpcm.obj -MD -MP -MF codecs/$(DEPDIR)/atari800-audio_adpcm.Tpo -c -o codecs/atari800-audio_adpcm.obj `if test -f 'codecs/audio_adpcm.c'; then $(CYGPATH_W) 'codecs/audio_adpcm.c'; else $(CYGPATH_W) '$(srcdir)/codecs/audio_adpcm.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-audio_adpcm.Tpo codecs/$(DEPDIR)/atari800-audio_adpcm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/audio_adpcm.c' object='codecs/atari800-audio_adpcm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-audio_adpcm.obj `if test -f 'codecs/audio_adpcm.c'; then $(CYGPATH_W) 'codecs/audio_adpcm.c'; else $(CYGPATH_W) '$(srcdir)/codecs/audio_adpcm.c'; fi`

codecs/atari800-audio_mulaw.o: codecs/audio_mulaw.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-audio_mulaw.o -MD -MP -MF codecs/$(DEPDIR)/atari800-audio_mulaw.Tpo -c -o codecs/atari800-audio_mulaw.o `test -f 'codecs/audio_mulaw.c' || echo '$(srcdir)/'`codecs/audio_mulaw.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-audio_mulaw.Tpo codecs/$(DEPDIR)/atari800-audio_mulaw.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/audio_mulaw.c' object='codecs/atari800-audio_mulaw.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-audio_mulaw.o `test -f 'codecs/audio_mulaw.c' || echo '$(srcdir)/'`codecs/audio_mulaw.c

codecs/atari800-audio_mulaw.obj: codecs/audio_mulaw.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-audio_mulaw.obj -MD -MP -MF codecs/$(DEPDIR)/atari800-audio_mulaw.Tpo -c -o codecs/atari800-audio_mulaw.obj `if test -f 'codecs/audio_mulaw.c'; then $(CYGPATH_W) 'codecs/audio_mulaw.c'; else $(CYGPATH_W) '$(srcdir)/codecs/audio_mulaw.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-audio_mulaw.Tpo codecs/$(DEPDIR)/atari800-audio_mulaw.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/audio_mulaw.c' object='codecs/atari800-audio_mulaw.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-audio_mulaw.obj `if test -f 'codecs/audio_mulaw.c'; then $(CYGPATH_W) 'codecs/audio_mulaw.c'; else $(CYGPATH_W) '$(srcdir)/codecs/audio_mulaw.c'; fi`

codecs/atari800-audio_mp3.o: codecs/audio_mp3.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-audio_mp3.o -MD -MP -MF codecs/$(DEPDIR)/atari800-audio_mp3.Tpo -c -o codecs/atari800-audio_mp3.o `test -f 'codecs/audio_mp3.c' || echo '$(srcdir)/'`codecs/audio_mp3.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-audio_mp3.Tpo codecs/$(DEPDIR)/atari800-audio_mp3.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/audio_mp3.c' object='codecs/atari800-audio_mp3.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-audio_mp3.o `test -f 'codecs/audio_mp3.c' || echo '$(srcdir)/'`codecs/audio_mp3.c

codecs/atari800-audio_mp3.obj: codecs/audio_mp3.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-audio_mp3.obj -MD -MP -MF codecs/$(DEPDIR)/atari800-audio_mp3.Tpo -c -o codecs/atari800-audio_mp3.obj `if test -f 'codecs/audio_mp3.c'; then $(CYGPATH_W) 'codecs/audio_mp3.c'; else $(CYGPATH_W) '$(srcdir)/codecs/audio_mp3.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-audio_mp3.Tpo codecs/$(DEPDIR)/atari800-audio_mp3.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/audio_mp3.c' object='codecs/atari800-audio_mp3.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-audio_mp3.obj `if test -f 'codecs/audio_mp3.c'; then $(CYGPATH_W) 'codecs/audio_mp3.c'; else $(CYGPATH_W) '$(srcdir)/codecs/audio_mp3.c'; fi`

codecs/atari800-container_mp3.o: codecs/container_mp3.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-container_mp3.o -MD -MP -MF codecs/$(DEPDIR)/atari800-container_mp3.Tpo -c -o codecs/atari800-container_mp3.o `test -f 'codecs/container_mp3.c' || echo '$(srcdir)/'`codecs/container_mp3.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-container_mp3.Tpo codecs/$(DEPDIR)/atari800-container_mp3.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/container_mp3.c' object='codecs/atari800-container_mp3.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-container_mp3.o `test -f 'codecs/container_mp3.c' || echo '$(srcdir)/'`codecs/container_mp3.c

codecs/atari800-container_mp3.obj: codecs/container_mp3.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-container_mp3.obj -MD -MP -MF codecs/$(DEPDIR)/atari800-container_mp3.Tpo -c -o codecs/atari800-container_mp3.obj `if test -f 'codecs/container_mp3.c'; then $(CYGPATH_W) 'codecs/container_mp3.c'; else $(CYGPATH_W) '$(srcdir)/codecs/container_mp3.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-container_mp3.Tpo codecs/$(DEPDIR)/atari800-container_mp3.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/container_mp3.c' object='codecs/atari800-container_mp3.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-container_mp3.obj `if test -f 'codecs/container_mp3.c'; then $(CYGPATH_W) 'codecs/container_mp3.c'; else $(CYGPATH_W) '$(srcdir)/codecs/container_mp3.c'; fi`

codecs/atari800-container_avi.o: codecs/container_avi.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-container_avi.o -MD -MP -MF codecs/$(DEPDIR)/atari800-container_avi.Tpo -c -o codecs/atari800-container_avi.o `test -f 'codecs/container_avi.c' || echo '$(srcdir)/'`codecs/container_avi.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-container_avi.Tpo codecs/$(DEPDIR)/atari800-container_avi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/container_avi.c' object='codecs/atari800-container_avi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-container_avi.o `test -f 'codecs/container_avi.c' || echo '$(srcdir)/'`codecs/container_avi.c

codecs/atari800-container_avi.obj: codecs/container_avi.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-container_avi.obj -MD -MP -MF codecs/$(DEPDIR)/atari800-container_avi.Tpo -c -o codecs/atari800-container_avi.obj `if test -f 'codecs/container_avi.c'; then $(CYGPATH_W) 'codecs/container_avi.c'; else $(CYGPATH_W) '$(srcdir)/codecs/container_avi.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-container_avi.Tpo codecs/$(DEPDIR)/atari800-container_avi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/container_avi.c' object='codecs/atari800-container_avi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-container_avi.obj `if test -f 'codecs/container_avi.c'; then $(CYGPATH_W) 'codecs/container_avi.c'; else $(CYGPATH_W) '$(srcdir)/codecs/container_avi.c'; fi`

codecs/atari800-video.o: codecs/video.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-video.o -MD -MP -MF codecs/$(DEPDIR)/atari800-video.Tpo -c -o codecs/atari800-video.o `test -f 'codecs/video.c' || echo '$(srcdir)/'`codecs/video.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-video.Tpo codecs/$(DEPDIR)/atari800-video.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/video.c' object='codecs/atari800-video.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-video.o `test -f 'codecs/video.c' || echo '$(srcdir)/'`codecs/video.c

codecs/atari800-video.obj: codecs/video.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-video.obj -MD -MP -MF codecs/$(DEPDIR)/atari800-video.Tpo -c -o codecs/atari800-video.obj `if test -f 'codecs/video.c'; then $(CYGPATH_W) 'codecs/video.c'; else $(CYGPATH_W) '$(srcdir)/codecs/video.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-video.Tpo codecs/$(DEPDIR)/atari800-video.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/video.c' object='codecs/atari800-video.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-video.obj `if test -f 'codecs/video.c'; then $(CYGPATH_W) 'codecs/video.c'; else $(CYGPATH_W) '$(srcdir)/codecs/video.c'; fi`

codecs/atari800-video_mrle.o: codecs/video_mrle.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-video_mrle.o -MD -MP -MF codecs/$(DEPDIR)/atari800-video_mrle.Tpo -c -o codecs/atari800-video_mrle.o `test -f 'codecs/video_mrle.c' || echo '$(srcdir)/'`codecs/video_mrle.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-video_mrle.Tpo codecs/$(DEPDIR)/atari800-video_mrle.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/video_mrle.c' object='codecs/atari800-video_mrle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-video_mrle.o `test -f 'codecs/video_mrle.c' || echo '$(srcdir)/'`codecs/video_mrle.c

codecs/atari800-video_mrle.obj: codecs/video_mrle.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-video_mrle.obj -MD -MP -MF codecs/$(DEPDIR)/atari800-video_mrle.Tpo -c -o codecs/atari800-video_mrle.obj `if test -f 'codecs/video_mrle.c'; then $(CYGPATH_W) 'codecs/video_mrle.c'; else $(CYGPATH_W) '$(srcdir)/codecs/video_mrle.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-video_mrle.Tpo codecs/$(DEPDIR)/atari800-video_mrle.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/video_mrle.c' object='codecs/atari800-video_mrle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-video_mrle.obj `if test -f 'codecs/video_mrle.c'; then $(CYGPATH_W) 'codecs/video_mrle.c'; else $(CYGPATH_W) '$(srcdir)/codecs/video_mrle.c'; fi`

codecs/atari800-video_mpng.o: codecs/video_mpng.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-video_mpng.o -MD -MP -MF codecs/$(DEPDIR)/atari800-video_mpng.Tpo -c -o codecs/atari800-video_mpng.o `test -f 'codecs/video_mpng.c' || echo '$(srcdir)/'`codecs/video_mpng.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-video_mpng.Tpo codecs/$(DEPDIR)/atari800-video_mpng.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/video_mpng.c' object='codecs/atari800-video_mpng.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-video_mpng.o `test -f 'codecs/video_mpng.c' || echo '$(srcdir)/'`codecs/video_mpng.c

codecs/atari800-video_mpng.obj: codecs/video_mpng.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-video_mpng.obj -MD -MP -MF codecs/$(DEPDIR)/atari800-video_mpng.Tpo -c -o codecs/atari800-video_mpng.obj `if test -f 'codecs/video_mpng.c'; then $(CYGPATH_W) 'codecs/video_mpng.c'; else $(CYGPATH_W) '$(srcdir)/codecs/video_mpng.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-video_mpng.Tpo codecs/$(DEPDIR)/atari800-video_mpng.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/video_mpng.c' object='codecs/atari800-video_mpng.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-video_mpng.obj `if test -f 'codecs/video_mpng.c'; then $(CYGPATH_W) 'codecs/video_mpng.c'; else $(CYGPATH_W) '$(srcdir)/codecs/video_mpng.c'; fi`

codecs/atari800-video_zmbv.o: codecs/video_zmbv.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-video_zmbv.o -MD -MP -MF codecs/$(DEPDIR)/atari800-video_zmbv.Tpo -c -o codecs/atari800-video_zmbv.o `test -f 'codecs/video_zmbv.c' || echo '$(srcdir)/'`codecs/video_zmbv.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-video_zmbv.Tpo codecs/$(DEPDIR)/atari800-video_zmbv.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/video_zmbv.c' object='codecs/atari800-video_zmbv.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-video_zmbv.o `test -f 'codecs/video_zmbv.c' || echo '$(srcdir)/'`codecs/video_zmbv.c

codecs/atari800-video_zmbv.obj: codecs/video_zmbv.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-video_zmbv.obj -MD -MP -MF codecs/$(DEPDIR)/atari800-video_zmbv.Tpo -c -o codecs/atari800-video_zmbv.obj `if test -f 'codecs/video_zmbv.c'; then $(CYGPATH_W) 'codecs/video_zmbv.c'; else $(CYGPATH_W) '$(srcdir)/codecs/video_zmbv.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-video_zmbv.Tpo codecs/$(DEPDIR)/atari800-video_zmbv.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/video_zmbv.c' object='codecs/atari800-video_zmbv.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-video_zmbv.obj `if test -f 'codecs/video_zmbv.c'; then $(CYGPATH_W) 'codecs/video_zmbv.c'; else $(CYGPATH_W) '$(srcdir)/codecs/video_zmbv.c'; fi`

falcon/atari800-main.o: falcon/main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT falcon/atari800-main.o -MD -MP -MF falcon/$(DEPDIR)/atari800-main.Tpo -c -o falcon/atari800-main.o `test -f 'falcon/main.c' || echo '$(srcdir)/'`falcon/main.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) falcon/$(DEPDIR)/atari800-main.Tpo falcon/$(DEPDIR)/atari800-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='falcon/main.c' object='falcon/atari800-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o falcon/atari800-main.o `test -f 'falcon/main.c' || echo '$(srcdir)/'`falcon/main.c

falcon/atari800-main.obj: falcon/main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT falcon/atari800-main.obj -MD -MP -MF falcon/$(DEPDIR)/atari800-main.Tpo -c -o falcon/atari800-main.obj `if test -f 'falcon/main.c'; then $(CYGPATH_W) 'falcon/main.c'; else $(CYGPATH_W) '$(srcdir)/falcon/main.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) falcon/$(DEPDIR)/atari800-main.Tpo falcon/$(DEPDIR)/atari800-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='falcon/main.c' object='falcon/atari800-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o falcon/atari800-main.obj `if test -f 'falcon/main.c'; then $(CYGPATH_W) 'falcon/main.c'; else $(CYGPATH_W) '$(srcdir)/falcon/main.c'; fi`

atari800-atari_ps2.o: atari_ps2.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-atari_ps2.o -MD -MP -MF $(DEPDIR)/atari800-atari_ps2.Tpo -c -o atari800-atari_ps2.o `test -f 'atari_ps2.c' || echo '$(srcdir)/'`atari_ps2.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-atari_ps2.Tpo $(DEPDIR)/atari800-atari_ps2.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='atari_ps2.c' object='atari800-atari_ps2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-atari_ps2.o `test -f 'atari_ps2.c' || echo '$(srcdir)/'`atari_ps2.c

atari800-atari_ps2.obj: atari_ps2.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-atari_ps2.obj -MD -MP -MF $(DEPDIR)/atari800-atari_ps2.Tpo -c -o atari800-atari_ps2.obj `if test -f 'atari_ps2.c'; then $(CYGPATH_W) 'atari_ps2.c'; else $(CYGPATH_W) '$(srcdir)/atari_ps2.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-atari_ps2.Tpo $(DEPDIR)/atari800-atari_ps2.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='atari_ps2.c' object='atari800-atari_ps2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-atari_ps2.obj `if test -f 'atari_ps2.c'; then $(CYGPATH_W) 'atari_ps2.c'; else $(CYGPATH_W) '$(srcdir)/atari_ps2.c'; fi`

atari800-atari_rpi.o: atari_rpi.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-atari_rpi.o -MD -MP -MF $(DEPDIR)/atari800-atari_rpi.Tpo -c -o atari800-atari_rpi.o `test -f 'atari_rpi.c' || echo '$(srcdir)/'`atari_rpi.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-atari_rpi.Tpo $(DEPDIR)/atari800-atari_rpi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='atari_rpi.c' object='atari800-atari_rpi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-atari_rpi.o `test -f 'atari_rpi.c' || echo '$(srcdir)/'`atari_rpi.c

atari800-atari_rpi.obj: atari_rpi.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-atari_rpi.obj -MD -MP -MF $(DEPDIR)/atari800-atari_rpi.Tpo -c -o atari800-atari_rpi.obj `if test -f 'atari_rpi.c'; then $(CYGPATH_W) 'atari_rpi.c'; else $(CYGPATH_W) '$(srcdir)/atari_rpi.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-atari_rpi.Tpo $(DEPDIR)/atari800-atari_rpi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='atari_rpi.c' object='atari800-atari_rpi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-atari_rpi.obj `if test -f 'atari_rpi.c'; then $(CYGPATH_W) 'atari_rpi.c'; else $(CYGPATH_W) '$(srcdir)/atari_rpi.c'; fi`

gles2/atari800-video.o: gles2/video.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gles2/atari800-video.o -MD -MP -MF gles2/$(DEPDIR)/atari800-video.Tpo -c -o gles2/atari800-video.o `test -f 'gles2/video.c' || echo '$(srcdir)/'`gles2/video.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) gles2/$(DEPDIR)/atari800-video.Tpo gles2/$(DEPDIR)/atari800-video.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='gles2/video.c' object='gles2/atari800-video.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gles2/atari800-video.o `test -f 'gles2/video.c' || echo '$(srcdir)/'`gles2/video.c

gles2/atari800-video.obj: gles2/video.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gles2/atari800-video.obj -MD -MP -MF gles2/$(DEPDIR)/atari800-video.Tpo -c -o gles2/atari800-video.obj `if test -f 'gles2/video.c'; then $(CYGPATH_W) 'gles2/video.c'; else $(CYGPATH_W) '$(srcdir)/gles2/video.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) gles2/$(DEPDIR)/atari800-video.Tpo gles2/$(DEPDIR)/atari800-video.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='gles2/video.c' object='gles2/atari800-video.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gles2/atari800-video.obj `if test -f 'gles2/video.c'; then $(CYGPATH_W) 'gles2/video.c'; else $(CYGPATH_W) '$(srcdir)/gles2/video.c'; fi`

sdl/atari800-main.o: sdl/main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdl/atari800-main.o -MD -MP -MF sdl/$(DEPDIR)/atari800-main.Tpo -c -o sdl/atari800-main.o `test -f 'sdl/main.c' || echo '$(srcdir)/'`sdl/main.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) sdl/$(DEPDIR)/atari800-main.Tpo sdl/$(DEPDIR)/atari800-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sdl/main.c' object='sdl/atari800-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdl/atari800-main.o `test -f 'sdl/main.c' || echo '$(srcdir)/'`sdl/main.c

sdl/atari800-main.obj: sdl/main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdl/atari800-main.obj -MD -MP -MF sdl/$(DEPDIR)/atari800-main.Tpo -c -o sdl/atari800-main.obj `if test -f 'sdl/main.c'; then $(CYGPATH_W) 'sdl/main.c'; else $(CYGPATH_W) '$(srcdir)/sdl/main.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) sdl/$(DEPDIR)/atari800-main.Tpo sdl/$(DEPDIR)/atari800-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sdl/main.c' object='sdl/atari800-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdl/atari800-main.obj `if test -f 'sdl/main.c'; then $(CYGPATH_W) 'sdl/main.c'; else $(CYGPATH_W) '$(srcdir)/sdl/main.c'; fi`

sdl/atari800-input.o: sdl/input.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdl/atari800-input.o -MD -MP -MF sdl/$(DEPDIR)/atari800-input.Tpo -c -o sdl/atari800-input.o `test -f 'sdl/input.c' || echo '$(srcdir)/'`sdl/input.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) sdl/$(DEPDIR)/atari800-input.Tpo sdl/$(DEPDIR)/atari800-input.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sdl/input.c' object='sdl/atari800-input.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdl/atari800-input.o `test -f 'sdl/input.c' || echo '$(srcdir)/'`sdl/input.c

sdl/atari800-input.obj: sdl/input.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdl/atari800-input.obj -MD -MP -MF sdl/$(DEPDIR)/atari800-input.Tpo -c -o sdl/atari800-input.obj `if test -f 'sdl/input.c'; then $(CYGPATH_W) 'sdl/input.c'; else $(CYGPATH_W) '$(srcdir)/sdl/input.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) sdl/$(DEPDIR)/atari800-input.Tpo sdl/$(DEPDIR)/atari800-input.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sdl/input.c' object='sdl/atari800-input.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdl/atari800-input.obj `if test -f 'sdl/input.c'; then $(CYGPATH_W) 'sdl/input.c'; else $(CYGPATH_W) '$(srcdir)/sdl/input.c'; fi`

atari800-atari_x11.o: atari_x11.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-atari_x11.o -MD -MP -MF $(DEPDIR)/atari800-atari_x11.Tpo -c -o atari800-atari_x11.o `test -f 'atari_x11.c' || echo '$(srcdir)/'`atari_x11.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-atari_x11.Tpo $(DEPDIR)/atari800-atari_x11.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='atari_x11.c' object='atari800-atari_x11.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-atari_x11.o `test -f 'atari_x11.c' || echo '$(srcdir)/'`atari_x11.c

atari800-atari_x11.obj: atari_x11.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-atari_x11.obj -MD -MP -MF $(DEPDIR)/atari800-atari_x11.Tpo -c -o atari800-atari_x11.obj `if test -f 'atari_x11.c'; then $(CYGPATH_W) 'atari_x11.c'; else $(CYGPATH_W) '$(srcdir)/atari_x11.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-atari_x11.Tpo $(DEPDIR)/atari800-atari_x11.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='atari_x11.c' object='atari800-atari_x11.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-atari_x11.obj `if test -f 'atari_x11.c'; then $(CYGPATH_W) 'atari_x11.c'; else $(CYGPATH_W) '$(srcdir)/atari_x11.c'; fi`

javanvm/atari800-main.o: javanvm/main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT javanvm/atari800-main.o -MD -MP -MF javanvm/$(DEPDIR)/atari800-main.Tpo -c -o javanvm/atari800-main.o `test -f 'javanvm/main.c' || echo '$(srcdir)/'`javanvm/main.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) javanvm/$(DEPDIR)/atari800-main.Tpo javanvm/$(DEPDIR)/atari800-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='javanvm/main.c' object='javanvm/atari800-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o javanvm/atari800-main.o `test -f 'javanvm/main.c' || echo '$(srcdir)/'`javanvm/main.c

javanvm/atari800-main.obj: javanvm/main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT javanvm/atari800-main.obj -MD -MP -MF javanvm/$(DEPDIR)/atari800-main.Tpo -c -o javanvm/atari800-main.obj `if test -f 'javanvm/main.c'; then $(CYGPATH_W) 'javanvm/main.c'; else $(CYGPATH_W) '$(srcdir)/javanvm/main.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) javanvm/$(DEPDIR)/atari800-main.Tpo javanvm/$(DEPDIR)/atari800-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='javanvm/main.c' object='javanvm/atari800-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o javanvm/atari800-main.obj `if test -f 'javanvm/main.c'; then $(CYGPATH_W) 'javanvm/main.c'; else $(CYGPATH_W) '$(srcdir)/javanvm/main.c'; fi`

javanvm/atari800-video.o: javanvm/video.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT javanvm/atari800-video.o -MD -MP -MF javanvm/$(DEPDIR)/atari800-video.Tpo -c -o javanvm/atari800-video.o `test -f 'javanvm/video.c' || echo '$(srcdir)/'`javanvm/video.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) javanvm/$(DEPDIR)/atari800-video.Tpo javanvm/$(DEPDIR)/atari800-video.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='javanvm/video.c' object='javanvm/atari800-video.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o javanvm/atari800-video.o `test -f 'javanvm/video.c' || echo '$(srcdir)/'`javanvm/video.c

javanvm/atari800-video.obj: javanvm/video.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT javanvm/atari800-video.obj -MD -MP -MF javanvm/$(DEPDIR)/atari800-video.Tpo -c -o javanvm/atari800-video.obj `if test -f 'javanvm/video.c'; then $(CYGPATH_W) 'javanvm/video.c'; else $(CYGPATH_W) '$(srcdir)/javanvm/video.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) javanvm/$(DEPDIR)/atari800-video.Tpo javanvm/$(DEPDIR)/atari800-video.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='javanvm/video.c' object='javanvm/atari800-video.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o javanvm/atari800-video.obj `if test -f 'javanvm/video.c'; then $(CYGPATH_W) 'javanvm/video.c'; else $(CYGPATH_W) '$(srcdir)/javanvm/video.c'; fi`

javanvm/atari800-input.o: javanvm/input.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT javanvm/atari800-input.o -MD -MP -MF javanvm/$(DEPDIR)/atari800-input.Tpo -c -o javanvm/atari800-input.o `test -f 'javanvm/input.c' || echo '$(srcdir)/'`javanvm/input.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) javanvm/$(DEPDIR)/atari800-input.Tpo javanvm/$(DEPDIR)/atari800-input.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='javanvm/input.c' object='javanvm/atari800-input.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o javanvm/atari800-input.o `test -f 'javanvm/input.c' || echo '$(srcdir)/'`javanvm/input.c

javanvm/atari800-input.obj: javanvm/input.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT javanvm/atari800-input.obj -MD -MP -MF javanvm/$(DEPDIR)/atari800-input.Tpo -c -o javanvm/atari800-input.obj `if test -f 'javanvm/input.c'; then $(CYGPATH_W) 'javanvm/input.c'; else $(CYGPATH_W) '$(srcdir)/javanvm/input.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) javanvm/$(DEPDIR)/atari800-input.Tpo javanvm/$(DEPDIR)/atari800-input.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='javanvm/input.c' object='javanvm/atari800-input.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o javanvm/atari800-input.obj `if test -f 'javanvm/input.c'; then $(CYGPATH_W) 'javanvm/input.c'; else $(CYGPATH_W) '$(srcdir)/javanvm/input.c'; fi`

atari800-videomode.o: videomode.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-videomode.o -MD -MP -MF $(DEPDIR)/atari800-videomode.Tpo -c -o atari800-videomode.o `test -f 'videomode.c' || echo '$(srcdir)/'`videomode.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-videomode.Tpo $(DEPDIR)/atari800-videomode.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='videomode.c' object='atari800-videomode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-videomode.o `test -f 'videomode.c' || echo '$(srcdir)/'`videomode.c

atari800-videomode.obj: videomode.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-videomode.obj -MD -MP -MF $(DEPDIR)/atari800-videomode.Tpo -c -o atari800-videomode.obj `if test -f 'videomode.c'; then $(CYGPATH_W) 'videomode.c'; else $(CYGPATH_W) '$(srcdir)/videomode.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-videomode.Tpo $(DEPDIR)/atari800-videomode.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='videomode.c' object='atari800-videomode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-videomode.obj `if test -f 'videomode.c'; then $(CYGPATH_W) 'videomode.c'; else $(CYGPATH_W) '$(srcdir)/videomode.c'; fi`

sdl/atari800-video.o: sdl/video.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdl/atari800-video.o -MD -MP -MF sdl/$(DEPDIR)/atari800-video.Tpo -c -o sdl/atari800-video.o `test -f 'sdl/video.c' || echo '$(srcdir)/'`sdl/video.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) sdl/$(DEPDIR)/atari800-video.Tpo sdl/$(DEPDIR)/atari800-video.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sdl/video.c' object='sdl/atari800-video.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdl/atari800-video.o `test -f 'sdl/video.c' || echo '$(srcdir)/'`sdl/video.c

sdl/atari800-video.obj: sdl/video.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdl/atari800-video.obj -MD -MP -MF sdl/$(DEPDIR)/atari800-video.Tpo -c -o sdl/atari800-video.obj `if test -f 'sdl/video.c'; then $(CYGPATH_W) 'sdl/video.c'; else $(CYGPATH_W) '$(srcdir)/sdl/video.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) sdl/$(DEPDIR)/atari800-video.Tpo sdl/$(DEPDIR)/atari800-video.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sdl/video.c' object='sdl/atari800-video.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdl/atari800-video.obj `if test -f 'sdl/video.c'; then $(CYGPATH_W) 'sdl/video.c'; else $(CYGPATH_W) '$(srcdir)/sdl/video.c'; fi`

sdl/atari800-video_sw.o: sdl/video_sw.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdl/atari800-video_sw.o -MD -MP -MF sdl/$(DEPDIR)/atari800-video_sw.Tpo -c -o sdl/atari800-video_sw.o `test -f 'sdl/video_sw.c' || echo '$(srcdir)/'`sdl/video_sw.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) sdl/$(DEPDIR)/atari800-video_sw.Tpo sdl/$(DEPDIR)/atari800-video_sw.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sdl/video_sw.c' object='sdl/atari800-video_sw.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdl/atari800-video_sw.o `test -f 'sdl/video_sw.c' || echo '$(srcdir)/'`sdl/video_sw.c

sdl/atari800-video_sw.obj: sdl/video_sw.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdl/atari800-video_sw.obj -MD -MP -MF sdl/$(DEPDIR)/atari800-video_sw.Tpo -c -o sdl/atari800-video_sw.obj `if test -f 'sdl/video_sw.c'; then $(CYGPATH_W) 'sdl/video_sw.c'; else $(CYGPATH_W) '$(srcdir)/sdl/video_sw.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) sdl/$(DEPDIR)/atari800-video_sw.Tpo sdl/$(DEPDIR)/atari800-video_sw.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sdl/video_sw.c' object='sdl/atari800-video_sw.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdl/atari800-video_sw.obj `if test -f 'sdl/video_sw.c'; then $(CYGPATH_W) 'sdl/video_sw.c'; else $(CYGPATH_W) '$(srcdir)/sdl/video_sw.c'; fi`

sdl/atari800-palette.o: sdl/palette.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdl/atari800-palette.o -MD -MP -MF sdl/$(DEPDIR)/atari800-palette.Tpo -c -o sdl/atari800-palette.o `test -f 'sdl/palette.c' || echo '$(srcdir)/'`sdl/palette.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) sdl/$(DEPDIR)/atari800-palette.Tpo sdl/$(DEPDIR)/atari800-palette.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sdl/palette.c' object='sdl/atari800-palette.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdl/atari800-palette.o `test -f 'sdl/palette.c' || echo '$(srcdir)/'`sdl/palette.c

sdl/atari800-palette.obj: sdl/palette.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdl/atari800-palette.obj -MD -MP -MF sdl/$(DEPDIR)/atari800-palette.Tpo -c -o sdl/atari800-palette.obj `if test -f 'sdl/palette.c'; then $(CYGPATH_W) 'sdl/palette.c'; else $(CYGPATH_W) '$(srcdir)/sdl/palette.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) sdl/$(DEPDIR)/atari800-palette.Tpo sdl/$(DEPDIR)/atari800-palette.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sdl/palette.c' object='sdl/atari800-palette.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdl/atari800-palette.obj `if test -f 'sdl/palette.c'; then $(CYGPATH_W) 'sdl/palette.c'; else $(CYGPATH_W) '$(srcdir)/sdl/palette.c'; fi`

atari800-pbi_proto80.o: pbi_proto80.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pbi_proto80.o -MD -MP -MF $(DEPDIR)/atari800-pbi_proto80.Tpo -c -o atari800-pbi_proto80.o `test -f 'pbi_proto80.c' || echo '$(srcdir)/'`pbi_proto80.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pbi_proto80.Tpo $(DEPDIR)/atari800-pbi_proto80.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pbi_proto80.c' object='atari800-pbi_proto80.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pbi_proto80.o `test -f 'pbi_proto80.c' || echo '$(srcdir)/'`pbi_proto80.c

atari800-pbi_proto80.obj: pbi_proto80.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pbi_proto80.obj -MD -MP -MF $(DEPDIR)/atari800-pbi_proto80.Tpo -c -o atari800-pbi_proto80.obj `if test -f 'pbi_proto80.c'; then $(CYGPATH_W) 'pbi_proto80.c'; else $(CYGPATH_W) '$(srcdir)/pbi_proto80.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pbi_proto80.Tpo $(DEPDIR)/atari800-pbi_proto80.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pbi_proto80.c' object='atari800-pbi_proto80.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pbi_proto80.obj `if test -f 'pbi_proto80.c'; then $(CYGPATH_W) 'pbi_proto80.c'; else $(CYGPATH_W) '$(srcdir)/pbi_proto80.c'; fi`

atari800-af80.o: af80.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-af80.o -MD -MP -MF $(DEPDIR)/atari800-af80.Tpo -c -o atari800-af80.o `test -f 'af80.c' || echo '$(srcdir)/'`af80.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-af80.Tpo $(DEPDIR)/atari800-af80.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='af80.c' object='atari800-af80.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-af80.o `test -f 'af80.c' || echo '$(srcdir)/'`af80.c

atari800-af80.obj: af80.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-af80.obj -MD -MP -MF $(DEPDIR)/atari800-af80.Tpo -c -o atari800-af80.obj `if test -f 'af80.c'; then $(CYGPATH_W) 'af80.c'; else $(CYGPATH_W) '$(srcdir)/af80.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-af80.Tpo $(DEPDIR)/atari800-af80.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='af80.c' object='atari800-af80.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-af80.obj `if test -f 'af80.c'; then $(CYGPATH_W) 'af80.c'; else $(CYGPATH_W) '$(srcdir)/af80.c'; fi`

atari800-bit3.o: bit3.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-bit3.o -MD -MP -MF $(DEPDIR)/atari800-bit3.Tpo -c -o atari800-bit3.o `test -f 'bit3.c' || echo '$(srcdir)/'`bit3.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-bit3.Tpo $(DEPDIR)/atari800-bit3.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='bit3.c' object='atari800-bit3.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-bit3.o `test -f 'bit3.c' || echo '$(srcdir)/'`bit3.c

atari800-bit3.obj: bit3.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-bit3.obj -MD -MP -MF $(DEPDIR)/atari800-bit3.Tpo -c -o atari800-bit3.obj `if test -f 'bit3.c'; then $(CYGPATH_W) 'bit3.c'; else $(CYGPATH_W) '$(srcdir)/bit3.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-bit3.Tpo $(DEPDIR)/atari800-bit3.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='bit3.c' object='atari800-bit3.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-bit3.obj `if test -f 'bit3.c'; then $(CYGPATH_W) 'bit3.c'; else $(CYGPATH_W) '$(srcdir)/bit3.c'; fi`

dos/atari800-atari_vga.o: dos/atari_vga.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dos/atari800-atari_vga.o -MD -MP -MF dos/$(DEPDIR)/atari800-atari_vga.Tpo -c -o dos/atari800-atari_vga.o `test -f 'dos/atari_vga.c' || echo '$(srcdir)/'`dos/atari_vga.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) dos/$(DEPDIR)/atari800-atari_vga.Tpo dos/$(DEPDIR)/atari800-atari_vga.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dos/atari_vga.c' object='dos/atari800-atari_vga.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dos/atari800-atari_vga.o `test -f 'dos/atari_vga.c' || echo '$(srcdir)/'`dos/atari_vga.c

dos/atari800-atari_vga.obj: dos/atari_vga.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dos/atari800-atari_vga.obj -MD -MP -MF dos/$(DEPDIR)/atari800-atari_vga.Tpo -c -o dos/atari800-atari_vga.obj `if test -f 'dos/atari_vga.c'; then $(CYGPATH_W) 'dos/atari_vga.c'; else $(CYGPATH_W) '$(srcdir)/dos/atari_vga.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) dos/$(DEPDIR)/atari800-atari_vga.Tpo dos/$(DEPDIR)/atari800-atari_vga.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dos/atari_vga.c' object='dos/atari800-atari_vga.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dos/atari800-atari_vga.obj `if test -f 'dos/atari_vga.c'; then $(CYGPATH_W) 'dos/atari_vga.c'; else $(CYGPATH_W) '$(srcdir)/dos/atari_vga.c'; fi`

dos/atari800-vga_gfx.o: dos/vga_gfx.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dos/atari800-vga_gfx.o -MD -MP -MF dos/$(DEPDIR)/atari800-vga_gfx.Tpo -c -o dos/atari800-vga_gfx.o `test -f 'dos/vga_gfx.c' || echo '$(srcdir)/'`dos/vga_gfx.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) dos/$(DEPDIR)/atari800-vga_gfx.Tpo dos/$(DEPDIR)/atari800-vga_gfx.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dos/vga_gfx.c' object='dos/atari800-vga_gfx.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dos/atari800-vga_gfx.o `test -f 'dos/vga_gfx.c' || echo '$(srcdir)/'`dos/vga_gfx.c

dos/atari800-vga_gfx.obj: dos/vga_gfx.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dos/atari800-vga_gfx.obj -MD -MP -MF dos/$(DEPDIR)/atari800-vga_gfx.Tpo -c -o dos/atari800-vga_gfx.obj `if test -f 'dos/vga_gfx.c'; then $(CYGPATH_W) 'dos/vga_gfx.c'; else $(CYGPATH_W) '$(srcdir)/dos/vga_gfx.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) dos/$(DEPDIR)/atari800-vga_gfx.Tpo dos/$(DEPDIR)/atari800-vga_gfx.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dos/vga_gfx.c' object='dos/atari800-vga_gfx.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dos/atari800-vga_gfx.obj `if test -f 'dos/vga_gfx.c'; then $(CYGPATH_W) 'dos/vga_gfx.c'; else $(CYGPATH_W) '$(srcdir)/dos/vga_gfx.c'; fi`

atari800-atari_curses.o: atari_curses.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-atari_curses.o -MD -MP -MF $(DEPDIR)/atari800-atari_curses.Tpo -c -o atari800-atari_curses.o `test -f 'atari_curses.c' || echo '$(srcdir)/'`atari_curses.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-atari_curses.Tpo $(DEPDIR)/atari800-atari_curses.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='atari_curses.c' object='atari800-atari_curses.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-atari_curses.o `test -f 'atari_curses.c' || echo '$(srcdir)/'`atari_curses.c

atari800-atari_curses.obj: atari_curses.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-atari_curses.obj -MD -MP -MF $(DEPDIR)/atari800-atari_curses.Tpo -c -o atari800-atari_curses.obj `if test -f 'atari_curses.c'; then $(CYGPATH_W) 'atari_curses.c'; else $(CYGPATH_W) '$(srcdir)/atari_curses.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-atari_curses.Tpo $(DEPDIR)/atari800-atari_curses.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='atari_curses.c' object='atari800-atari_curses.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-atari_curses.obj `if test -f 'atari_curses.c'; then $(CYGPATH_W) 'atari_curses.c'; else $(CYGPATH_W) '$(srcdir)/atari_curses.c'; fi`

atari800-atari_basic.o: atari_basic.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-atari_basic.o -MD -MP -MF $(DEPDIR)/atari800-atari_basic.Tpo -c -o atari800-atari_basic.o `test -f 'atari_basic.c' || echo '$(srcdir)/'`atari_basic.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-atari_basic.Tpo $(DEPDIR)/atari800-atari_basic.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='atari_basic.c' object='atari800-atari_basic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-atari_basic.o `test -f 'atari_basic.c' || echo '$(srcdir)/'`atari_basic.c

atari800-atari_basic.obj: atari_basic.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-atari_basic.obj -MD -MP -MF $(DEPDIR)/atari800-atari_basic.Tpo -c -o atari800-atari_basic.obj `if test -f 'atari_basic.c'; then $(CYGPATH_W) 'atari_basic.c'; else $(CYGPATH_W) '$(srcdir)/atari_basic.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-atari_basic.Tpo $(DEPDIR)/atari800-atari_basic.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='atari_basic.c' object='atari800-atari_basic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-atari_basic.obj `if test -f 'atari_basic.c'; then $(CYGPATH_W) 'atari_basic.c'; else $(CYGPATH_W) '$(srcdir)/atari_basic.c'; fi`

atari800-input.o: input.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-input.o -MD -MP -MF $(DEPDIR)/atari800-input.Tpo -c -o atari800-input.o `test -f 'input.c' || echo '$(srcdir)/'`input.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-input.Tpo $(DEPDIR)/atari800-input.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='input.c' object='atari800-input.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-input.o `test -f 'input.c' || echo '$(srcdir)/'`input.c

atari800-input.obj: input.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-input.obj -MD -MP -MF $(DEPDIR)/atari800-input.Tpo -c -o atari800-input.obj `if test -f 'input.c'; then $(CYGPATH_W) 'input.c'; else $(CYGPATH_W) '$(srcdir)/input.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-input.Tpo $(DEPDIR)/atari800-input.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='input.c' object='atari800-input.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-input.obj `if test -f 'input.c'; then $(CYGPATH_W) 'input.c'; else $(CYGPATH_W) '$(srcdir)/input.c'; fi`

atari800-statesav.o: statesav.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-statesav.o -MD -MP -MF $(DEPDIR)/atari800-statesav.Tpo -c -o atari800-statesav.o `test -f 'statesav.c' || echo '$(srcdir)/'`statesav.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-statesav.Tpo $(DEPDIR)/atari800-statesav.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='statesav.c' object='atari800-statesav.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-statesav.o `test -f 'statesav.c' || echo '$(srcdir)/'`statesav.c

atari800-statesav.obj: statesav.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-statesav.obj -MD -MP -MF $(DEPDIR)/atari800-statesav.Tpo -c -o atari800-statesav.obj `if test -f 'statesav.c'; then $(CYGPATH_W) 'statesav.c'; else $(CYGPATH_W) '$(srcdir)/statesav.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-statesav.Tpo $(DEPDIR)/atari800-statesav.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='statesav.c' object='atari800-statesav.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-statesav.obj `if test -f 'statesav.c'; then $(CYGPATH_W) 'statesav.c'; else $(CYGPATH_W) '$(srcdir)/statesav.c'; fi`

atari800-ui_basic.o: ui_basic.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-ui_basic.o -MD -MP -MF $(DEPDIR)/atari800-ui_basic.Tpo -c -o atari800-ui_basic.o `test -f 'ui_basic.c' || echo '$(srcdir)/'`ui_basic.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-ui_basic.Tpo $(DEPDIR)/atari800-ui_basic.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='ui_basic.c' object='atari800-ui_basic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-ui_basic.o `test -f 'ui_basic.c' || echo '$(srcdir)/'`ui_basic.c

atari800-ui_basic.obj: ui_basic.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-ui_basic.obj -MD -MP -MF $(DEPDIR)/atari800-ui_basic.Tpo -c -o atari800-ui_basic.obj `if test -f 'ui_basic.c'; then $(CYGPATH_W) 'ui_basic.c'; else $(CYGPATH_W) '$(srcdir)/ui_basic.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-ui_basic.Tpo $(DEPDIR)/atari800-ui_basic.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='ui_basic.c' object='atari800-ui_basic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-ui_basic.obj `if test -f 'ui_basic.c'; then $(CYGPATH_W) 'ui_basic.c'; else $(CYGPATH_W) '$(srcdir)/ui_basic.c'; fi`

atari800-ui.o: ui.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-ui.o -MD -MP -MF $(DEPDIR)/atari800-ui.Tpo -c -o atari800-ui.o `test -f 'ui.c' || echo '$(srcdir)/'`ui.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-ui.Tpo $(DEPDIR)/atari800-ui.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='ui.c' object='atari800-ui.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-ui.o `test -f 'ui.c' || echo '$(srcdir)/'`ui.c

atari800-ui.obj: ui.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-ui.obj -MD -MP -MF $(DEPDIR)/atari800-ui.Tpo -c -o atari800-ui.obj `if test -f 'ui.c'; then $(CYGPATH_W) 'ui.c'; else $(CYGPATH_W) '$(srcdir)/ui.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-ui.Tpo $(DEPDIR)/atari800-ui.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='ui.c' object='atari800-ui.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-ui.obj `if test -f 'ui.c'; then $(CYGPATH_W) 'ui.c'; else $(CYGPATH_W) '$(srcdir)/ui.c'; fi`

atari800-artifact.o: artifact.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-artifact.o -MD -MP -MF $(DEPDIR)/atari800-artifact.Tpo -c -o atari800-artifact.o `test -f 'artifact.c' || echo '$(srcdir)/'`artifact.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-artifact.Tpo $(DEPDIR)/atari800-artifact.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='artifact.c' object='atari800-artifact.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-artifact.o `test -f 'artifact.c' || echo '$(srcdir)/'`artifact.c

atari800-artifact.obj: artifact.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-artifact.obj -MD -MP -MF $(DEPDIR)/atari800-artifact.Tpo -c -o atari800-artifact.obj `if test -f 'artifact.c'; then $(CYGPATH_W) 'artifact.c'; else $(CYGPATH_W) '$(srcdir)/artifact.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-artifact.Tpo $(DEPDIR)/atari800-artifact.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='artifact.c' object='atari800-artifact.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-artifact.obj `if test -f 'artifact.c'; then $(CYGPATH_W) 'artifact.c'; else $(CYGPATH_W) '$(srcdir)/artifact.c'; fi`

atari800-colours.o: colours.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-colours.o -MD -MP -MF $(DEPDIR)/atari800-colours.Tpo -c -o atari800-colours.o `test -f 'colours.c' || echo '$(srcdir)/'`colours.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-colours.Tpo $(DEPDIR)/atari800-colours.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='colours.c' object='atari800-colours.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-colours.o `test -f 'colours.c' || echo '$(srcdir)/'`colours.c

atari800-colours.obj: colours.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-colours.obj -MD -MP -MF $(DEPDIR)/atari800-colours.Tpo -c -o atari800-colours.obj `if test -f 'colours.c'; then $(CYGPATH_W) 'colours.c'; else $(CYGPATH_W) '$(srcdir)/colours.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-colours.Tpo $(DEPDIR)/atari800-colours.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='colours.c' object='atari800-colours.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-colours.obj `if test -f 'colours.c'; then $(CYGPATH_W) 'colours.c'; else $(CYGPATH_W) '$(srcdir)/colours.c'; fi`

atari800-colours_ntsc.o: colours_ntsc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-colours_ntsc.o -MD -MP -MF $(DEPDIR)/atari800-colours_ntsc.Tpo -c -o atari800-colours_ntsc.o `test -f 'colours_ntsc.c' || echo '$(srcdir)/'`colours_ntsc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-colours_ntsc.Tpo $(DEPDIR)/atari800-colours_ntsc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='colours_ntsc.c' object='atari800-colours_ntsc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-colours_ntsc.o `test -f 'colours_ntsc.c' || echo '$(srcdir)/'`colours_ntsc.c

atari800-colours_ntsc.obj: colours_ntsc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-colours_ntsc.obj -MD -MP -MF $(DEPDIR)/atari800-colours_ntsc.Tpo -c -o atari800-colours_ntsc.obj `if test -f 'colours_ntsc.c'; then $(CYGPATH_W) 'colours_ntsc.c'; else $(CYGPATH_W) '$(srcdir)/colours_ntsc.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-colours_ntsc.Tpo $(DEPDIR)/atari800-colours_ntsc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='colours_ntsc.c' object='atari800-colours_ntsc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-colours_ntsc.obj `if test -f 'colours_ntsc.c'; then $(CYGPATH_W) 'colours_ntsc.c'; else $(CYGPATH_W) '$(srcdir)/colours_ntsc.c'; fi`

atari800-colours_pal.o: colours_pal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-colours_pal.o -MD -MP -MF $(DEPDIR)/atari800-colours_pal.Tpo -c -o atari800-colours_pal.o `test -f 'colours_pal.c' || echo '$(srcdir)/'`colours_pal.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-colours_pal.Tpo $(DEPDIR)/atari800-colours_pal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='colours_pal.c' object='atari800-colours_pal.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-colours_pal.o `test -f 'colours_pal.c' || echo '$(srcdir)/'`colours_pal.c

atari800-colours_pal.obj: colours_pal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-colours_pal.obj -MD -MP -MF $(DEPDIR)/atari800-colours_pal.Tpo -c -o atari800-colours_pal.obj `if test -f 'colours_pal.c'; then $(CYGPATH_W) 'colours_pal.c'; else $(CYGPATH_W) '$(srcdir)/colours_pal.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-colours_pal.Tpo $(DEPDIR)/atari800-colours_pal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='colours_pal.c' object='atari800-colours_pal.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-colours_pal.obj `if test -f 'colours_pal.c'; then $(CYGPATH_W) 'colours_pal.c'; else $(CYGPATH_W) '$(srcdir)/colours_pal.c'; fi`

atari800-colours_external.o: colours_external.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-colours_external.o -MD -MP -MF $(DEPDIR)/atari800-colours_external.Tpo -c -o atari800-colours_external.o `test -f 'colours_external.c' || echo '$(srcdir)/'`colours_external.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-colours_external.Tpo $(DEPDIR)/atari800-colours_external.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='colours_external.c' object='atari800-colours_external.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-colours_external.o `test -f 'colours_external.c' || echo '$(srcdir)/'`colours_external.c

atari800-colours_external.obj: colours_external.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-colours_external.obj -MD -MP -MF $(DEPDIR)/atari800-colours_external.Tpo -c -o atari800-colours_external.obj `if test -f 'colours_external.c'; then $(CYGPATH_W) 'colours_external.c'; else $(CYGPATH_W) '$(srcdir)/colours_external.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-colours_external.Tpo $(DEPDIR)/atari800-colours_external.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='colours_external.c' object='atari800-colours_external.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-colours_external.obj `if test -f 'colours_external.c'; then $(CYGPATH_W) 'colours_external.c'; else $(CYGPATH_W) '$(srcdir)/colours_external.c'; fi`

atari800-screen.o: screen.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-screen.o -MD -MP -MF $(DEPDIR)/atari800-screen.Tpo -c -o atari800-screen.o `test -f 'screen.c' || echo '$(srcdir)/'`screen.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-screen.Tpo $(DEPDIR)/atari800-screen.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='screen.c' object='atari800-screen.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-screen.o `test -f 'screen.c' || echo '$(srcdir)/'`screen.c

atari800-screen.obj: screen.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-screen.obj -MD -MP -MF $(DEPDIR)/atari800-screen.Tpo -c -o atari800-screen.obj `if test -f 'screen.c'; then $(CYGPATH_W) 'screen.c'; else $(CYGPATH_W) '$(srcdir)/screen.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-screen.Tpo $(DEPDIR)/atari800-screen.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='screen.c' object='atari800-screen.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-screen.obj `if test -f 'screen.c'; then $(CYGPATH_W) 'screen.c'; else $(CYGPATH_W) '$(srcdir)/screen.c'; fi`

codecs/atari800-image.o: codecs/image.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-image.o -MD -MP -MF codecs/$(DEPDIR)/atari800-image.Tpo -c -o codecs/atari800-image.o `test -f 'codecs/image.c' || echo '$(srcdir)/'`codecs/image.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-image.Tpo codecs/$(DEPDIR)/atari800-image.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/image.c' object='codecs/atari800-image.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-image.o `test -f 'codecs/image.c' || echo '$(srcdir)/'`codecs/image.c

codecs/atari800-image.obj: codecs/image.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-image.obj -MD -MP -MF codecs/$(DEPDIR)/atari800-image.Tpo -c -o codecs/atari800-image.obj `if test -f 'codecs/image.c'; then $(CYGPATH_W) 'codecs/image.c'; else $(CYGPATH_W) '$(srcdir)/codecs/image.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-image.Tpo codecs/$(DEPDIR)/atari800-image.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/image.c' object='codecs/atari800-image.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-image.obj `if test -f 'codecs/image.c'; then $(CYGPATH_W) 'codecs/image.c'; else $(CYGPATH_W) '$(srcdir)/codecs/image.c'; fi`

codecs/atari800-image_pcx.o: codecs/image_pcx.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-image_pcx.o -MD -MP -MF codecs/$(DEPDIR)/atari800-image_pcx.Tpo -c -o codecs/atari800-image_pcx.o `test -f 'codecs/image_pcx.c' || echo '$(srcdir)/'`codecs/image_pcx.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-image_pcx.Tpo codecs/$(DEPDIR)/atari800-image_pcx.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/image_pcx.c' object='codecs/atari800-image_pcx.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-image_pcx.o `test -f 'codecs/image_pcx.c' || echo '$(srcdir)/'`codecs/image_pcx.c

codecs/atari800-image_pcx.obj: codecs/image_pcx.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-image_pcx.obj -MD -MP -MF codecs/$(DEPDIR)/atari800-image_pcx.Tpo -c -o codecs/atari800-image_pcx.obj `if test -f 'codecs/image_pcx.c'; then $(CYGPATH_W) 'codecs/image_pcx.c'; else $(CYGPATH_W) '$(srcdir)/codecs/image_pcx.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-image_pcx.Tpo codecs/$(DEPDIR)/atari800-image_pcx.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/image_pcx.c' object='codecs/atari800-image_pcx.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-image_pcx.obj `if test -f 'codecs/image_pcx.c'; then $(CYGPATH_W) 'codecs/image_pcx.c'; else $(CYGPATH_W) '$(srcdir)/codecs/image_pcx.c'; fi`

codecs/atari800-image_png.o: codecs/image_png.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-image_png.o -MD -MP -MF codecs/$(DEPDIR)/atari800-image_png.Tpo -c -o codecs/atari800-image_png.o `test -f 'codecs/image_png.c' || echo '$(srcdir)/'`codecs/image_png.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-image_png.Tpo codecs/$(DEPDIR)/atari800-image_png.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/image_png.c' object='codecs/atari800-image_png.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-image_png.o `test -f 'codecs/image_png.c' || echo '$(srcdir)/'`codecs/image_png.c

codecs/atari800-image_png.obj: codecs/image_png.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT codecs/atari800-image_png.obj -MD -MP -MF codecs/$(DEPDIR)/atari800-image_png.Tpo -c -o codecs/atari800-image_png.obj `if test -f 'codecs/image_png.c'; then $(CYGPATH_W) 'codecs/image_png.c'; else $(CYGPATH_W) '$(srcdir)/codecs/image_png.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) codecs/$(DEPDIR)/atari800-image_png.Tpo codecs/$(DEPDIR)/atari800-image_png.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='codecs/image_png.c' object='codecs/atari800-image_png.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o codecs/atari800-image_png.obj `if test -f 'codecs/image_png.c'; then $(CYGPATH_W) 'codecs/image_png.c'; else $(CYGPATH_W) '$(srcdir)/codecs/image_png.c'; fi`

atari800-cycle_map.o: cycle_map.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-cycle_map.o -MD -MP -MF $(DEPDIR)/atari800-cycle_map.Tpo -c -o atari800-cycle_map.o `test -f 'cycle_map.c' || echo '$(srcdir)/'`cycle_map.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-cycle_map.Tpo $(DEPDIR)/atari800-cycle_map.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='cycle_map.c' object='atari800-cycle_map.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-cycle_map.o `test -f 'cycle_map.c' || echo '$(srcdir)/'`cycle_map.c

atari800-cycle_map.obj: cycle_map.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-cycle_map.obj -MD -MP -MF $(DEPDIR)/atari800-cycle_map.Tpo -c -o atari800-cycle_map.obj `if test -f 'cycle_map.c'; then $(CYGPATH_W) 'cycle_map.c'; else $(CYGPATH_W) '$(srcdir)/cycle_map.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-cycle_map.Tpo $(DEPDIR)/atari800-cycle_map.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='cycle_map.c' object='atari800-cycle_map.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-cycle_map.obj `if test -f 'cycle_map.c'; then $(CYGPATH_W) 'cycle_map.c'; else $(CYGPATH_W) '$(srcdir)/cycle_map.c'; fi`

roms/atari800-altirraos_800.o: roms/altirraos_800.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT roms/atari800-altirraos_800.o -MD -MP -MF roms/$(DEPDIR)/atari800-altirraos_800.Tpo -c -o roms/atari800-altirraos_800.o `test -f 'roms/altirraos_800.c' || echo '$(srcdir)/'`roms/altirraos_800.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) roms/$(DEPDIR)/atari800-altirraos_800.Tpo roms/$(DEPDIR)/atari800-altirraos_800.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='roms/altirraos_800.c' object='roms/atari800-altirraos_800.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o roms/atari800-altirraos_800.o `test -f 'roms/altirraos_800.c' || echo '$(srcdir)/'`roms/altirraos_800.c

roms/atari800-altirraos_800.obj: roms/altirraos_800.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT roms/atari800-altirraos_800.obj -MD -MP -MF roms/$(DEPDIR)/atari800-altirraos_800.Tpo -c -o roms/atari800-altirraos_800.obj `if test -f 'roms/altirraos_800.c'; then $(CYGPATH_W) 'roms/altirraos_800.c'; else $(CYGPATH_W) '$(srcdir)/roms/altirraos_800.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) roms/$(DEPDIR)/atari800-altirraos_800.Tpo roms/$(DEPDIR)/atari800-altirraos_800.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='roms/altirraos_800.c' object='roms/atari800-altirraos_800.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o roms/atari800-altirraos_800.obj `if test -f 'roms/altirraos_800.c'; then $(CYGPATH_W) 'roms/altirraos_800.c'; else $(CYGPATH_W) '$(srcdir)/roms/altirraos_800.c'; fi`

roms/atari800-altirraos_xl.o: roms/altirraos_xl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT roms/atari800-altirraos_xl.o -MD -MP -MF roms/$(DEPDIR)/atari800-altirraos_xl.Tpo -c -o roms/atari800-altirraos_xl.o `test -f 'roms/altirraos_xl.c' || echo '$(srcdir)/'`roms/altirraos_xl.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) roms/$(DEPDIR)/atari800-altirraos_xl.Tpo roms/$(DEPDIR)/atari800-altirraos_xl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='roms/altirraos_xl.c' object='roms/atari800-altirraos_xl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o roms/atari800-altirraos_xl.o `test -f 'roms/altirraos_xl.c' || echo '$(srcdir)/'`roms/altirraos_xl.c

roms/atari800-altirraos_xl.obj: roms/altirraos_xl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT roms/atari800-altirraos_xl.obj -MD -MP -MF roms/$(DEPDIR)/atari800-altirraos_xl.Tpo -c -o roms/atari800-altirraos_xl.obj `if test -f 'roms/altirraos_xl.c'; then $(CYGPATH_W) 'roms/altirraos_xl.c'; else $(CYGPATH_W) '$(srcdir)/roms/altirraos_xl.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) roms/$(DEPDIR)/atari800-altirraos_xl.Tpo roms/$(DEPDIR)/atari800-altirraos_xl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='roms/altirraos_xl.c' object='roms/atari800-altirraos_xl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o roms/atari800-altirraos_xl.obj `if test -f 'roms/altirraos_xl.c'; then $(CYGPATH_W) 'roms/altirraos_xl.c'; else $(CYGPATH_W) '$(srcdir)/roms/altirraos_xl.c'; fi`

roms/atari800-altirra_basic.o: roms/altirra_basic.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT roms/atari800-altirra_basic.o -MD -MP -MF roms/$(DEPDIR)/atari800-altirra_basic.Tpo -c -o roms/atari800-altirra_basic.o `test -f 'roms/altirra_basic.c' || echo '$(srcdir)/'`roms/altirra_basic.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) roms/$(DEPDIR)/atari800-altirra_basic.Tpo roms/$(DEPDIR)/atari800-altirra_basic.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='roms/altirra_basic.c' object='roms/atari800-altirra_basic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o roms/atari800-altirra_basic.o `test -f 'roms/altirra_basic.c' || echo '$(srcdir)/'`roms/altirra_basic.c

roms/atari800-altirra_basic.obj: roms/altirra_basic.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT roms/atari800-altirra_basic.obj -MD -MP -MF roms/$(DEPDIR)/atari800-altirra_basic.Tpo -c -o roms/atari800-altirra_basic.obj `if test -f 'roms/altirra_basic.c'; then $(CYGPATH_W) 'roms/altirra_basic.c'; else $(CYGPATH_W) '$(srcdir)/roms/altirra_basic.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) roms/$(DEPDIR)/atari800-altirra_basic.Tpo roms/$(DEPDIR)/atari800-altirra_basic.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='roms/altirra_basic.c' object='roms/atari800-altirra_basic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o roms/atari800-altirra_basic.obj `if test -f 'roms/altirra_basic.c'; then $(CYGPATH_W) 'roms/altirra_basic.c'; else $(CYGPATH_W) '$(srcdir)/roms/altirra_basic.c'; fi`

atari800-pbi_mio.o: pbi_mio.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pbi_mio.o -MD -MP -MF $(DEPDIR)/atari800-pbi_mio.Tpo -c -o atari800-pbi_mio.o `test -f 'pbi_mio.c' || echo '$(srcdir)/'`pbi_mio.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pbi_mio.Tpo $(DEPDIR)/atari800-pbi_mio.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pbi_mio.c' object='atari800-pbi_mio.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pbi_mio.o `test -f 'pbi_mio.c' || echo '$(srcdir)/'`pbi_mio.c

atari800-pbi_mio.obj: pbi_mio.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pbi_mio.obj -MD -MP -MF $(DEPDIR)/atari800-pbi_mio.Tpo -c -o atari800-pbi_mio.obj `if test -f 'pbi_mio.c'; then $(CYGPATH_W) 'pbi_mio.c'; else $(CYGPATH_W) '$(srcdir)/pbi_mio.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pbi_mio.Tpo $(DEPDIR)/atari800-pbi_mio.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pbi_mio.c' object='atari800-pbi_mio.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pbi_mio.obj `if test -f 'pbi_mio.c'; then $(CYGPATH_W) 'pbi_mio.c'; else $(CYGPATH_W) '$(srcdir)/pbi_mio.c'; fi`

atari800-pbi_bb.o: pbi_bb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pbi_bb.o -MD -MP -MF $(DEPDIR)/atari800-pbi_bb.Tpo -c -o atari800-pbi_bb.o `test -f 'pbi_bb.c' || echo '$(srcdir)/'`pbi_bb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pbi_bb.Tpo $(DEPDIR)/atari800-pbi_bb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pbi_bb.c' object='atari800-pbi_bb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pbi_bb.o `test -f 'pbi_bb.c' || echo '$(srcdir)/'`pbi_bb.c

atari800-pbi_bb.obj: pbi_bb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pbi_bb.obj -MD -MP -MF $(DEPDIR)/atari800-pbi_bb.Tpo -c -o atari800-pbi_bb.obj `if test -f 'pbi_bb.c'; then $(CYGPATH_W) 'pbi_bb.c'; else $(CYGPATH_W) '$(srcdir)/pbi_bb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pbi_bb.Tpo $(DEPDIR)/atari800-pbi_bb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pbi_bb.c' object='atari800-pbi_bb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pbi_bb.obj `if test -f 'pbi_bb.c'; then $(CYGPATH_W) 'pbi_bb.c'; else $(CYGPATH_W) '$(srcdir)/pbi_bb.c'; fi`

atari800-pbi_scsi.o: pbi_scsi.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pbi_scsi.o -MD -MP -MF $(DEPDIR)/atari800-pbi_scsi.Tpo -c -o atari800-pbi_scsi.o `test -f 'pbi_scsi.c' || echo '$(srcdir)/'`pbi_scsi.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pbi_scsi.Tpo $(DEPDIR)/atari800-pbi_scsi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pbi_scsi.c' object='atari800-pbi_scsi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pbi_scsi.o `test -f 'pbi_scsi.c' || echo '$(srcdir)/'`pbi_scsi.c

atari800-pbi_scsi.obj: pbi_scsi.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pbi_scsi.obj -MD -MP -MF $(DEPDIR)/atari800-pbi_scsi.Tpo -c -o atari800-pbi_scsi.obj `if test -f 'pbi_scsi.c'; then $(CYGPATH_W) 'pbi_scsi.c'; else $(CYGPATH_W) '$(srcdir)/pbi_scsi.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pbi_scsi.Tpo $(DEPDIR)/atari800-pbi_scsi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pbi_scsi.c' object='atari800-pbi_scsi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pbi_scsi.obj `if test -f 'pbi_scsi.c'; then $(CYGPATH_W) 'pbi_scsi.c'; else $(CYGPATH_W) '$(srcdir)/pbi_scsi.c'; fi`

atari800-pbi_xld.o: pbi_xld.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pbi_xld.o -MD -MP -MF $(DEPDIR)/atari800-pbi_xld.Tpo -c -o atari800-pbi_xld.o `test -f 'pbi_xld.c' || echo '$(srcdir)/'`pbi_xld.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pbi_xld.Tpo $(DEPDIR)/atari800-pbi_xld.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pbi_xld.c' object='atari800-pbi_xld.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pbi_xld.o `test -f 'pbi_xld.c' || echo '$(srcdir)/'`pbi_xld.c

atari800-pbi_xld.obj: pbi_xld.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pbi_xld.obj -MD -MP -MF $(DEPDIR)/atari800-pbi_xld.Tpo -c -o atari800-pbi_xld.obj `if test -f 'pbi_xld.c'; then $(CYGPATH_W) 'pbi_xld.c'; else $(CYGPATH_W) '$(srcdir)/pbi_xld.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pbi_xld.Tpo $(DEPDIR)/atari800-pbi_xld.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pbi_xld.c' object='atari800-pbi_xld.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pbi_xld.obj `if test -f 'pbi_xld.c'; then $(CYGPATH_W) 'pbi_xld.c'; else $(CYGPATH_W) '$(srcdir)/pbi_xld.c'; fi`

atari800-voicebox.o: voicebox.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-voicebox.o -MD -MP -MF $(DEPDIR)/atari800-voicebox.Tpo -c -o atari800-voicebox.o `test -f 'voicebox.c' || echo '$(srcdir)/'`voicebox.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-voicebox.Tpo $(DEPDIR)/atari800-voicebox.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='voicebox.c' object='atari800-voicebox.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-voicebox.o `test -f 'voicebox.c' || echo '$(srcdir)/'`voicebox.c

atari800-voicebox.obj: voicebox.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-voicebox.obj -MD -MP -MF $(DEPDIR)/atari800-voicebox.Tpo -c -o atari800-voicebox.obj `if test -f 'voicebox.c'; then $(CYGPATH_W) 'voicebox.c'; else $(CYGPATH_W) '$(srcdir)/voicebox.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-voicebox.Tpo $(DEPDIR)/atari800-voicebox.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='voicebox.c' object='atari800-voicebox.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-voicebox.obj `if test -f 'voicebox.c'; then $(CYGPATH_W) 'voicebox.c'; else $(CYGPATH_W) '$(srcdir)/voicebox.c'; fi`

atari800-votrax.o: votrax.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-votrax.o -MD -MP -MF $(DEPDIR)/atari800-votrax.Tpo -c -o atari800-votrax.o `test -f 'votrax.c' || echo '$(srcdir)/'`votrax.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-votrax.Tpo $(DEPDIR)/atari800-votrax.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='votrax.c' object='atari800-votrax.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-votrax.o `test -f 'votrax.c' || echo '$(srcdir)/'`votrax.c

atari800-votrax.obj: votrax.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-votrax.obj -MD -MP -MF $(DEPDIR)/atari800-votrax.Tpo -c -o atari800-votrax.obj `if test -f 'votrax.c'; then $(CYGPATH_W) 'votrax.c'; else $(CYGPATH_W) '$(srcdir)/votrax.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-votrax.Tpo $(DEPDIR)/atari800-votrax.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='votrax.c' object='atari800-votrax.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-votrax.obj `if test -f 'votrax.c'; then $(CYGPATH_W) 'votrax.c'; else $(CYGPATH_W) '$(srcdir)/votrax.c'; fi`

atari800-votraxsnd.o: votraxsnd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-votraxsnd.o -MD -MP -MF $(DEPDIR)/atari800-votraxsnd.Tpo -c -o atari800-votraxsnd.o `test -f 'votraxsnd.c' || echo '$(srcdir)/'`votraxsnd.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-votraxsnd.Tpo $(DEPDIR)/atari800-votraxsnd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='votraxsnd.c' object='atari800-votraxsnd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-votraxsnd.o `test -f 'votraxsnd.c' || echo '$(srcdir)/'`votraxsnd.c

atari800-votraxsnd.obj: votraxsnd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-votraxsnd.obj -MD -MP -MF $(DEPDIR)/atari800-votraxsnd.Tpo -c -o atari800-votraxsnd.obj `if test -f 'votraxsnd.c'; then $(CYGPATH_W) 'votraxsnd.c'; else $(CYGPATH_W) '$(srcdir)/votraxsnd.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-votraxsnd.Tpo $(DEPDIR)/atari800-votraxsnd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='votraxsnd.c' object='atari800-votraxsnd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-votraxsnd.obj `if test -f 'votraxsnd.c'; then $(CYGPATH_W) 'votraxsnd.c'; else $(CYGPATH_W) '$(srcdir)/votraxsnd.c'; fi`

atari800-ide.o: ide.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-ide.o -MD -MP -MF $(DEPDIR)/atari800-ide.Tpo -c -o atari800-ide.o `test -f 'ide.c' || echo '$(srcdir)/'`ide.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-ide.Tpo $(DEPDIR)/atari800-ide.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='ide.c' object='atari800-ide.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-ide.o `test -f 'ide.c' || echo '$(srcdir)/'`ide.c

atari800-ide.obj: ide.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-ide.obj -MD -MP -MF $(DEPDIR)/atari800-ide.Tpo -c -o atari800-ide.obj `if test -f 'ide.c'; then $(CYGPATH_W) 'ide.c'; else $(CYGPATH_W) '$(srcdir)/ide.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-ide.Tpo $(DEPDIR)/atari800-ide.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='ide.c' object='atari800-ide.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-ide.obj `if test -f 'ide.c'; then $(CYGPATH_W) 'ide.c'; else $(CYGPATH_W) '$(srcdir)/ide.c'; fi`

sdl/atari800-video_gl.o: sdl/video_gl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdl/atari800-video_gl.o -MD -MP -MF sdl/$(DEPDIR)/atari800-video_gl.Tpo -c -o sdl/atari800-video_gl.o `test -f 'sdl/video_gl.c' || echo '$(srcdir)/'`sdl/video_gl.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) sdl/$(DEPDIR)/atari800-video_gl.Tpo sdl/$(DEPDIR)/atari800-video_gl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sdl/video_gl.c' object='sdl/atari800-video_gl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdl/atari800-video_gl.o `test -f 'sdl/video_gl.c' || echo '$(srcdir)/'`sdl/video_gl.c

sdl/atari800-video_gl.obj: sdl/video_gl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sdl/atari800-video_gl.obj -MD -MP -MF sdl/$(DEPDIR)/atari800-video_gl.Tpo -c -o sdl/atari800-video_gl.obj `if test -f 'sdl/video_gl.c'; then $(CYGPATH_W) 'sdl/video_gl.c'; else $(CYGPATH_W) '$(srcdir)/sdl/video_gl.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) sdl/$(DEPDIR)/atari800-video_gl.Tpo sdl/$(DEPDIR)/atari800-video_gl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sdl/video_gl.c' object='sdl/atari800-video_gl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sdl/atari800-video_gl.obj `if test -f 'sdl/video_gl.c'; then $(CYGPATH_W) 'sdl/video_gl.c'; else $(CYGPATH_W) '$(srcdir)/sdl/video_gl.c'; fi`

atari800-xep80.o: xep80.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-xep80.o -MD -MP -MF $(DEPDIR)/atari800-xep80.Tpo -c -o atari800-xep80.o `test -f 'xep80.c' || echo '$(srcdir)/'`xep80.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-xep80.Tpo $(DEPDIR)/atari800-xep80.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='xep80.c' object='atari800-xep80.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-xep80.o `test -f 'xep80.c' || echo '$(srcdir)/'`xep80.c

atari800-xep80.obj: xep80.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-xep80.obj -MD -MP -MF $(DEPDIR)/atari800-xep80.Tpo -c -o atari800-xep80.obj `if test -f 'xep80.c'; then $(CYGPATH_W) 'xep80.c'; else $(CYGPATH_W) '$(srcdir)/xep80.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-xep80.Tpo $(DEPDIR)/atari800-xep80.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='xep80.c' object='atari800-xep80.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-xep80.obj `if test -f 'xep80.c'; then $(CYGPATH_W) 'xep80.c'; else $(CYGPATH_W) '$(srcdir)/xep80.c'; fi`

atari800-xep80_fonts.o: xep80_fonts.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-xep80_fonts.o -MD -MP -MF $(DEPDIR)/atari800-xep80_fonts.Tpo -c -o atari800-xep80_fonts.o `test -f 'xep80_fonts.c' || echo '$(srcdir)/'`xep80_fonts.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-xep80_fonts.Tpo $(DEPDIR)/atari800-xep80_fonts.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='xep80_fonts.c' object='atari800-xep80_fonts.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-xep80_fonts.o `test -f 'xep80_fonts.c' || echo '$(srcdir)/'`xep80_fonts.c

atari800-xep80_fonts.obj: xep80_fonts.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-xep80_fonts.obj -MD -MP -MF $(DEPDIR)/atari800-xep80_fonts.Tpo -c -o atari800-xep80_fonts.obj `if test -f 'xep80_fonts.c'; then $(CYGPATH_W) 'xep80_fonts.c'; else $(CYGPATH_W) '$(srcdir)/xep80_fonts.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-xep80_fonts.Tpo $(DEPDIR)/atari800-xep80_fonts.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='xep80_fonts.c' object='atari800-xep80_fonts.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-xep80_fonts.obj `if test -f 'xep80_fonts.c'; then $(CYGPATH_W) 'xep80_fonts.c'; else $(CYGPATH_W) '$(srcdir)/xep80_fonts.c'; fi`

atari800-filter_ntsc.o: filter_ntsc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-filter_ntsc.o -MD -MP -MF $(DEPDIR)/atari800-filter_ntsc.Tpo -c -o atari800-filter_ntsc.o `test -f 'filter_ntsc.c' || echo '$(srcdir)/'`filter_ntsc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-filter_ntsc.Tpo $(DEPDIR)/atari800-filter_ntsc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='filter_ntsc.c' object='atari800-filter_ntsc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-filter_ntsc.o `test -f 'filter_ntsc.c' || echo '$(srcdir)/'`filter_ntsc.c

atari800-filter_ntsc.obj: filter_ntsc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-filter_ntsc.obj -MD -MP -MF $(DEPDIR)/atari800-filter_ntsc.Tpo -c -o atari800-filter_ntsc.obj `if test -f 'filter_ntsc.c'; then $(CYGPATH_W) 'filter_ntsc.c'; else $(CYGPATH_W) '$(srcdir)/filter_ntsc.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-filter_ntsc.Tpo $(DEPDIR)/atari800-filter_ntsc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='filter_ntsc.c' object='atari800-filter_ntsc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-filter_ntsc.obj `if test -f 'filter_ntsc.c'; then $(CYGPATH_W) 'filter_ntsc.c'; else $(CYGPATH_W) '$(srcdir)/filter_ntsc.c'; fi`

atari_ntsc/atari800-atari_ntsc.o: atari_ntsc/atari_ntsc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari_ntsc/atari800-atari_ntsc.o -MD -MP -MF atari_ntsc/$(DEPDIR)/atari800-atari_ntsc.Tpo -c -o atari_ntsc/atari800-atari_ntsc.o `test -f 'atari_ntsc/atari_ntsc.c' || echo '$(srcdir)/'`atari_ntsc/atari_ntsc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) atari_ntsc/$(DEPDIR)/atari800-atari_ntsc.Tpo atari_ntsc/$(DEPDIR)/atari800-atari_ntsc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='atari_ntsc/atari_ntsc.c' object='atari_ntsc/atari800-atari_ntsc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari_ntsc/atari800-atari_ntsc.o `test -f 'atari_ntsc/atari_ntsc.c' || echo '$(srcdir)/'`atari_ntsc/atari_ntsc.c

atari_ntsc/atari800-atari_ntsc.obj: atari_ntsc/atari_ntsc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari_ntsc/atari800-atari_ntsc.obj -MD -MP -MF atari_ntsc/$(DEPDIR)/atari800-atari_ntsc.Tpo -c -o atari_ntsc/atari800-atari_ntsc.obj `if test -f 'atari_ntsc/atari_ntsc.c'; then $(CYGPATH_W) 'atari_ntsc/atari_ntsc.c'; else $(CYGPATH_W) '$(srcdir)/atari_ntsc/atari_ntsc.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) atari_ntsc/$(DEPDIR)/atari800-atari_ntsc.Tpo atari_ntsc/$(DEPDIR)/atari800-atari_ntsc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='atari_ntsc/atari_ntsc.c' object='atari_ntsc/atari800-atari_ntsc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari_ntsc/atari800-atari_ntsc.obj `if test -f 'atari_ntsc/atari_ntsc.c'; then $(CYGPATH_W) 'atari_ntsc/atari_ntsc.c'; else $(CYGPATH_W) '$(srcdir)/atari_ntsc/atari_ntsc.c'; fi`

atari800-pal_blending.o: pal_blending.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pal_blending.o -MD -MP -MF $(DEPDIR)/atari800-pal_blending.Tpo -c -o atari800-pal_blending.o `test -f 'pal_blending.c' || echo '$(srcdir)/'`pal_blending.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pal_blending.Tpo $(DEPDIR)/atari800-pal_blending.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pal_blending.c' object='atari800-pal_blending.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pal_blending.o `test -f 'pal_blending.c' || echo '$(srcdir)/'`pal_blending.c

atari800-pal_blending.obj: pal_blending.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-pal_blending.obj -MD -MP -MF $(DEPDIR)/atari800-pal_blending.Tpo -c -o atari800-pal_blending.obj `if test -f 'pal_blending.c'; then $(CYGPATH_W) 'pal_blending.c'; else $(CYGPATH_W) '$(srcdir)/pal_blending.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-pal_blending.Tpo $(DEPDIR)/atari800-pal_blending.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pal_blending.c' object='atari800-pal_blending.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-pal_blending.obj `if test -f 'pal_blending.c'; then $(CYGPATH_W) 'pal_blending.c'; else $(CYGPATH_W) '$(srcdir)/pal_blending.c'; fi`

atari800-rdevice.o: rdevice.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-rdevice.o -MD -MP -MF $(DEPDIR)/atari800-rdevice.Tpo -c -o atari800-rdevice.o `test -f 'rdevice.c' || echo '$(srcdir)/'`rdevice.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-rdevice.Tpo $(DEPDIR)/atari800-rdevice.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='rdevice.c' object='atari800-rdevice.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-rdevice.o `test -f 'rdevice.c' || echo '$(srcdir)/'`rdevice.c

atari800-rdevice.obj: rdevice.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT atari800-rdevice.obj -MD -MP -MF $(DEPDIR)/atari800-rdevice.Tpo -c -o atari800-rdevice.obj `if test -f 'rdevice.c'; then $(CYGPATH_W) 'rdevice.c'; else $(CYGPATH_W) '$(srcdir)/rdevice.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/atari800-rdevice.Tpo $(DEPDIR)/atari800-rdevice.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='rdevice.c' object='atari800-rdevice.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(atari800_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o atari800-rdevice.obj `if test -f 'rdevice.c'; then $(CYGPATH_W) 'rdevice.c'; else $(CYGPATH_W) '$(srcdir)/rdevice.c'; fi`

libatari800/guess_settings-guess_settings.o: libatari800/guess_settings.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(guess_settings_CFLAGS) $(CFLAGS) -MT libatari800/guess_settings-guess_settings.o -MD -MP -MF libatari800/$(DEPDIR)/guess_settings-guess_settings.Tpo -c -o libatari800/guess_settings-guess_settings.o `test -f 'libatari800/guess_settings.c' || echo '$(srcdir)/'`libatari800/guess_settings.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) libatari800/$(DEPDIR)/guess_settings-guess_settings.Tpo libatari800/$(DEPDIR)/guess_settings-guess_settings.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='libatari800/guess_settings.c' object='libatari800/guess_settings-guess_settings.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(guess_settings_CFLAGS) $(CFLAGS) -c -o libatari800/guess_settings-guess_settings.o `test -f 'libatari800/guess_settings.c' || echo '$(srcdir)/'`libatari800/guess_settings.c

libatari800/guess_settings-guess_settings.obj: libatari800/guess_settings.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(guess_settings_CFLAGS) $(CFLAGS) -MT libatari800/guess_settings-guess_settings.obj -MD -MP -MF libatari800/$(DEPDIR)/guess_settings-guess_settings.Tpo -c -o libatari800/guess_settings-guess_settings.obj `if test -f 'libatari800/guess_settings.c'; then $(CYGPATH_W) 'libatari800/guess_settings.c'; else $(CYGPATH_W) '$(srcdir)/libatari800/guess_settings.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) libatari800/$(DEPDIR)/guess_settings-guess_settings.Tpo libatari800/$(DEPDIR)/guess_settings-guess_settings.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='libatari800/guess_settings.c' object='libatari800/guess_settings-guess_settings.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(guess_settings_CFLAGS) $(CFLAGS) -c -o libatari800/guess_settings-guess_settings.obj `if test -f 'libatari800/guess_settings.c'; then $(CYGPATH_W) 'libatari800/guess_settings.c'; else $(CYGPATH_W) '$(srcdir)/libatari800/guess_settings.c'; fi`

libatari800/libatari800_test-libatari800_test.o: libatari800/libatari800_test.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libatari800_test_CFLAGS) $(CFLAGS) -MT libatari800/libatari800_test-libatari800_test.o -MD -MP -MF libatari800/$(DEPDIR)/libatari800_test-libatari800_test.Tpo -c -o libatari800/libatari800_test-libatari800_test.o `test -f 'libatari800/libatari800_test.c' || echo '$(srcdir)/'`libatari800/libatari800_test.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) libatari800/$(DEPDIR)/libatari800_test-libatari800_test.Tpo libatari800/$(DEPDIR)/libatari800_test-libatari800_test.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='libatari800/libatari800_test.c' object='libatari800/libatari800_test-libatari800_test.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libatari800_test_CFLAGS) $(CFLAGS) -c -o libatari800/libatari800_test-libatari800_test.o `test -f 'libatari800/libatari800_test.c' || echo '$(srcdir)/'`libatari800/libatari800_test.c

libatari800/libatari800_test-libatari800_test.obj: libatari800/libatari800_test.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libatari800_test_CFLAGS) $(CFLAGS) -MT libatari800/libatari800_test-libatari800_test.obj -MD -MP -MF libatari800/$(DEPDIR)/libatari800_test-libatari800_test.Tpo -c -o libatari800/libatari800_test-libatari800_test.obj `if test -f 'libatari800/libatari800_test.c'; then $(CYGPATH_W) 'libatari800/libatari800_test.c'; else $(CYGPATH_W) '$(srcdir)/libatari800/libatari800_test.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) libatari800/$(DEPDIR)/libatari800_test-libatari800_test.Tpo libatari800/$(DEPDIR)/libatari800_test-libatari800_test.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='libatari800/libatari800_test.c' object='libatari800/libatari800_test-libatari800_test.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libatari800_test_CFLAGS) $(CFLAGS) -c -o libatari800/libatari800_test-libatari800_test.obj `if test -f 'libatari800/libatari800_test.c'; then $(CYGPATH_W) 'libatari800/libatari800_test.c'; else $(CYGPATH_W) '$(srcdir)/libatari800/libatari800_test.c'; fi`

.s.o:
	$(AM_V_CCAS)$(CCASCOMPILE) -c -o $@ $<

.s.obj:
	$(AM_V_CCAS)$(CCASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
install-docDATA: $(doc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(doc_DATA)'; test -n "$(docdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(docdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(docdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(doc_DATA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(docdir)'; $(am__uninstall_files_from_dir)
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
@CONFIGURE_HOST_JAVANVM_FALSE@@CONFIGURE_TARGET_ANDROID_FALSE@all-local:
@CONFIGURE_TARGET_LIBATARI800_TRUE@all-local:
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS) config.h \
		all-local
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(docdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f atari_ntsc/$(DEPDIR)/$(am__dirstamp)
	-rm -f atari_ntsc/$(am__dirstamp)
	-rm -f codecs/$(DEPDIR)/$(am__dirstamp)
	-rm -f codecs/$(am__dirstamp)
	-rm -f dos/$(DEPDIR)/$(am__dirstamp)
	-rm -f dos/$(am__dirstamp)
	-rm -f falcon/$(DEPDIR)/$(am__dirstamp)
	-rm -f falcon/$(am__dirstamp)
	-rm -f gles2/$(DEPDIR)/$(am__dirstamp)
	-rm -f gles2/$(am__dirstamp)
	-rm -f javanvm/$(DEPDIR)/$(am__dirstamp)
	-rm -f javanvm/$(am__dirstamp)
	-rm -f libatari800/$(DEPDIR)/$(am__dirstamp)
	-rm -f libatari800/$(am__dirstamp)
	-rm -f roms/$(DEPDIR)/$(am__dirstamp)
	-rm -f roms/$(am__dirstamp)
	-rm -f sdl/$(DEPDIR)/$(am__dirstamp)
	-rm -f sdl/$(am__dirstamp)
	-rm -f win32/$(DEPDIR)/$(am__dirstamp)
	-rm -f win32/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	clean-noinstLIBRARIES clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) atari_ntsc/$(DEPDIR) codecs/$(DEPDIR) dos/$(DEPDIR) falcon/$(DEPDIR) gles2/$(DEPDIR) javanvm/$(DEPDIR) libatari800/$(DEPDIR) roms/$(DEPDIR) sdl/$(DEPDIR) win32/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-data-local install-docDATA \
	install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) atari_ntsc/$(DEPDIR) codecs/$(DEPDIR) dos/$(DEPDIR) falcon/$(DEPDIR) gles2/$(DEPDIR) javanvm/$(DEPDIR) libatari800/$(DEPDIR) roms/$(DEPDIR) sdl/$(DEPDIR) win32/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-docDATA \
	uninstall-includeHEADERS uninstall-libLIBRARIES \
	uninstall-local

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am all-local check check-am clean \
	clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	clean-noinstLIBRARIES clean-noinstPROGRAMS cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-hdr distclean-tags distdir dvi dvi-am html html-am \
	info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-data-local \
	install-docDATA install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-docDATA \
	uninstall-includeHEADERS uninstall-libLIBRARIES \
	uninstall-local

.PRECIOUS: Makefile

@CONFIGURE_HOST_JAVANVM_TRUE@@CONFIGURE_TARGET_LIBATARI800_FALSE@all-local:: $(TARGET_BASE_NAME).jar
@CONFIGURE_HOST_JAVANVM_FALSE@@CONFIGURE_TARGET_ANDROID_TRUE@@CONFIGURE_TARGET_LIBATARI800_FALSE@all-local:: android

# A special rule for SDL_win32_main.c to suppress warnings since this file is
# from SDL and should not have to be modified
sdl/SDL_win32_main.o: sdl/SDL_win32_main.c
	$(CC) -c -o $@ $(AM_CPPFLAGS) $(CFLAGS) $(DEFAULT_INCLUDES) $(CPPFLAGS) $(DEFS) -Wno-missing-declarations -Wno-missing-prototypes $<

ide.o: ide.c ide.h ide_internal.h
	$(CC) -c -o $@ $(AM_CPPFLAGS) $(CFLAGS_NOANSI) $(DEFAULT_INCLUDES) $(CPPFLAGS) $(DEFS) -Wno-missing-declarations -Wno-missing-prototypes $<

win32/atari.ro: win32/atari.rc
	$(WINDRES) -o $@ --output-format coff --target pe-i386 --define WIN32 --define __MINGW32__ $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $< 

# some special rules for some win32 source files which are actually C++
win32/main.o: win32/main.c
	$(CC) -x c++ -c -o $@ $(AM_CPPFLAGS) $(CFLAGS_NOANSI) $(DEFAULT_INCLUDES) $(CPPFLAGS) $(DEFS) -Wno-missing-declarations -Wno-missing-prototypes $<
win32/render_gdiplus.o: win32/render_gdiplus.c
	$(CC) -x c++ -c -o $@ $(AM_CPPFLAGS) $(CFLAGS_NOANSI) $(DEFAULT_INCLUDES) $(CPPFLAGS) $(DEFS) -Wno-missing-declarations -Wno-missing-prototypes $<
win32/render_direct3d.o: win32/render_direct3d.c
	$(CC) -x c++ -c -o $@ $(AM_CPPFLAGS) $(CFLAGS_NOANSI) $(DEFAULT_INCLUDES) $(CPPFLAGS) $(DEFS) -Wno-missing-declarations -Wno-missing-prototypes $<

.asm.o:
	$(CCAS) $(CCASFLAGS) -o $@ $<

@CONFIGURE_HOST_JAVANVM_TRUE@$(TARGET_BASE_NAME).class: javanvm/$(TARGET_BASE_NAME).java | $(TARGET_BASE_NAME)_runtime.class
@CONFIGURE_HOST_JAVANVM_TRUE@	$(JAVAC) -d . $(JAVACFLAGS) $<

$(TARGET_BASE_NAME)$(RUNTIME).class: $(TARGET)
#To compile using java bytecode directly:
#	$(JAVA) $(JAVAFLAGS) org.ibex.nestedvm.Compiler -o UnixRuntime -outfile $@ $(TARGET_BASE_NAME)$(RUNTIME) $(TARGET)
	$(JAVA) $(JAVAFLAGS) org.ibex.nestedvm.Compiler -o UnixRuntime -outformat javasource -outfile $(TARGET_BASE_NAME)$(RUNTIME).java $(TARGET_BASE_NAME)$(RUNTIME) $(TARGET)
	$(JAVAC) -d . $(JAVACFLAGS) -J-Xmx256m $(TARGET_BASE_NAME)$(RUNTIME).java

$(TARGET_BASE_NAME).jar: $(TARGET_BASE_NAME).class $(TARGET_BASE_NAME)$(RUNTIME).class
	printf "Manifest-Version: 1.0\nMain-Class: $(TARGET_BASE_NAME)\nClass-Path: unix_runtime.jar\n" > .manifest
	jar cfm $(TARGET_BASE_NAME).jar .manifest *.class

# Allow parallel execution in sub-make with '+'
android:
	+ $(NDK_BUILD) -C android
	ant -f android/build.xml debug
.PHONY: android

install-data-local:
	$(mkinstalldirs) $(DESTDIR)$(man1dir)
	$(INSTALL_DATA) $(srcdir)/atari800.man ${DESTDIR}${man1dir}/atari800.1

uninstall-local:
	$(RM) ${DESTDIR}${man1dir}/atari800.1*

readme.html: $(TARGET)
	./$(TARGET) -help </dev/null | $(top_srcdir)/util/usage2html.pl \
		$(top_srcdir)/DOC/readme.html.in $(top_srcdir)/DOC/USAGE $(srcdir)/atari.h > $@

doc: readme.html

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
